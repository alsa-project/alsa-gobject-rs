<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="GLib" version="2.0"/>
  <include name="GObject" version="2.0"/>
  <package name="alsarawmidi"/>
  <c:include name="alsarawmidi.h"/>
  <namespace name="ALSARawmidi"
             version="0.0"
             shared-library="libalsarawmidi.so.0"
             c:identifier-prefixes="ALSARawmidi"
             c:symbol-prefixes="alsarawmidi_">
    <enumeration name="StreamDirection"
                 glib:type-name="ALSARawmidiStreamDirection"
                 glib:get-type="alsarawmidi_stream_direction_get_type"
                 c:type="ALSARawmidiStreamDirection">
      <doc xml:space="preserve"
           filename="../src/rawmidi/alsarawmidi-enum-types.h"
           line="5">A set of enumerations for the direction of stream.</doc>
      <member name="output"
              value="0"
              c:identifier="ALSARAWMIDI_STREAM_DIRECTION_OUTPUT"
              glib:nick="output"
              glib:name="ALSARAWMIDI_STREAM_DIRECTION_OUTPUT">
        <doc xml:space="preserve"
             filename="../src/rawmidi/alsarawmidi-enum-types.h"
             line="7">Output direction of stream.</doc>
      </member>
      <member name="input"
              value="1"
              c:identifier="ALSARAWMIDI_STREAM_DIRECTION_INPUT"
              glib:nick="input"
              glib:name="ALSARAWMIDI_STREAM_DIRECTION_INPUT">
        <doc xml:space="preserve"
             filename="../src/rawmidi/alsarawmidi-enum-types.h"
             line="8">Input direction of stream.</doc>
      </member>
    </enumeration>
    <class name="StreamPair"
           c:symbol-prefix="stream_pair"
           c:type="ALSARawmidiStreamPair"
           parent="GObject.Object"
           glib:type-name="ALSARawmidiStreamPair"
           glib:get-type="alsarawmidi_stream_pair_get_type"
           glib:type-struct="StreamPairClass">
      <doc xml:space="preserve"
           filename="../src/rawmidi/stream-pair.c"
           line="14">GObject-derived object to represent a pair of Rawmidi stream.
A [class@StreamPair] is a GObject-derived object to represent a pair of Rawmidi stream to which
substreams are attached. The substream is pointed by the combination of the numeric identifier
of device, subdevice, and direction. When the call of [method@StreamPair.open] with the
combination, corresponding substreams are attached to the object. Then the object maintains file
descriptor till object destruction. The call of [method@StreamPair.create_source] returns the
instance of [struct@GLib.Source]. Once attached to the [struct@GLib.Source],
[struct@GLib.MainContext] / [struct@GLib.MainLoop] is available as event dispatcher. The
[signal@StreamPair::handle-messages] signal is emitted in the event dispatcher to notify the
intermediate buffer of capture substream has available messages. The call of
[method@StreamPair.read_from_substream] fills the given buffer with the available messages. The
call of [method@StreamPair.write_to_substream] write messages in the given buffer into the
intermediate buffer of playback substream. The call of [method@StreamPair.get_substream_status]
is available to check the space in the intermediate buffer according to direction argument.</doc>
      <source-position filename="../src/rawmidi/stream-pair.h" line="35"/>
      <constructor name="new" c:identifier="alsarawmidi_stream_pair_new">
        <doc xml:space="preserve"
             filename="../src/rawmidi/stream-pair.c"
             line="169">Allocate and return an instance of [class@StreamPair].</doc>
        <source-position filename="../src/rawmidi/stream-pair.h" line="37"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/rawmidi/stream-pair.c"
               line="174">An instance of [class@StreamPair].</doc>
          <type name="StreamPair" c:type="ALSARawmidiStreamPair*"/>
        </return-value>
      </constructor>
      <virtual-method name="handle_disconnection">
        <doc xml:space="preserve"
             filename="../src/rawmidi/stream-pair.h"
             line="28">Class closure for the [signal@StreamPair::handle-disconnection] signal.</doc>
        <source-position filename="../src/rawmidi/stream-pair.h" line="34"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/rawmidi/stream-pair.h"
                 line="30">A [class@StreamPair].</doc>
            <type name="StreamPair" c:type="ALSARawmidiStreamPair*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="handle_messages">
        <doc xml:space="preserve"
             filename="../src/rawmidi/stream-pair.h"
             line="20">Class closure for the [signal@StreamPair::handle-messages] singal.</doc>
        <source-position filename="../src/rawmidi/stream-pair.h" line="26"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/rawmidi/stream-pair.h"
                 line="22">A [class@StreamPair].</doc>
            <type name="StreamPair" c:type="ALSARawmidiStreamPair*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="create_source"
              c:identifier="alsarawmidi_stream_pair_create_source"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/rawmidi/stream-pair.c"
             line="615">Allocate [struct@GLib.Source] structure to handle events from ALSA rawmidi character device for
input substream. In each iteration of [struct@GLib.MainContext], the `read(2)` system call is
executed to dispatch control event for [signal@StreamPair::handle-messages] signal, according to
the result of `poll(2)` system call.</doc>
        <source-position filename="../src/rawmidi/stream-pair.h" line="78"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/rawmidi/stream-pair.c"
                 line="617">A [class@StreamPair].</doc>
            <type name="StreamPair" c:type="ALSARawmidiStreamPair*"/>
          </instance-parameter>
          <parameter name="gsrc"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/rawmidi/stream-pair.c"
                 line="618">A [struct@GLib.Source] to handle events from ALSA rawmidi character device.</doc>
            <type name="GLib.Source" c:type="GSource**"/>
          </parameter>
        </parameters>
      </method>
      <method name="drain_substream"
              c:identifier="alsarawmidi_stream_pair_drain_substream"
              throws="1">
        <source-position filename="../src/rawmidi/stream-pair.h" line="70"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="StreamPair" c:type="ALSARawmidiStreamPair*"/>
          </instance-parameter>
          <parameter name="direction" transfer-ownership="none">
            <type name="StreamDirection" c:type="ALSARawmidiStreamDirection"/>
          </parameter>
        </parameters>
      </method>
      <method name="drop_substream"
              c:identifier="alsarawmidi_stream_pair_drop_substream"
              throws="1">
        <source-position filename="../src/rawmidi/stream-pair.h" line="74"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="StreamPair" c:type="ALSARawmidiStreamPair*"/>
          </instance-parameter>
          <parameter name="direction" transfer-ownership="none">
            <type name="StreamDirection" c:type="ALSARawmidiStreamDirection"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_protocol_version"
              c:identifier="alsarawmidi_stream_pair_get_protocol_version"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/rawmidi/stream-pair.c"
             line="271">Get the version of rawmidi protocol currently used. The version is represented as the array with
three elements; major, minor, and micro version in the order. The length of major version is
16 bit, the length of minor and micro version is 8 bit each.</doc>
        <source-position filename="../src/rawmidi/stream-pair.h" line="44"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/rawmidi/stream-pair.c"
                 line="273">A [class@StreamPair].</doc>
            <type name="StreamPair" c:type="ALSARawmidiStreamPair*"/>
          </instance-parameter>
          <parameter name="proto_ver_triplet"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/rawmidi/stream-pair.c"
                 line="274">The version of protocol currently
                    used.</doc>
            <array zero-terminated="0" c:type="const guint16**" fixed-size="3">
              <type name="guint16" c:type="guint16"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="get_substream_info"
              c:identifier="alsarawmidi_stream_pair_get_substream_info"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/rawmidi/stream-pair.c"
             line="298">Get information of substream attached to the stream pair.

The call of function executes `ioctl(2)` system call with `SNDRV_RAWMIDI_IOCTL_INFO` command
for ALSA rawmidi character device.</doc>
        <source-position filename="../src/rawmidi/stream-pair.h" line="48"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/rawmidi/stream-pair.c"
                 line="300">A [class@StreamPair].</doc>
            <type name="StreamPair" c:type="ALSARawmidiStreamPair*"/>
          </instance-parameter>
          <parameter name="direction" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/rawmidi/stream-pair.c"
                 line="301">The direction of substream attached to the stream pair.</doc>
            <type name="StreamDirection" c:type="ALSARawmidiStreamDirection"/>
          </parameter>
          <parameter name="substream_info"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/rawmidi/stream-pair.c"
                 line="302">The information for requested substream.</doc>
            <type name="SubstreamInfo" c:type="ALSARawmidiSubstreamInfo**"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_substream_status"
              c:identifier="alsarawmidi_stream_pair_get_substream_status"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/rawmidi/stream-pair.c"
             line="375">Retrieve status of substream for given direction, which is attached to the pair of streams.

The call of function executes `ioctl(2)` system call with `SNDRV_RAWMIDI_IOCTL_STATUS` command
for ALSA rawmidi character device.</doc>
        <source-position filename="../src/rawmidi/stream-pair.h" line="58"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/rawmidi/stream-pair.c"
                 line="377">A [class@StreamPair].</doc>
            <type name="StreamPair" c:type="ALSARawmidiStreamPair*"/>
          </instance-parameter>
          <parameter name="direction" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/rawmidi/stream-pair.c"
                 line="378">The direction of substream attached to the stream pair.</doc>
            <type name="StreamDirection" c:type="ALSARawmidiStreamDirection"/>
          </parameter>
          <parameter name="substream_status"
                     direction="inout"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/rawmidi/stream-pair.c"
                 line="379">The status of substream.</doc>
            <type name="SubstreamStatus"
                  c:type="ALSARawmidiSubstreamStatus* const*"/>
          </parameter>
        </parameters>
      </method>
      <method name="open"
              c:identifier="alsarawmidi_stream_pair_open"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/rawmidi/stream-pair.c"
             line="181">Open file descriptor for a pair of streams to attach input/output substreams corresponding to
the given subdevice.

The call of function executes `open(2)` system call for ALSA rawmidi character device.</doc>
        <source-position filename="../src/rawmidi/stream-pair.h" line="39"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/rawmidi/stream-pair.c"
                 line="183">A [class@StreamPair].</doc>
            <type name="StreamPair" c:type="ALSARawmidiStreamPair*"/>
          </instance-parameter>
          <parameter name="card_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/rawmidi/stream-pair.c"
                 line="184">The numeric identifier of sound card.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="device_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/rawmidi/stream-pair.c"
                 line="185">The numeric identifier of rawmidi device for the sound card.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="subdevice_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/rawmidi/stream-pair.c"
                 line="186">The numeric identifier of subdevice for the rawmidi device.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="access_modes" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/rawmidi/stream-pair.c"
                 line="187">Access flags for stream direction.</doc>
            <type name="StreamPairInfoFlag"
                  c:type="ALSARawmidiStreamPairInfoFlag"/>
          </parameter>
          <parameter name="open_flag" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/rawmidi/stream-pair.c"
                 line="188">The flag of `open(2)` system call. `O_RDWR`, `O_WRONLY` and `O_RDONLY` are forced
            to fulfil internally according to the access_modes.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="read_from_substream"
              c:identifier="alsarawmidi_stream_pair_read_from_substream"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/rawmidi/stream-pair.c"
             line="412">Copy data from intermediate buffer to given buffer for substream attached to the pair of
streams. In a case that the instance is opened without `O_NONBLOCK` flag and the intermediate
buffer has no data, call of the API is blocked till any data is available.

The call of function executes `read(2)` system for ALSA rawmidi character device.</doc>
        <source-position filename="../src/rawmidi/stream-pair.h" line="63"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/rawmidi/stream-pair.c"
                 line="414">A [class@StreamPair].</doc>
            <type name="StreamPair" c:type="ALSARawmidiStreamPair*"/>
          </instance-parameter>
          <parameter name="buf"
                     direction="inout"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/rawmidi/stream-pair.c"
                 line="415">The buffer to copy data.</doc>
            <array length="1" zero-terminated="0" c:type="guint8* const*">
              <type name="guint8" c:type="guint8*"/>
            </array>
          </parameter>
          <parameter name="buf_size"
                     direction="inout"
                     caller-allocates="0"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/rawmidi/stream-pair.c"
                 line="416">The size of buffer.</doc>
            <type name="gsize" c:type="gsize*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_substream_params"
              c:identifier="alsarawmidi_stream_pair_set_substream_params"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/rawmidi/stream-pair.c"
             line="338">Set parameters of substream for given direction, which is attached to the pair of streams.

The call of function executes `ioctl(2)` system call with `SNDRV_RAWMIDI_IOCTL_PARAMS` command
for ALSA rawmidi character device.</doc>
        <source-position filename="../src/rawmidi/stream-pair.h" line="53"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/rawmidi/stream-pair.c"
                 line="340">A [class@StreamPair].</doc>
            <type name="StreamPair" c:type="ALSARawmidiStreamPair*"/>
          </instance-parameter>
          <parameter name="direction" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/rawmidi/stream-pair.c"
                 line="341">The direction of substream attached to the stream pair.</doc>
            <type name="StreamDirection" c:type="ALSARawmidiStreamDirection"/>
          </parameter>
          <parameter name="substream_params" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/rawmidi/stream-pair.c"
                 line="342">The parameters of substream.</doc>
            <type name="SubstreamParams" c:type="ALSARawmidiSubstreamParams*"/>
          </parameter>
        </parameters>
      </method>
      <method name="write_to_substream"
              c:identifier="alsarawmidi_stream_pair_write_to_substream"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/rawmidi/stream-pair.c"
             line="459">Copy data from given buffer to intermediate buffer for substream attached to the pair of
streams. In a case that the instance is opened without `O_NONBLOCK` flag and the intermediate
buffer is full, call of the API is blocked till the buffer has space for the data.

The call of function executes `write(2) system for ALSA rawmidi character device.</doc>
        <source-position filename="../src/rawmidi/stream-pair.h" line="66"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/rawmidi/stream-pair.c"
                 line="461">A [class@StreamPair].</doc>
            <type name="StreamPair" c:type="ALSARawmidiStreamPair*"/>
          </instance-parameter>
          <parameter name="buf" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/rawmidi/stream-pair.c"
                 line="462">The buffer to copy data.</doc>
            <array length="1" zero-terminated="0" c:type="const guint8*">
              <type name="guint8" c:type="guint8"/>
            </array>
          </parameter>
          <parameter name="buf_size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/rawmidi/stream-pair.c"
                 line="463">The size of buffer.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
        </parameters>
      </method>
      <property name="devnode" transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <glib:signal name="handle-disconnection" when="last">
        <doc xml:space="preserve"
             filename="../src/rawmidi/stream-pair.c"
             line="143">When the sound card is not available anymore due to unbinding driver or hot unplugging,
this signal is emit. The owner of this object should call [method@GObject.Object.unref] as
quickly as possible to release ALSA rawmidi character device.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="handle-messages" when="last">
        <doc xml:space="preserve"
             filename="../src/rawmidi/stream-pair.c"
             line="128">When any input message is available, this event is emit.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="StreamPairClass"
            c:type="ALSARawmidiStreamPairClass"
            glib:is-gtype-struct-for="StreamPair">
      <source-position filename="../src/rawmidi/stream-pair.h" line="35"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="handle_messages">
        <callback name="handle_messages">
          <source-position filename="../src/rawmidi/stream-pair.h" line="26"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/rawmidi/stream-pair.h"
                   line="22">A [class@StreamPair].</doc>
              <type name="StreamPair" c:type="ALSARawmidiStreamPair*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="handle_disconnection">
        <callback name="handle_disconnection">
          <source-position filename="../src/rawmidi/stream-pair.h" line="34"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/rawmidi/stream-pair.h"
                   line="30">A [class@StreamPair].</doc>
              <type name="StreamPair" c:type="ALSARawmidiStreamPair*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <enumeration name="StreamPairError"
                 glib:type-name="ALSARawmidiStreamPairError"
                 glib:get-type="alsarawmidi_stream_pair_error_get_type"
                 c:type="ALSARawmidiStreamPairError"
                 glib:error-domain="alsarawmidi-stream-pair-error-quark">
      <doc xml:space="preserve"
           filename="../src/rawmidi/alsarawmidi-enum-types.h"
           line="32">A set of error code for [struct@GLib.Error] with `ALSARawmidi.StreamPairError` domain.</doc>
      <member name="failed"
              value="0"
              c:identifier="ALSARAWMIDI_STREAM_PAIR_ERROR_FAILED"
              glib:nick="failed"
              glib:name="ALSARAWMIDI_STREAM_PAIR_ERROR_FAILED">
        <doc xml:space="preserve"
             filename="../src/rawmidi/alsarawmidi-enum-types.h"
             line="34">The system call failed.</doc>
      </member>
      <member name="disconnected"
              value="1"
              c:identifier="ALSARAWMIDI_STREAM_PAIR_ERROR_DISCONNECTED"
              glib:nick="disconnected"
              glib:name="ALSARAWMIDI_STREAM_PAIR_ERROR_DISCONNECTED">
        <doc xml:space="preserve"
             filename="../src/rawmidi/alsarawmidi-enum-types.h"
             line="35">The card associated to the instance is in disconnect state.</doc>
      </member>
      <member name="unreadable"
              value="2"
              c:identifier="ALSARAWMIDI_STREAM_PAIR_ERROR_UNREADABLE"
              glib:nick="unreadable"
              glib:name="ALSARAWMIDI_STREAM_PAIR_ERROR_UNREADABLE">
        <doc xml:space="preserve"
             filename="../src/rawmidi/alsarawmidi-enum-types.h"
             line="36">The instance is not for read operation.</doc>
      </member>
      <function name="quark"
                c:identifier="alsarawmidi_stream_pair_error_quark">
        <doc xml:space="preserve"
             filename="../src/rawmidi/stream-pair.c"
             line="39">Return the [alias@GLib.Quark] for [struct@GLib.Error] with code in [enum@StreamPairError]
enumerations.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/rawmidi/stream-pair.c"
               line="45">A [alias@GLib.Quark].</doc>
          <type name="GLib.Quark" c:type="GQuark"/>
        </return-value>
      </function>
    </enumeration>
    <bitfield name="StreamPairInfoFlag"
              glib:type-name="ALSARawmidiStreamPairInfoFlag"
              glib:get-type="alsarawmidi_stream_pair_info_flag_get_type"
              c:type="ALSARawmidiStreamPairInfoFlag">
      <doc xml:space="preserve"
           filename="../src/rawmidi/alsarawmidi-enum-types.h"
           line="17">A set of flags for information of the pair of streams.</doc>
      <member name="output"
              value="1"
              c:identifier="ALSARAWMIDI_STREAM_PAIR_INFO_FLAG_OUTPUT"
              glib:nick="output"
              glib:name="ALSARAWMIDI_STREAM_PAIR_INFO_FLAG_OUTPUT">
        <doc xml:space="preserve"
             filename="../src/rawmidi/alsarawmidi-enum-types.h"
             line="19">The pair of stream supports output substream.</doc>
      </member>
      <member name="input"
              value="2"
              c:identifier="ALSARAWMIDI_STREAM_PAIR_INFO_FLAG_INPUT"
              glib:nick="input"
              glib:name="ALSARAWMIDI_STREAM_PAIR_INFO_FLAG_INPUT">
        <doc xml:space="preserve"
             filename="../src/rawmidi/alsarawmidi-enum-types.h"
             line="20">The pair of stream supports input substream.</doc>
      </member>
      <member name="duplex"
              value="4"
              c:identifier="ALSARAWMIDI_STREAM_PAIR_INFO_FLAG_DUPLEX"
              glib:nick="duplex"
              glib:name="ALSARAWMIDI_STREAM_PAIR_INFO_FLAG_DUPLEX">
        <doc xml:space="preserve"
             filename="../src/rawmidi/alsarawmidi-enum-types.h"
             line="21">Both directions of stream are available at the same time.</doc>
      </member>
    </bitfield>
    <class name="SubstreamInfo"
           c:symbol-prefix="substream_info"
           c:type="ALSARawmidiSubstreamInfo"
           parent="GObject.Object"
           glib:type-name="ALSARawmidiSubstreamInfo"
           glib:get-type="alsarawmidi_substream_info_get_type"
           glib:type-struct="SubstreamInfoClass">
      <doc xml:space="preserve"
           filename="../src/rawmidi/substream-info.c"
           line="4">A GObject-derived object to represent information of substream.
A [class@SubstreamInfo] is a GObject-derived object to represent information of substream
attached to the pair of streams. The call of [method@StreamPair.get_substream_info] or
[func@get_substream_info] return the instance of object.

The object wraps `struct snd_rawmidi_info` in UAPI of Linux sound subsystem.</doc>
      <source-position filename="../src/rawmidi/substream-info.h" line="15"/>
      <property name="card-id" transfer-ownership="none">
        <type name="gint" c:type="gint"/>
      </property>
      <property name="device-id" transfer-ownership="none">
        <type name="guint" c:type="guint"/>
      </property>
      <property name="direction" transfer-ownership="none">
        <type name="StreamDirection"/>
      </property>
      <property name="flags" transfer-ownership="none">
        <type name="StreamPairInfoFlag"/>
      </property>
      <property name="id" transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="name" transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="subdevice-id" transfer-ownership="none">
        <type name="guint" c:type="guint"/>
      </property>
      <property name="subdevice-name" transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="subdevices-avail" transfer-ownership="none">
        <type name="guint" c:type="guint"/>
      </property>
      <property name="subdevices-count" transfer-ownership="none">
        <type name="guint" c:type="guint"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="SubstreamInfoClass"
            c:type="ALSARawmidiSubstreamInfoClass"
            glib:is-gtype-struct-for="SubstreamInfo">
      <source-position filename="../src/rawmidi/substream-info.h" line="15"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="SubstreamParams"
           c:symbol-prefix="substream_params"
           c:type="ALSARawmidiSubstreamParams"
           parent="GObject.Object"
           glib:type-name="ALSARawmidiSubstreamParams"
           glib:get-type="alsarawmidi_substream_params_get_type"
           glib:type-struct="SubstreamParamsClass">
      <doc xml:space="preserve"
           filename="../src/rawmidi/substream-params.c"
           line="6">A GObject-derived object to represent parameters of substream.
A [class@SubstreamParams] is a GObject-derived object to represent parameters of substream
attached to the pair of streams. The call of [method@StreamPair.set_substream_params] requires
the instance of object.

The object wraps `struct snd_rawmidi_params` in UAPI of Linux sound subsystem.</doc>
      <source-position filename="../src/rawmidi/substream-params.h" line="16"/>
      <constructor name="new" c:identifier="alsarawmidi_substream_params_new">
        <doc xml:space="preserve"
             filename="../src/rawmidi/substream-params.c"
             line="115">Allocate and return an instance of [class@SubstreamParams].</doc>
        <source-position filename="../src/rawmidi/substream-params.h"
                         line="18"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/rawmidi/substream-params.c"
               line="120">An instance of [class@SubstreamParams].</doc>
          <type name="SubstreamParams" c:type="ALSARawmidiSubstreamParams*"/>
        </return-value>
      </constructor>
      <property name="active-sensing" writable="1" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="avail-min" writable="1" transfer-ownership="none">
        <type name="guint" c:type="guint"/>
      </property>
      <property name="buffer-size" writable="1" transfer-ownership="none">
        <type name="guint" c:type="guint"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="SubstreamParamsClass"
            c:type="ALSARawmidiSubstreamParamsClass"
            glib:is-gtype-struct-for="SubstreamParams">
      <source-position filename="../src/rawmidi/substream-params.h" line="16"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="SubstreamStatus"
           c:symbol-prefix="substream_status"
           c:type="ALSARawmidiSubstreamStatus"
           parent="GObject.Object"
           glib:type-name="ALSARawmidiSubstreamStatus"
           glib:get-type="alsarawmidi_substream_status_get_type"
           glib:type-struct="SubstreamStatusClass">
      <doc xml:space="preserve"
           filename="../src/rawmidi/substream-status.c"
           line="4">A GObject-derived object to represent status of substream.
A [class@SubstreamStatus] is a GObject-derived object to represent status of substream attached
to the pair of stream. The call of [method@StreamPair.get_substream_status] returns the instance
of object.

The object wraps `struct snd_rawmidi_status` in UAPI of Linux sound subsystem.</doc>
      <source-position filename="../src/rawmidi/substream-status.h" line="16"/>
      <constructor name="new" c:identifier="alsarawmidi_substream_status_new">
        <doc xml:space="preserve"
             filename="../src/rawmidi/substream-status.c"
             line="76">Allocate and return an instance of [class@SubstreamStatus].</doc>
        <source-position filename="../src/rawmidi/substream-status.h"
                         line="18"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/rawmidi/substream-status.c"
               line="81">An instance of [class@SubstreamStatus].</doc>
          <type name="SubstreamStatus" c:type="ALSARawmidiSubstreamStatus*"/>
        </return-value>
      </constructor>
      <property name="avail" transfer-ownership="none">
        <type name="guint64" c:type="guint64"/>
      </property>
      <property name="xruns" transfer-ownership="none">
        <type name="guint64" c:type="guint64"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="SubstreamStatusClass"
            c:type="ALSARawmidiSubstreamStatusClass"
            glib:is-gtype-struct-for="SubstreamStatus">
      <source-position filename="../src/rawmidi/substream-status.h" line="16"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <function name="get_device_id_list"
              c:identifier="alsarawmidi_get_device_id_list"
              throws="1">
      <doc xml:space="preserve"
           filename="../src/rawmidi/query.c"
           line="8">Get the list of numeric identifier for available rawmidi devices of sound card.

Nodes under sound subsystem in sysfs are used to gather the information.</doc>
      <source-position filename="../src/rawmidi/query.h" line="9"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="card_id" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/rawmidi/query.c"
               line="10">The numeric identifier of sound card.</doc>
          <type name="guint" c:type="guint"/>
        </parameter>
        <parameter name="entries"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/rawmidi/query.c"
               line="11">The list of numeric identifier for rawmidi device.</doc>
          <array length="2" zero-terminated="0" c:type="guint**">
            <type name="guint" c:type="guint*"/>
          </array>
        </parameter>
        <parameter name="entry_count"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/rawmidi/query.c"
               line="12">The number of entries.</doc>
          <type name="gsize" c:type="gsize*"/>
        </parameter>
      </parameters>
    </function>
    <function name="get_rawmidi_devnode"
              c:identifier="alsarawmidi_get_rawmidi_devnode"
              throws="1">
      <doc xml:space="preserve"
           filename="../src/rawmidi/query.c"
           line="57">Allocate devnode string for rawmidi device and return it when exists.

Nodes under sound subsystem in sysfs are used to gather the information.</doc>
      <source-position filename="../src/rawmidi/query.h" line="16"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="card_id" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/rawmidi/query.c"
               line="59">The numeridcal identifier of sound card.</doc>
          <type name="guint" c:type="guint"/>
        </parameter>
        <parameter name="device_id" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/rawmidi/query.c"
               line="60">The numeric identifier of rawmidi device for the sound card.</doc>
          <type name="guint" c:type="guint"/>
        </parameter>
        <parameter name="devnode"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/rawmidi/query.c"
               line="61">The string for devnode of rawmidi device.</doc>
          <type name="utf8" c:type="char**"/>
        </parameter>
      </parameters>
    </function>
    <function name="get_rawmidi_sysname"
              c:identifier="alsarawmidi_get_rawmidi_sysname"
              throws="1">
      <doc xml:space="preserve"
           filename="../src/rawmidi/query.c"
           line="33">Allocate sysname for rawmidi device and return it when it exists.

Nodes under sound subsystem in sysfs are used to gather the information.</doc>
      <source-position filename="../src/rawmidi/query.h" line="13"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="card_id" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/rawmidi/query.c"
               line="35">The numeridcal identifier of sound card.</doc>
          <type name="guint" c:type="guint"/>
        </parameter>
        <parameter name="device_id" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/rawmidi/query.c"
               line="36">The numeric identifier of rawmidi device for the sound card.</doc>
          <type name="guint" c:type="guint"/>
        </parameter>
        <parameter name="sysname"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/rawmidi/query.c"
               line="37">The string for sysname of rawmidi device.</doc>
          <type name="utf8" c:type="char**"/>
        </parameter>
      </parameters>
    </function>
    <function name="get_subdevice_id_list"
              c:identifier="alsarawmidi_get_subdevice_id_list"
              throws="1">
      <doc xml:space="preserve"
           filename="../src/rawmidi/query.c"
           line="81">Get the list of numeric identifier for subdevices belongs to the numerical identifier of card,
device, and the direction.

The call of function executes `open(2)`, `close(2)`, and `ioctl(2)` system call with
`SNDRV_CTL_IOCTL_RAWMIDI_INFO` command for ALSA control character device.</doc>
      <source-position filename="../src/rawmidi/query.h" line="19"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="card_id" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/rawmidi/query.c"
               line="83">The numeric value for sound card to query.</doc>
          <type name="guint" c:type="guint"/>
        </parameter>
        <parameter name="device_id" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/rawmidi/query.c"
               line="84">The numeric value of rawmidi device to query.</doc>
          <type name="guint" c:type="guint"/>
        </parameter>
        <parameter name="direction" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/rawmidi/query.c"
               line="85">The direction of stream to query, one of [enum@StreamDirection].</doc>
          <type name="StreamDirection" c:type="ALSARawmidiStreamDirection"/>
        </parameter>
        <parameter name="entries"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/rawmidi/query.c"
               line="86">The list of numeric identifier of subdevice.</doc>
          <array length="4" zero-terminated="0" c:type="guint**">
            <type name="guint" c:type="guint*"/>
          </array>
        </parameter>
        <parameter name="entry_count"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/rawmidi/query.c"
               line="87">The number of entries.</doc>
          <type name="gsize" c:type="gsize*"/>
        </parameter>
      </parameters>
    </function>
    <function name="get_substream_info"
              c:identifier="alsarawmidi_get_substream_info"
              throws="1">
      <doc xml:space="preserve"
           filename="../src/rawmidi/query.c"
           line="127">Get the information of substream pointed by the numeric identifier of card, device, subdevice,
and the direction.

The call of function executes `open(2)`, `close(2)`, and `ioctl(2)` system call with
`SNDRV_CTL_IOCTL_RAWMIDI_INFO` command for ALSA control character device.</doc>
      <source-position filename="../src/rawmidi/query.h" line="24"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="card_id" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/rawmidi/query.c"
               line="129">The numeric value for sound card to query.</doc>
          <type name="guint" c:type="guint"/>
        </parameter>
        <parameter name="device_id" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/rawmidi/query.c"
               line="130">The numeric value of rawmidi device to query.</doc>
          <type name="guint" c:type="guint"/>
        </parameter>
        <parameter name="direction" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/rawmidi/query.c"
               line="131">The direction of stream, one of [enum@StreamDirection].</doc>
          <type name="StreamDirection" c:type="ALSARawmidiStreamDirection"/>
        </parameter>
        <parameter name="subdevice_id" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/rawmidi/query.c"
               line="132">The numeric value of subdevice in rawmidi device.</doc>
          <type name="guint" c:type="guint"/>
        </parameter>
        <parameter name="substream_info"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/rawmidi/query.c"
               line="133">The information of substream for the subdevice.</doc>
          <type name="SubstreamInfo" c:type="ALSARawmidiSubstreamInfo**"/>
        </parameter>
      </parameters>
    </function>
    <function name="stream_pair_error_quark"
              c:identifier="alsarawmidi_stream_pair_error_quark"
              moved-to="StreamPairError.quark">
      <doc xml:space="preserve"
           filename="../src/rawmidi/stream-pair.c"
           line="39">Return the [alias@GLib.Quark] for [struct@GLib.Error] with code in [enum@StreamPairError]
enumerations.</doc>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/rawmidi/stream-pair.c"
             line="45">A [alias@GLib.Quark].</doc>
        <type name="GLib.Quark" c:type="GQuark"/>
      </return-value>
    </function>
  </namespace>
</repository>
