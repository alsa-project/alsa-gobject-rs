// This file was generated by gir (https://github.com/gtk-rs/gir)
// from
// from gir-files (https://github.com/gtk-rs/gir-files)
// DO NOT EDIT

use crate::ElemInfoCommon;
use crate::ElemInfoSingleArray;
use glib::translate::*;
use std::fmt;

glib::wrapper! {
    #[doc(alias = "ALSACtlElemInfoBoolean")]
    pub struct ElemInfoBoolean(Object<ffi::ALSACtlElemInfoBoolean, ffi::ALSACtlElemInfoBooleanClass>) @implements ElemInfoCommon, ElemInfoSingleArray;

    match fn {
        type_ => || ffi::alsactl_elem_info_boolean_get_type(),
    }
}

impl ElemInfoBoolean {
    pub const NONE: Option<&'static ElemInfoBoolean> = None;

    #[doc(alias = "alsactl_elem_info_boolean_new")]
    pub fn new() -> ElemInfoBoolean {
        unsafe { from_glib_full(ffi::alsactl_elem_info_boolean_new()) }
    }
}

impl Default for ElemInfoBoolean {
    fn default() -> Self {
        Self::new()
    }
}

impl fmt::Display for ElemInfoBoolean {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        f.write_str("ElemInfoBoolean")
    }
}
