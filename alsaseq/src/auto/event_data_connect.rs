// This file was generated by gir (https://github.com/gtk-rs/gir)
// from gir-files (https://github.com/gtk-rs/gir-files)
// DO NOT EDIT

use alsaseq_sys;
use glib::translate::*;
use gobject_sys;
use Addr;

glib_wrapper! {
    #[derive(Debug, PartialEq, Eq, PartialOrd, Ord, Hash)]
    pub struct EventDataConnect(Boxed<alsaseq_sys::ALSASeqEventDataConnect>);

    match fn {
        copy => |ptr| gobject_sys::g_boxed_copy(alsaseq_sys::alsaseq_event_data_connect_get_type(), ptr as *mut _) as *mut alsaseq_sys::ALSASeqEventDataConnect,
        free => |ptr| gobject_sys::g_boxed_free(alsaseq_sys::alsaseq_event_data_connect_get_type(), ptr as *mut _),
        get_type => || alsaseq_sys::alsaseq_event_data_connect_get_type(),
    }
}

impl EventDataConnect {
    pub fn set_dst(&mut self, dst: &Addr) {
        unsafe {
            alsaseq_sys::alsaseq_event_data_connect_set_dst(self.to_glib_none_mut().0, dst.to_glib_none().0);
        }
    }

    pub fn set_src(&mut self, src: &Addr) {
        unsafe {
            alsaseq_sys::alsaseq_event_data_connect_set_src(self.to_glib_none_mut().0, src.to_glib_none().0);
        }
    }
}
