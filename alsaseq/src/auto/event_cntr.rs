// This file was generated by gir (https://github.com/gtk-rs/gir)
// from
// from gir-files (https://github.com/gtk-rs/gir-files)
// DO NOT EDIT

use crate::ffi;

glib::wrapper! {
    /// A boxed structure for container which includes batch of events.
    ///
    /// For batch of events, [`EventCntr`][crate::EventCntr] keeps flatten buffer which serialize the events without
    /// pointing to extra data blob for variable type.
    #[derive(Debug, PartialEq, Eq, PartialOrd, Ord, Hash)]
    pub struct EventCntr(Boxed<ffi::ALSASeqEventCntr>);

    match fn {
        copy => |ptr| glib::gobject_ffi::g_boxed_copy(ffi::alsaseq_event_cntr_get_type(), ptr as *mut _) as *mut ffi::ALSASeqEventCntr,
        free => |ptr| glib::gobject_ffi::g_boxed_free(ffi::alsaseq_event_cntr_get_type(), ptr as *mut _),
        type_ => || ffi::alsaseq_event_cntr_get_type(),
    }
}

unsafe impl Send for EventCntr {}
