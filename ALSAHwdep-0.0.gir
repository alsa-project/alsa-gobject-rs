<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="GLib" version="2.0"/>
  <include name="GObject" version="2.0"/>
  <package name="alsahwdep"/>
  <c:include name="alsahwdep.h"/>
  <namespace name="ALSAHwdep"
             version="0.0"
             shared-library="libalsahwdep.so.0"
             c:identifier-prefixes="ALSAHwdep"
             c:symbol-prefixes="alsahwdep_">
    <interface name="DeviceCommon"
               c:symbol-prefix="device_common"
               c:type="ALSAHwdepDeviceCommon"
               version="0.3."
               glib:type-name="ALSAHwdepDeviceCommon"
               glib:get-type="alsahwdep_device_common_get_type"
               glib:type-struct="DeviceCommonInterface">
      <doc xml:space="preserve"
           filename="../src/hwdep/device-common.c"
           line="4">An interface to express common features of ALSA HwDep device.
A [iface@DeviceCommon] should be implemented by any type of ALSA HwDep device.</doc>
      <source-position filename="../src/hwdep/device-common.h" line="88"/>
      <virtual-method name="create_source" invoker="create_source" throws="1">
        <doc xml:space="preserve"
             filename="../src/hwdep/device-common.c"
             line="166">Allocate [struct@GLib.Source] structure to handle events from ALSA hwdep character device. In
each iteration of [struct@GLib.MainContext], the `read(2)` system call is executed to dispatch
hwdep event, according to the result of `poll(2)` system call.</doc>
        <source-position filename="../src/hwdep/device-common.h" line="79"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hwdep/device-common.c"
               line="176">%TRUE when the overall operation finishes successfully, else %FALSE.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hwdep/device-common.c"
                 line="168">A [iface@DeviceCommon].</doc>
            <type name="DeviceCommon" c:type="ALSAHwdepDeviceCommon*"/>
          </instance-parameter>
          <parameter name="source"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/hwdep/device-common.c"
                 line="169">A [struct@GLib.Source] to handle events from ALSA hwdep character device.</doc>
            <type name="GLib.Source" c:type="GSource**"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_device_info"
                      invoker="get_device_info"
                      throws="1">
        <doc xml:space="preserve"
             filename="../src/hwdep/device-common.c"
             line="144">Get the information according to given numeric IDs for card and device. The call of function is
expected to executes `ioctl(2)` system call with `SNDRV_CTL_IOCTL_HWDEP_INFO` command to the
character device.</doc>
        <source-position filename="../src/hwdep/device-common.h" line="64"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hwdep/device-common.c"
               line="154">%TRUE when the overall operation finishes successfully, else %FALSE.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hwdep/device-common.c"
                 line="146">A [iface@DeviceCommon].</doc>
            <type name="DeviceCommon" c:type="ALSAHwdepDeviceCommon*"/>
          </instance-parameter>
          <parameter name="device_info"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/hwdep/device-common.c"
                 line="147">The information of device.</doc>
            <type name="DeviceInfo" c:type="ALSAHwdepDeviceInfo**"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_protocol_version"
                      invoker="get_protocol_version"
                      throws="1">
        <doc xml:space="preserve"
             filename="../src/hwdep/device-common.c"
             line="119">Get the version of hwdep protocol used currently. The version is expressed as the array with
three elements; major, minor, and micro version in the order. The length of major version is
16 bit, the length of minor and micro version is 8 bit each.</doc>
        <source-position filename="../src/hwdep/device-common.h" line="49"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hwdep/device-common.c"
               line="130">%TRUE when the overall operation finishes successfully, else %FALSE.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hwdep/device-common.c"
                 line="121">A [iface@DeviceCommon].</doc>
            <type name="DeviceCommon" c:type="ALSAHwdepDeviceCommon*"/>
          </instance-parameter>
          <parameter name="proto_ver_triplet"
                     direction="inout"
                     caller-allocates="0"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hwdep/device-common.c"
                 line="122">The version of protocol used
                    currently.</doc>
            <array zero-terminated="0" c:type="guint16* const*" fixed-size="3">
              <type name="guint16" c:type="guint16"/>
            </array>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="handle_disconnection">
        <doc xml:space="preserve"
             filename="../src/hwdep/device-common.h"
             line="81">Closure for the [signal@DeviceCommon::handle-disconnection] signal.</doc>
        <source-position filename="../src/hwdep/device-common.h" line="87"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hwdep/device-common.h"
                 line="83">A [iface@DeviceCommon].</doc>
            <type name="DeviceCommon" c:type="ALSAHwdepDeviceCommon*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="open" throws="1">
        <doc xml:space="preserve"
             filename="../src/hwdep/device-common.h"
             line="20">Open one of ALSA hwdep character devices for the sound card.

The call of function is expected to execute `open(2)` system call for ALSA hwdep character
device.</doc>
        <source-position filename="../src/hwdep/device-common.h" line="34"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hwdep/device-common.h"
               line="32">%TRUE when the overall operation finishes successfully, else %FALSE.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hwdep/device-common.h"
                 line="22">A [iface@DeviceCommon].</doc>
            <type name="DeviceCommon" c:type="ALSAHwdepDeviceCommon*"/>
          </instance-parameter>
          <parameter name="path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hwdep/device-common.h"
                 line="23">The path to special file for ALSA HwDep character device.</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
          <parameter name="open_flag" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hwdep/device-common.h"
                 line="24">The flag of `open(2)` system call.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="create_source"
              c:identifier="alsahwdep_device_common_create_source"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/hwdep/device-common.c"
             line="166">Allocate [struct@GLib.Source] structure to handle events from ALSA hwdep character device. In
each iteration of [struct@GLib.MainContext], the `read(2)` system call is executed to dispatch
hwdep event, according to the result of `poll(2)` system call.</doc>
        <source-position filename="../src/hwdep/device-common.h" line="100"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hwdep/device-common.c"
               line="176">%TRUE when the overall operation finishes successfully, else %FALSE.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hwdep/device-common.c"
                 line="168">A [iface@DeviceCommon].</doc>
            <type name="DeviceCommon" c:type="ALSAHwdepDeviceCommon*"/>
          </instance-parameter>
          <parameter name="source"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/hwdep/device-common.c"
                 line="169">A [struct@GLib.Source] to handle events from ALSA hwdep character device.</doc>
            <type name="GLib.Source" c:type="GSource**"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_device_info"
              c:identifier="alsahwdep_device_common_get_device_info"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/hwdep/device-common.c"
             line="144">Get the information according to given numeric IDs for card and device. The call of function is
expected to executes `ioctl(2)` system call with `SNDRV_CTL_IOCTL_HWDEP_INFO` command to the
character device.</doc>
        <source-position filename="../src/hwdep/device-common.h" line="97"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hwdep/device-common.c"
               line="154">%TRUE when the overall operation finishes successfully, else %FALSE.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hwdep/device-common.c"
                 line="146">A [iface@DeviceCommon].</doc>
            <type name="DeviceCommon" c:type="ALSAHwdepDeviceCommon*"/>
          </instance-parameter>
          <parameter name="device_info"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/hwdep/device-common.c"
                 line="147">The information of device.</doc>
            <type name="DeviceInfo" c:type="ALSAHwdepDeviceInfo**"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_protocol_version"
              c:identifier="alsahwdep_device_common_get_protocol_version"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/hwdep/device-common.c"
             line="119">Get the version of hwdep protocol used currently. The version is expressed as the array with
three elements; major, minor, and micro version in the order. The length of major version is
16 bit, the length of minor and micro version is 8 bit each.</doc>
        <source-position filename="../src/hwdep/device-common.h" line="93"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hwdep/device-common.c"
               line="130">%TRUE when the overall operation finishes successfully, else %FALSE.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hwdep/device-common.c"
                 line="121">A [iface@DeviceCommon].</doc>
            <type name="DeviceCommon" c:type="ALSAHwdepDeviceCommon*"/>
          </instance-parameter>
          <parameter name="proto_ver_triplet"
                     direction="inout"
                     caller-allocates="0"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hwdep/device-common.c"
                 line="122">The version of protocol used
                    currently.</doc>
            <array zero-terminated="0" c:type="guint16* const*" fixed-size="3">
              <type name="guint16" c:type="guint16"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="open"
              c:identifier="alsahwdep_device_common_open"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/hwdep/device-common.c"
             line="86">Open one of ALSA hwdep character devices for the sound card.

The call of function is expected to execute `open(2)` system call for ALSA hwdep character
device.</doc>
        <source-position filename="../src/hwdep/device-common.h" line="90"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hwdep/device-common.c"
               line="99">%TRUE when the overall operation finishes successfully, else %FALSE.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hwdep/device-common.c"
                 line="88">A [iface@DeviceCommon].</doc>
            <type name="DeviceCommon" c:type="ALSAHwdepDeviceCommon*"/>
          </instance-parameter>
          <parameter name="card_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hwdep/device-common.c"
                 line="89">The numeric identifier of sound card.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="device_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hwdep/device-common.c"
                 line="90">The numerid identifier of device.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="open_flag" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hwdep/device-common.c"
                 line="91">The flag of `open(2)` system call.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <glib:signal name="handle-disconnection" when="last" action="1">
        <doc xml:space="preserve"
             filename="../src/hwdep/device-common.c"
             line="69">Emitted when the sound card is not available anymore due to unbinding driver or hot
unplugging. The owner of the object should prepare to call [method@GObject.Object.unref]
so that ALSA HwDep character device is going to be closed and sound card is released.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </interface>
    <enumeration name="DeviceCommonError"
                 glib:type-name="ALSAHwdepDeviceCommonError"
                 glib:get-type="alsahwdep_device_common_error_get_type"
                 c:type="ALSAHwdepDeviceCommonError"
                 glib:error-domain="alsahwdep-device-common-error-quark">
      <doc xml:space="preserve"
           filename="../src/hwdep/alsahwdep-enum-types.h"
           line="71">A set of enumerations for code of ALSAHwDep.DeviceCommonError error domain.</doc>
      <member name="failed"
              value="1"
              c:identifier="ALSAHWDEP_DEVICE_COMMON_ERROR_FAILED"
              glib:nick="failed"
              glib:name="ALSAHWDEP_DEVICE_COMMON_ERROR_FAILED">
        <doc xml:space="preserve"
             filename="../src/hwdep/alsahwdep-enum-types.h"
             line="73">The operation failed due to unspecified reason.</doc>
      </member>
      <member name="is_opened"
              value="2"
              c:identifier="ALSAHWDEP_DEVICE_COMMON_ERROR_IS_OPENED"
              glib:nick="is-opened"
              glib:name="ALSAHWDEP_DEVICE_COMMON_ERROR_IS_OPENED">
        <doc xml:space="preserve"
             filename="../src/hwdep/alsahwdep-enum-types.h"
             line="74">The instance is already associated to character device.</doc>
      </member>
      <member name="is_not_opened"
              value="3"
              c:identifier="ALSAHWDEP_DEVICE_COMMON_ERROR_IS_NOT_OPENED"
              glib:nick="is-not-opened"
              glib:name="ALSAHWDEP_DEVICE_COMMON_ERROR_IS_NOT_OPENED">
        <doc xml:space="preserve"
             filename="../src/hwdep/alsahwdep-enum-types.h"
             line="75">The instance is not associated to character device yet.</doc>
      </member>
      <member name="is_used"
              value="4"
              c:identifier="ALSAHWDEP_DEVICE_COMMON_ERROR_IS_USED"
              glib:nick="is-used"
              glib:name="ALSAHWDEP_DEVICE_COMMON_ERROR_IS_USED">
        <doc xml:space="preserve"
             filename="../src/hwdep/alsahwdep-enum-types.h"
             line="76">The character device is already used.</doc>
      </member>
      <member name="is_not_supported"
              value="5"
              c:identifier="ALSAHWDEP_DEVICE_COMMON_ERROR_IS_NOT_SUPPORTED"
              glib:nick="is-not-supported"
              glib:name="ALSAHWDEP_DEVICE_COMMON_ERROR_IS_NOT_SUPPORTED">
        <doc xml:space="preserve"
             filename="../src/hwdep/alsahwdep-enum-types.h"
             line="77">The HwDep device associated to the character device is not supported.</doc>
      </member>
      <member name="is_disconnected"
              value="6"
              c:identifier="ALSAHWDEP_DEVICE_COMMON_ERROR_IS_DISCONNECTED"
              glib:nick="is-disconnected"
              glib:name="ALSAHWDEP_DEVICE_COMMON_ERROR_IS_DISCONNECTED">
        <doc xml:space="preserve"
             filename="../src/hwdep/alsahwdep-enum-types.h"
             line="78">The sound card is under disconnected state.</doc>
      </member>
      <function name="quark"
                c:identifier="alsahwdep_device_common_error_quark">
        <doc xml:space="preserve"
             filename="../src/hwdep/device-common.c"
             line="17">Return the [alias@GLib.Quark] for [struct@GLib.Error] with code in ALSAHwdep.DeviceCommonError
enumerations.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hwdep/device-common.c"
               line="23">A [alias@GLib.Quark].</doc>
          <type name="GLib.Quark" c:type="GQuark"/>
        </return-value>
      </function>
      <function name="to_label"
                c:identifier="alsahwdep_device_common_error_to_label">
        <doc xml:space="preserve"
             filename="../src/hwdep/device-common.c"
             line="27">Retrieve the string label of error from code.</doc>
        <source-position filename="../src/hwdep/device-common.h" line="15"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="code" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hwdep/device-common.c"
                 line="29">A ALSAHwdep.DeviceCommonError.</doc>
            <type name="DeviceCommonError"
                  c:type="ALSAHwdepDeviceCommonError"/>
          </parameter>
          <parameter name="label"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hwdep/device-common.c"
                 line="30">The string label of error.</doc>
            <type name="utf8" c:type="const char**"/>
          </parameter>
        </parameters>
      </function>
    </enumeration>
    <record name="DeviceCommonInterface"
            c:type="ALSAHwdepDeviceCommonInterface"
            glib:is-gtype-struct-for="DeviceCommon">
      <source-position filename="../src/hwdep/device-common.h" line="88"/>
      <field name="parent_iface">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="open">
        <callback name="open" throws="1">
          <source-position filename="../src/hwdep/device-common.h" line="34"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hwdep/device-common.h"
                 line="32">%TRUE when the overall operation finishes successfully, else %FALSE.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/hwdep/device-common.h"
                   line="22">A [iface@DeviceCommon].</doc>
              <type name="DeviceCommon" c:type="ALSAHwdepDeviceCommon*"/>
            </parameter>
            <parameter name="path" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/hwdep/device-common.h"
                   line="23">The path to special file for ALSA HwDep character device.</doc>
              <type name="utf8" c:type="const gchar*"/>
            </parameter>
            <parameter name="open_flag" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/hwdep/device-common.h"
                   line="24">The flag of `open(2)` system call.</doc>
              <type name="gint" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_protocol_version">
        <callback name="get_protocol_version" throws="1">
          <source-position filename="../src/hwdep/device-common.h" line="49"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hwdep/device-common.c"
                 line="130">%TRUE when the overall operation finishes successfully, else %FALSE.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/hwdep/device-common.c"
                   line="121">A [iface@DeviceCommon].</doc>
              <type name="DeviceCommon" c:type="ALSAHwdepDeviceCommon*"/>
            </parameter>
            <parameter name="proto_ver_triplet"
                       direction="inout"
                       caller-allocates="0"
                       transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/hwdep/device-common.c"
                   line="122">The version of protocol used
                    currently.</doc>
              <array zero-terminated="0"
                     c:type="guint16* const*"
                     fixed-size="3">
                <type name="guint16" c:type="guint16"/>
              </array>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_device_info">
        <callback name="get_device_info" throws="1">
          <source-position filename="../src/hwdep/device-common.h" line="64"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hwdep/device-common.c"
                 line="154">%TRUE when the overall operation finishes successfully, else %FALSE.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/hwdep/device-common.c"
                   line="146">A [iface@DeviceCommon].</doc>
              <type name="DeviceCommon" c:type="ALSAHwdepDeviceCommon*"/>
            </parameter>
            <parameter name="device_info"
                       direction="out"
                       caller-allocates="0"
                       transfer-ownership="full">
              <doc xml:space="preserve"
                   filename="../src/hwdep/device-common.c"
                   line="147">The information of device.</doc>
              <type name="DeviceInfo" c:type="ALSAHwdepDeviceInfo**"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="create_source">
        <callback name="create_source" throws="1">
          <source-position filename="../src/hwdep/device-common.h" line="79"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/hwdep/device-common.c"
                 line="176">%TRUE when the overall operation finishes successfully, else %FALSE.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/hwdep/device-common.c"
                   line="168">A [iface@DeviceCommon].</doc>
              <type name="DeviceCommon" c:type="ALSAHwdepDeviceCommon*"/>
            </parameter>
            <parameter name="source"
                       direction="out"
                       caller-allocates="0"
                       transfer-ownership="full">
              <doc xml:space="preserve"
                   filename="../src/hwdep/device-common.c"
                   line="169">A [struct@GLib.Source] to handle events from ALSA hwdep character device.</doc>
              <type name="GLib.Source" c:type="GSource**"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="handle_disconnection">
        <callback name="handle_disconnection">
          <source-position filename="../src/hwdep/device-common.h" line="87"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/hwdep/device-common.h"
                   line="83">A [iface@DeviceCommon].</doc>
              <type name="DeviceCommon" c:type="ALSAHwdepDeviceCommon*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="DeviceInfo"
           c:symbol-prefix="device_info"
           c:type="ALSAHwdepDeviceInfo"
           parent="GObject.Object"
           glib:type-name="ALSAHwdepDeviceInfo"
           glib:get-type="alsahwdep_device_info_get_type"
           glib:type-struct="DeviceInfoClass">
      <doc xml:space="preserve"
           filename="../src/hwdep/device-info.c"
           line="4">A GObject-derived object to express information of ALSA hwdep device.
A [class@DeviceInfo] is a GObject-derived object to express information of ALSA hwdep device.
The call of [func@get_device_info] returns an instance of the object.

The object wraps `struct snd_hwdep_info` in UAPI of Linux sound subsystem.</doc>
      <source-position filename="../src/hwdep/device-info.h" line="15"/>
      <property name="card-id"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hwdep/device-info.c"
             line="103">The numeric ID of sound card.</doc>
        <type name="gint" c:type="gint"/>
      </property>
      <property name="device-id"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hwdep/device-info.c"
             line="91">The numeric ID of device.</doc>
        <type name="guint" c:type="guint"/>
      </property>
      <property name="id"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hwdep/device-info.c"
             line="115">The string ID of the hwdep device.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="iface"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hwdep/device-info.c"
             line="137">The type of interface for the hwdep device, one of ALSAHwdepIfaceType.</doc>
        <type name="IfaceType"/>
      </property>
      <property name="name"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hwdep/device-info.c"
             line="126">The name of the hwdep device.</doc>
        <type name="utf8" c:type="gchar*"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="DeviceInfoClass"
            c:type="ALSAHwdepDeviceInfoClass"
            glib:is-gtype-struct-for="DeviceInfo">
      <source-position filename="../src/hwdep/device-info.h" line="15"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <enumeration name="IfaceType"
                 glib:type-name="ALSAHwdepIfaceType"
                 glib:get-type="alsahwdep_iface_type_get_type"
                 c:type="ALSAHwdepIfaceType">
      <doc xml:space="preserve"
           filename="../src/hwdep/alsahwdep-enum-types.h"
           line="9">A set of enumerations for the interface of hwdep device.</doc>
      <member name="opl2"
              value="0"
              c:identifier="ALSAHWDEP_IFACE_TYPE_OPL2"
              glib:nick="opl2"
              glib:name="ALSAHWDEP_IFACE_TYPE_OPL2">
        <doc xml:space="preserve"
             filename="../src/hwdep/alsahwdep-enum-types.h"
             line="11">For OPL2 sound chip.</doc>
      </member>
      <member name="opl3"
              value="1"
              c:identifier="ALSAHWDEP_IFACE_TYPE_OPL3"
              glib:nick="opl3"
              glib:name="ALSAHWDEP_IFACE_TYPE_OPL3">
        <doc xml:space="preserve"
             filename="../src/hwdep/alsahwdep-enum-types.h"
             line="12">For OPL3 sound chip.</doc>
      </member>
      <member name="opl4"
              value="2"
              c:identifier="ALSAHWDEP_IFACE_TYPE_OPL4"
              glib:nick="opl4"
              glib:name="ALSAHWDEP_IFACE_TYPE_OPL4">
        <doc xml:space="preserve"
             filename="../src/hwdep/alsahwdep-enum-types.h"
             line="13">For OPL4 sound chip.</doc>
      </member>
      <member name="sb16csp"
              value="3"
              c:identifier="ALSAHWDEP_IFACE_TYPE_SB16CSP"
              glib:nick="sb16csp"
              glib:name="ALSAHWDEP_IFACE_TYPE_SB16CSP">
        <doc xml:space="preserve"
             filename="../src/hwdep/alsahwdep-enum-types.h"
             line="14">For Creative Signal Processor.</doc>
      </member>
      <member name="emu10k1"
              value="4"
              c:identifier="ALSAHWDEP_IFACE_TYPE_EMU10K1"
              glib:nick="emu10k1"
              glib:name="ALSAHWDEP_IFACE_TYPE_EMU10K1">
        <doc xml:space="preserve"
             filename="../src/hwdep/alsahwdep-enum-types.h"
             line="15">For FX8010 processor in EMU10K1 chip.</doc>
      </member>
      <member name="yss225"
              value="5"
              c:identifier="ALSAHWDEP_IFACE_TYPE_YSS225"
              glib:nick="yss225"
              glib:name="ALSAHWDEP_IFACE_TYPE_YSS225">
        <doc xml:space="preserve"
             filename="../src/hwdep/alsahwdep-enum-types.h"
             line="16">For Yamaha FX processor.</doc>
      </member>
      <member name="ics2115"
              value="6"
              c:identifier="ALSAHWDEP_IFACE_TYPE_ICS2115"
              glib:nick="ics2115"
              glib:name="ALSAHWDEP_IFACE_TYPE_ICS2115">
        <doc xml:space="preserve"
             filename="../src/hwdep/alsahwdep-enum-types.h"
             line="17">For Wavetable synth.</doc>
      </member>
      <member name="sscape"
              value="7"
              c:identifier="ALSAHWDEP_IFACE_TYPE_SSCAPE"
              glib:nick="sscape"
              glib:name="ALSAHWDEP_IFACE_TYPE_SSCAPE">
        <doc xml:space="preserve"
             filename="../src/hwdep/alsahwdep-enum-types.h"
             line="18">For Ensoniq SoundScape ISA card (MC68EC000).</doc>
      </member>
      <member name="vx"
              value="8"
              c:identifier="ALSAHWDEP_IFACE_TYPE_VX"
              glib:nick="vx"
              glib:name="ALSAHWDEP_IFACE_TYPE_VX">
        <doc xml:space="preserve"
             filename="../src/hwdep/alsahwdep-enum-types.h"
             line="19">For Digigram VX cards.</doc>
      </member>
      <member name="mixart"
              value="9"
              c:identifier="ALSAHWDEP_IFACE_TYPE_MIXART"
              glib:nick="mixart"
              glib:name="ALSAHWDEP_IFACE_TYPE_MIXART">
        <doc xml:space="preserve"
             filename="../src/hwdep/alsahwdep-enum-types.h"
             line="20">For Digigram miXart cards.</doc>
      </member>
      <member name="usx2y"
              value="10"
              c:identifier="ALSAHWDEP_IFACE_TYPE_USX2Y"
              glib:nick="usx2y"
              glib:name="ALSAHWDEP_IFACE_TYPE_USX2Y">
        <doc xml:space="preserve"
             filename="../src/hwdep/alsahwdep-enum-types.h"
             line="21">For Tascam US122, US224 &amp; US428 usb.</doc>
      </member>
      <member name="emux_wavetable"
              value="11"
              c:identifier="ALSAHWDEP_IFACE_TYPE_EMUX_WAVETABLE"
              glib:nick="emux-wavetable"
              glib:name="ALSAHWDEP_IFACE_TYPE_EMUX_WAVETABLE">
        <doc xml:space="preserve"
             filename="../src/hwdep/alsahwdep-enum-types.h"
             line="22">For EmuX wavetable.</doc>
      </member>
      <member name="bluetooth"
              value="12"
              c:identifier="ALSAHWDEP_IFACE_TYPE_BLUETOOTH"
              glib:nick="bluetooth"
              glib:name="ALSAHWDEP_IFACE_TYPE_BLUETOOTH">
        <doc xml:space="preserve"
             filename="../src/hwdep/alsahwdep-enum-types.h"
             line="23">For Bluetooth audio.</doc>
      </member>
      <member name="usx2y_pcm"
              value="13"
              c:identifier="ALSAHWDEP_IFACE_TYPE_USX2Y_PCM"
              glib:nick="usx2y-pcm"
              glib:name="ALSAHWDEP_IFACE_TYPE_USX2Y_PCM">
        <doc xml:space="preserve"
             filename="../src/hwdep/alsahwdep-enum-types.h"
             line="24">For Tascam US122, US224 &amp; US428 rawusb pcm.</doc>
      </member>
      <member name="pcxhr"
              value="14"
              c:identifier="ALSAHWDEP_IFACE_TYPE_PCXHR"
              glib:nick="pcxhr"
              glib:name="ALSAHWDEP_IFACE_TYPE_PCXHR">
        <doc xml:space="preserve"
             filename="../src/hwdep/alsahwdep-enum-types.h"
             line="25">For Digigram PCXHR.</doc>
      </member>
      <member name="sb_rc"
              value="15"
              c:identifier="ALSAHWDEP_IFACE_TYPE_SB_RC"
              glib:nick="sb-rc"
              glib:name="ALSAHWDEP_IFACE_TYPE_SB_RC">
        <doc xml:space="preserve"
             filename="../src/hwdep/alsahwdep-enum-types.h"
             line="26">For SB Extigy/Audigy2NX remote control.</doc>
      </member>
      <member name="hda"
              value="16"
              c:identifier="ALSAHWDEP_IFACE_TYPE_HDA"
              glib:nick="hda"
              glib:name="ALSAHWDEP_IFACE_TYPE_HDA">
        <doc xml:space="preserve"
             filename="../src/hwdep/alsahwdep-enum-types.h"
             line="27">For HD-audio.</doc>
      </member>
      <member name="usb_stream"
              value="17"
              c:identifier="ALSAHWDEP_IFACE_TYPE_USB_STREAM"
              glib:nick="usb-stream"
              glib:name="ALSAHWDEP_IFACE_TYPE_USB_STREAM">
        <doc xml:space="preserve"
             filename="../src/hwdep/alsahwdep-enum-types.h"
             line="28">For direct access to usb stream.</doc>
      </member>
      <member name="fw_dice"
              value="18"
              c:identifier="ALSAHWDEP_IFACE_TYPE_FW_DICE"
              glib:nick="fw-dice"
              glib:name="ALSAHWDEP_IFACE_TYPE_FW_DICE">
        <doc xml:space="preserve"
             filename="../src/hwdep/alsahwdep-enum-types.h"
             line="29">For TC DICE FireWire device.</doc>
      </member>
      <member name="fw_fireworks"
              value="19"
              c:identifier="ALSAHWDEP_IFACE_TYPE_FW_FIREWORKS"
              glib:nick="fw-fireworks"
              glib:name="ALSAHWDEP_IFACE_TYPE_FW_FIREWORKS">
        <doc xml:space="preserve"
             filename="../src/hwdep/alsahwdep-enum-types.h"
             line="30">For Echo Audio Fireworks based devices.</doc>
      </member>
      <member name="fw_bebob"
              value="20"
              c:identifier="ALSAHWDEP_IFACE_TYPE_FW_BEBOB"
              glib:nick="fw-bebob"
              glib:name="ALSAHWDEP_IFACE_TYPE_FW_BEBOB">
        <doc xml:space="preserve"
             filename="../src/hwdep/alsahwdep-enum-types.h"
             line="31">For BridgeCo BeBoB based device.</doc>
      </member>
      <member name="fw_oxfw"
              value="21"
              c:identifier="ALSAHWDEP_IFACE_TYPE_FW_OXFW"
              glib:nick="fw-oxfw"
              glib:name="ALSAHWDEP_IFACE_TYPE_FW_OXFW">
        <doc xml:space="preserve"
             filename="../src/hwdep/alsahwdep-enum-types.h"
             line="32">For Oxford OXFW970/971 based devices.</doc>
      </member>
      <member name="fw_digi00x"
              value="22"
              c:identifier="ALSAHWDEP_IFACE_TYPE_FW_DIGI00X"
              glib:nick="fw-digi00x"
              glib:name="ALSAHWDEP_IFACE_TYPE_FW_DIGI00X">
        <doc xml:space="preserve"
             filename="../src/hwdep/alsahwdep-enum-types.h"
             line="33">For Digidesign Digi 002/003 family.</doc>
      </member>
      <member name="fw_tascam"
              value="23"
              c:identifier="ALSAHWDEP_IFACE_TYPE_FW_TASCAM"
              glib:nick="fw-tascam"
              glib:name="ALSAHWDEP_IFACE_TYPE_FW_TASCAM">
        <doc xml:space="preserve"
             filename="../src/hwdep/alsahwdep-enum-types.h"
             line="34">For TASCAM FireWire series.</doc>
      </member>
      <member name="line6"
              value="24"
              c:identifier="ALSAHWDEP_IFACE_TYPE_LINE6"
              glib:nick="line6"
              glib:name="ALSAHWDEP_IFACE_TYPE_LINE6">
        <doc xml:space="preserve"
             filename="../src/hwdep/alsahwdep-enum-types.h"
             line="35">For Line6 USB processors. Available in Linux kernel 4.9.0 or later.</doc>
      </member>
      <member name="fw_motu"
              value="25"
              c:identifier="ALSAHWDEP_IFACE_TYPE_FW_MOTU"
              glib:nick="fw-motu"
              glib:name="ALSAHWDEP_IFACE_TYPE_FW_MOTU">
        <doc xml:space="preserve"
             filename="../src/hwdep/alsahwdep-enum-types.h"
             line="36">For MOTU FireWire series. Available in Linux kernel 4.12.0 or later.</doc>
      </member>
      <member name="fw_fireface"
              value="26"
              c:identifier="ALSAHWDEP_IFACE_TYPE_FW_FIREFACE"
              glib:nick="fw-fireface"
              glib:name="ALSAHWDEP_IFACE_TYPE_FW_FIREFACE">
        <doc xml:space="preserve"
             filename="../src/hwdep/alsahwdep-enum-types.h"
             line="37">For RME Fireface series. Available in Linux kernel 4.12.0 or later.</doc>
      </member>
    </enumeration>
    <function name="device_common_error_quark"
              c:identifier="alsahwdep_device_common_error_quark"
              moved-to="DeviceCommonError.quark">
      <doc xml:space="preserve"
           filename="../src/hwdep/device-common.c"
           line="17">Return the [alias@GLib.Quark] for [struct@GLib.Error] with code in ALSAHwdep.DeviceCommonError
enumerations.</doc>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hwdep/device-common.c"
             line="23">A [alias@GLib.Quark].</doc>
        <type name="GLib.Quark" c:type="GQuark"/>
      </return-value>
    </function>
    <function name="device_common_error_to_label"
              c:identifier="alsahwdep_device_common_error_to_label"
              moved-to="DeviceCommonError.to_label">
      <doc xml:space="preserve"
           filename="../src/hwdep/device-common.c"
           line="27">Retrieve the string label of error from code.</doc>
      <source-position filename="../src/hwdep/device-common.h" line="15"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="code" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hwdep/device-common.c"
               line="29">A ALSAHwdep.DeviceCommonError.</doc>
          <type name="DeviceCommonError" c:type="ALSAHwdepDeviceCommonError"/>
        </parameter>
        <parameter name="label"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hwdep/device-common.c"
               line="30">The string label of error.</doc>
          <type name="utf8" c:type="const char**"/>
        </parameter>
      </parameters>
    </function>
    <function name="get_device_id_list"
              c:identifier="alsahwdep_get_device_id_list"
              throws="1">
      <doc xml:space="preserve"
           filename="../src/hwdep/query.c"
           line="8">Get the list of numeric ID for available hwdep devices of sound card.

Nodes under sound subsystem in sysfs are used to gather the information.</doc>
      <source-position filename="../src/hwdep/query.h" line="9"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hwdep/query.c"
             line="19">%TRUE when the overall operation finishes successfully, else %FALSE.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="card_id" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hwdep/query.c"
               line="10">The numeric ID of sound card.</doc>
          <type name="guint" c:type="guint"/>
        </parameter>
        <parameter name="entries"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/hwdep/query.c"
               line="11">The list of numeric ID for hwdep device.</doc>
          <array length="2" zero-terminated="0" c:type="guint**">
            <type name="guint" c:type="guint*"/>
          </array>
        </parameter>
        <parameter name="entry_count"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/hwdep/query.c"
               line="12">The number of entries.</doc>
          <type name="gsize" c:type="gsize*"/>
        </parameter>
      </parameters>
    </function>
    <function name="get_device_info"
              c:identifier="alsahwdep_get_device_info"
              throws="1">
      <doc xml:space="preserve"
           filename="../src/hwdep/query.c"
           line="99">Get the information according to given numeric IDs for card and device.

The call of function executes `open(2)`, `close(2)`, and `ioctl(2)` system call
with `SNDRV_CTL_IOCTL_HWDEP_INFO` command for ALSA control character device.</doc>
      <source-position filename="../src/hwdep/query.h" line="18"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hwdep/query.c"
             line="111">%TRUE when the overall operation finishes successfully, else %FALSE.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="card_id" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hwdep/query.c"
               line="101">The numeric value for sound card to query.</doc>
          <type name="guint" c:type="guint"/>
        </parameter>
        <parameter name="device_id" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hwdep/query.c"
               line="102">The numeric value of hwdep device to query.</doc>
          <type name="guint" c:type="guint"/>
        </parameter>
        <parameter name="device_info"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/hwdep/query.c"
               line="103">The information of the device.</doc>
          <type name="DeviceInfo" c:type="ALSAHwdepDeviceInfo**"/>
        </parameter>
      </parameters>
    </function>
    <function name="get_hwdep_devnode"
              c:identifier="alsahwdep_get_hwdep_devnode"
              throws="1">
      <doc xml:space="preserve"
           filename="../src/hwdep/query.c"
           line="69">Allocate devnode string for hwdep device and return it when exists.

Nodes under sound subsystem in sysfs are used to gather the information.</doc>
      <source-position filename="../src/hwdep/query.h" line="15"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hwdep/query.c"
             line="80">%TRUE when the overall operation finishes successfully, else %FALSE.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="card_id" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hwdep/query.c"
               line="71">The numeridcal ID of sound card.</doc>
          <type name="guint" c:type="guint"/>
        </parameter>
        <parameter name="device_id" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hwdep/query.c"
               line="72">The numeric ID of hwdep device for the sound card.</doc>
          <type name="guint" c:type="guint"/>
        </parameter>
        <parameter name="devnode"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/hwdep/query.c"
               line="73">The string for devnode of hwdep device.</doc>
          <type name="utf8" c:type="char**"/>
        </parameter>
      </parameters>
    </function>
    <function name="get_hwdep_sysname"
              c:identifier="alsahwdep_get_hwdep_sysname"
              throws="1">
      <doc xml:space="preserve"
           filename="../src/hwdep/query.c"
           line="39">Allocate sysname for hwdep device and return it when it exists.

Nodes under sound subsystem in sysfs are used to gather the information.</doc>
      <source-position filename="../src/hwdep/query.h" line="12"/>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/hwdep/query.c"
             line="50">%TRUE when the overall operation finishes successfully, else %FALSE.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="card_id" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hwdep/query.c"
               line="41">The numeridcal ID of sound card.</doc>
          <type name="guint" c:type="guint"/>
        </parameter>
        <parameter name="device_id" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/hwdep/query.c"
               line="42">The numeric ID of hwdep device for the sound card.</doc>
          <type name="guint" c:type="guint"/>
        </parameter>
        <parameter name="sysname"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/hwdep/query.c"
               line="43">The string for sysname of hwdep device.</doc>
          <type name="utf8" c:type="char**"/>
        </parameter>
      </parameters>
    </function>
  </namespace>
</repository>
