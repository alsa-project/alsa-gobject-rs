<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="ALSATimer" version="0.0"/>
  <include name="GLib" version="2.0"/>
  <include name="GObject" version="2.0"/>
  <package name="alsaseq"/>
  <c:include name="alsaseq.h"/>
  <namespace name="ALSASeq"
             version="0.0"
             shared-library="libalsaseq.so.0"
             c:identifier-prefixes="ALSASeq"
             c:symbol-prefixes="alsaseq_">
    <record name="Addr"
            c:type="ALSASeqAddr"
            glib:type-name="ALSASeqAddr"
            glib:get-type="alsaseq_addr_get_type"
            c:symbol-prefix="addr">
      <source-position filename="../src/seq/addr.h" line="11"/>
      <constructor name="new" c:identifier="alsaseq_addr_new">
        <doc xml:space="preserve"
             filename="../src/seq/addr.c"
             line="29">Allocate and return an instance of ALSASeqAddr.</doc>
        <source-position filename="../src/seq/addr.h" line="15"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/seq/addr.c"
               line="36">A #ALSASeqAddr.</doc>
          <type name="Addr" c:type="ALSASeqAddr*"/>
        </return-value>
        <parameters>
          <parameter name="client_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/addr.c"
                 line="31">The numerical ID of client to address.</doc>
            <type name="guint8" c:type="guint8"/>
          </parameter>
          <parameter name="port_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/addr.c"
                 line="32">The numerical ID of port to address.</doc>
            <type name="guint8" c:type="guint8"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="equal" c:identifier="alsaseq_addr_equal">
        <source-position filename="../src/seq/addr.h" line="21"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/seq/addr.c"
               line="77">whether the given object indicates the same element.</doc>
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/addr.c"
                 line="74">A #ALSASeqAddr.</doc>
            <type name="Addr" c:type="const ALSASeqAddr*"/>
          </instance-parameter>
          <parameter name="target" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/addr.c"
                 line="75">A #ALSASeqAddr to compare.</doc>
            <type name="Addr" c:type="const ALSASeqAddr*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_client_id" c:identifier="alsaseq_addr_get_client_id">
        <doc xml:space="preserve"
             filename="../src/seq/addr.c"
             line="48">Get the numerical ID of client to address.</doc>
        <source-position filename="../src/seq/addr.h" line="17"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/addr.c"
                 line="50">A #ALSASeqAddr.</doc>
            <type name="Addr" c:type="const ALSASeqAddr*"/>
          </instance-parameter>
          <parameter name="client_id"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/seq/addr.c"
                 line="51">The numerical ID of client to address.</doc>
            <type name="guint8" c:type="guint8*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_port_id" c:identifier="alsaseq_addr_get_port_id">
        <doc xml:space="preserve"
             filename="../src/seq/addr.c"
             line="60">Get the numerical ID of port to address.</doc>
        <source-position filename="../src/seq/addr.h" line="19"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/addr.c"
                 line="62">A #ALSASeqAddr.</doc>
            <type name="Addr" c:type="const ALSASeqAddr*"/>
          </instance-parameter>
          <parameter name="port_id"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/seq/addr.c"
                 line="63">The numerical ID of port to address.</doc>
            <type name="guint8" c:type="guint8*"/>
          </parameter>
        </parameters>
      </method>
    </record>
    <function-macro name="CLIENT_INFO"
                    c:identifier="ALSASEQ_CLIENT_INFO"
                    introspectable="0">
      <source-position filename="../src/seq/client-info.h" line="11"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CLIENT_INFO_CLASS"
                    c:identifier="ALSASEQ_CLIENT_INFO_CLASS"
                    introspectable="0">
      <source-position filename="../src/seq/client-info.h" line="19"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CLIENT_INFO_GET_CLASS"
                    c:identifier="ALSASEQ_CLIENT_INFO_GET_CLASS"
                    introspectable="0">
      <source-position filename="../src/seq/client-info.h" line="26"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CLIENT_POOL"
                    c:identifier="ALSASEQ_CLIENT_POOL"
                    introspectable="0">
      <source-position filename="../src/seq/client-pool.h" line="11"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CLIENT_POOL_CLASS"
                    c:identifier="ALSASEQ_CLIENT_POOL_CLASS"
                    introspectable="0">
      <source-position filename="../src/seq/client-pool.h" line="19"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="CLIENT_POOL_GET_CLASS"
                    c:identifier="ALSASEQ_CLIENT_POOL_GET_CLASS"
                    introspectable="0">
      <source-position filename="../src/seq/client-pool.h" line="26"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <class name="ClientInfo"
           c:symbol-prefix="client_info"
           c:type="ALSASeqClientInfo"
           parent="GObject.Object"
           glib:type-name="ALSASeqClientInfo"
           glib:get-type="alsaseq_client_info_get_type"
           glib:type-struct="ClientInfoClass">
      <source-position filename="../src/seq/client-info.h" line="43"/>
      <constructor name="new" c:identifier="alsaseq_client_info_new">
        <doc xml:space="preserve"
             filename="../src/seq/client-info.c"
             line="201">Allocate and return an instance of ALSASeqClientinfo class.</doc>
        <source-position filename="../src/seq/client-info.h" line="47"/>
        <return-value transfer-ownership="full">
          <type name="ClientInfo" c:type="ALSASeqClientInfo*"/>
        </return-value>
      </constructor>
      <method name="get_event_filter"
              c:identifier="alsaseq_client_info_get_event_filter"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/seq/client-info.c"
             line="247">Get the list of type of events configured to be listen.</doc>
        <source-position filename="../src/seq/client-info.h" line="54"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/client-info.c"
                 line="249">A #ALSASeqClientInfo.</doc>
            <type name="ClientInfo" c:type="ALSASeqClientInfo*"/>
          </instance-parameter>
          <parameter name="event_types"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/seq/client-info.c"
                 line="250">The array with elements
              for the type of event to listen.</doc>
            <array length="1" zero-terminated="0" c:type="ALSASeqEventType**">
              <type name="EventType" c:type="ALSASeqEventType*"/>
            </array>
          </parameter>
          <parameter name="event_type_count"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/seq/client-info.c"
                 line="252">The number of elements for the type of event.</doc>
            <type name="gsize" c:type="gsize*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_event_filter"
              c:identifier="alsaseq_client_info_set_event_filter"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/seq/client-info.c"
             line="211">Set the list of type of events configured to be listen.</doc>
        <source-position filename="../src/seq/client-info.h" line="49"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/client-info.c"
                 line="213">A #ALSASeqClientInfo.</doc>
            <type name="ClientInfo" c:type="ALSASeqClientInfo*"/>
          </instance-parameter>
          <parameter name="event_types" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/client-info.c"
                 line="214">The array with elements for
              the type of event to listen.</doc>
            <array length="1"
                   zero-terminated="0"
                   c:type="const ALSASeqEventType*">
              <type name="EventType" c:type="ALSASeqEventType"/>
            </array>
          </parameter>
          <parameter name="event_type_count" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/client-info.c"
                 line="216">The number of elements for the type of event.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
        </parameters>
      </method>
      <property name="card-id" writable="1" transfer-ownership="none">
        <type name="gint" c:type="gint"/>
      </property>
      <property name="client-id" writable="1" transfer-ownership="none">
        <type name="guint8" c:type="guint8"/>
      </property>
      <property name="filter-attributes"
                writable="1"
                transfer-ownership="none">
        <type name="FilterAttrFlag"/>
      </property>
      <property name="lost-count" transfer-ownership="none">
        <type name="gint" c:type="gint"/>
      </property>
      <property name="name" writable="1" transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="port-count" transfer-ownership="none">
        <type name="gint" c:type="gint"/>
      </property>
      <property name="process-id" transfer-ownership="none">
        <type name="gint64" c:type="gint64"/>
      </property>
      <property name="type" writable="1" transfer-ownership="none">
        <type name="ClientType"/>
      </property>
      <property name="use-filter" writable="1" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="ClientInfoPrivate" c:type="ALSASeqClientInfoPrivate*"/>
      </field>
    </class>
    <record name="ClientInfoClass"
            c:type="ALSASeqClientInfoClass"
            glib:is-gtype-struct-for="ClientInfo">
      <source-position filename="../src/seq/client-info.h" line="43"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <record name="ClientInfoPrivate"
            c:type="ALSASeqClientInfoPrivate"
            disguised="1">
      <source-position filename="../src/seq/client-info.h" line="33"/>
    </record>
    <class name="ClientPool"
           c:symbol-prefix="client_pool"
           c:type="ALSASeqClientPool"
           parent="GObject.Object"
           glib:type-name="ALSASeqClientPool"
           glib:get-type="alsaseq_client_pool_get_type"
           glib:type-struct="ClientPoolClass">
      <source-position filename="../src/seq/client-pool.h" line="43"/>
      <constructor name="new" c:identifier="alsaseq_client_pool_new">
        <source-position filename="../src/seq/client-pool.h" line="47"/>
        <return-value transfer-ownership="full">
          <type name="ClientPool" c:type="ALSASeqClientPool*"/>
        </return-value>
      </constructor>
      <property name="client-id" transfer-ownership="none">
        <type name="guint8" c:type="guint8"/>
      </property>
      <property name="input-free" writable="1" transfer-ownership="none">
        <type name="gint" c:type="gint"/>
      </property>
      <property name="input-pool" writable="1" transfer-ownership="none">
        <type name="gint" c:type="gint"/>
      </property>
      <property name="output-free" writable="1" transfer-ownership="none">
        <type name="gint" c:type="gint"/>
      </property>
      <property name="output-pool" writable="1" transfer-ownership="none">
        <type name="gint" c:type="gint"/>
      </property>
      <property name="output-room" writable="1" transfer-ownership="none">
        <type name="gint" c:type="gint"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="ClientPoolPrivate" c:type="ALSASeqClientPoolPrivate*"/>
      </field>
    </class>
    <record name="ClientPoolClass"
            c:type="ALSASeqClientPoolClass"
            glib:is-gtype-struct-for="ClientPool">
      <source-position filename="../src/seq/client-pool.h" line="43"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <record name="ClientPoolPrivate"
            c:type="ALSASeqClientPoolPrivate"
            disguised="1">
      <source-position filename="../src/seq/client-pool.h" line="33"/>
    </record>
    <enumeration name="ClientType"
                 glib:type-name="ALSASeqClientType"
                 glib:get-type="alsaseq_client_type_get_type"
                 c:type="ALSASeqClientType">
      <doc xml:space="preserve"
           filename="../src/seq/alsaseq-enum-types.h"
           line="33">A set of enumerations for the type of client.</doc>
      <member name="none"
              value="0"
              c:identifier="ALSASEQ_CLIENT_TYPE_NONE"
              glib:nick="none"
              glib:name="ALSASEQ_CLIENT_TYPE_NONE">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="35">The client is invalid.</doc>
      </member>
      <member name="user"
              value="1"
              c:identifier="ALSASEQ_CLIENT_TYPE_USER"
              glib:nick="user"
              glib:name="ALSASEQ_CLIENT_TYPE_USER">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="36">The client is userspace application.</doc>
      </member>
      <member name="kernel"
              value="2"
              c:identifier="ALSASEQ_CLIENT_TYPE_KERNEL"
              glib:nick="kernel"
              glib:name="ALSASEQ_CLIENT_TYPE_KERNEL">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="37">The client is kernel driver.</doc>
      </member>
    </enumeration>
    <function-macro name="EVENT_CNTR"
                    c:identifier="ALSASEQ_EVENT_CNTR"
                    introspectable="0">
      <source-position filename="../src/seq/event-cntr.h" line="11"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="EVENT_CNTR_CLASS"
                    c:identifier="ALSASEQ_EVENT_CNTR_CLASS"
                    introspectable="0">
      <source-position filename="../src/seq/event-cntr.h" line="19"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="EVENT_CNTR_GET_CLASS"
                    c:identifier="ALSASEQ_EVENT_CNTR_GET_CLASS"
                    introspectable="0">
      <source-position filename="../src/seq/event-cntr.h" line="26"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <class name="EventCntr"
           c:symbol-prefix="event_cntr"
           c:type="ALSASeqEventCntr"
           parent="GObject.Object"
           glib:type-name="ALSASeqEventCntr"
           glib:get-type="alsaseq_event_cntr_get_type"
           glib:type-struct="EventCntrClass">
      <source-position filename="../src/seq/event-cntr.h" line="43"/>
      <constructor name="new" c:identifier="alsaseq_event_cntr_new" throws="1">
        <doc xml:space="preserve"
             filename="../src/seq/event-cntr.c"
             line="83">Allocates and return an instance of #ALSASeqEventCntr to store the count
of events.</doc>
        <source-position filename="../src/seq/event-cntr.h" line="47"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/seq/event-cntr.c"
               line="91">A #ALSASeqEventCntr.</doc>
          <type name="EventCntr" c:type="ALSASeqEventCntr*"/>
        </return-value>
        <parameters>
          <parameter name="count" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="85">The number of events going to be allocated.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="calculate_pool_consumption"
              c:identifier="alsaseq_event_cntr_calculate_pool_consumption"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/seq/event-cntr.c"
             line="215">Calculate the amount of cells in client pool to be consumed by a part
of events in the container.</doc>
        <source-position filename="../src/seq/event-cntr.h" line="51"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="217">A #ALSASeqEventCntr.</doc>
            <type name="EventCntr" c:type="ALSASeqEventCntr*"/>
          </instance-parameter>
          <parameter name="count" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="218">The amount of events for calculation.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="cells"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="219">The amount of cells to be consumed in pool.</doc>
            <type name="gsize" c:type="gsize*"/>
          </parameter>
        </parameters>
      </method>
      <method name="count_events"
              c:identifier="alsaseq_event_cntr_count_events">
        <doc xml:space="preserve"
             filename="../src/seq/event-cntr.c"
             line="190">count stored events.</doc>
        <source-position filename="../src/seq/event-cntr.h" line="49"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="192">A #ALSASeqEventCntr.</doc>
            <type name="EventCntr" c:type="ALSASeqEventCntr*"/>
          </instance-parameter>
          <parameter name="count"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="193">The count of stored events.</doc>
            <type name="gsize" c:type="gsize*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_addr_data"
              c:identifier="alsaseq_event_cntr_get_addr_data"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/seq/event-cntr.c"
             line="1361">Get the address data of event pointed by the index.</doc>
        <source-position filename="../src/seq/event-cntr.h" line="147"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="1363">A #ALSASeqEventCntr.</doc>
            <type name="EventCntr" c:type="ALSASeqEventCntr*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="1364">The index of event to set.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="data"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="1365">The address data of event.</doc>
            <type name="Addr" c:type="const ALSASeqAddr**"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_blob_data"
              c:identifier="alsaseq_event_cntr_get_blob_data"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/seq/event-cntr.c"
             line="1160">Refer to the blob data of event.</doc>
        <source-position filename="../src/seq/event-cntr.h" line="130"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="1162">A #ALSASeqEventCntr.</doc>
            <type name="EventCntr" c:type="ALSASeqEventCntr*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="1163">The index of event to set.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="data"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="1164">The pointer to blob data.</doc>
            <array length="2" zero-terminated="0" c:type="const guint8**">
              <type name="guint8" c:type="guint8*"/>
            </array>
          </parameter>
          <parameter name="size"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="1165">The size of data.</doc>
            <type name="gsize" c:type="gsize*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_byte_data"
              c:identifier="alsaseq_event_cntr_get_byte_data"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/seq/event-cntr.c"
             line="1034">Get the byte data of event pointed by the index.</doc>
        <source-position filename="../src/seq/event-cntr.h" line="120"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="1036">A #ALSASeqEventCntr.</doc>
            <type name="EventCntr" c:type="ALSASeqEventCntr*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="1037">The index of event to set.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="data"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="1038">The byte data of event.</doc>
            <array zero-terminated="0" c:type="const guint8**" fixed-size="12">
              <type name="guint8" c:type="guint8"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="get_connect_data"
              c:identifier="alsaseq_event_cntr_get_connect_data"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/seq/event-cntr.c"
             line="1423">Get the connect data of event pointed by the index.</doc>
        <source-position filename="../src/seq/event-cntr.h" line="152"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="1425">A #ALSASeqEventCntr.</doc>
            <type name="EventCntr" c:type="ALSASeqEventCntr*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="1426">The index of event to set.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="data"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="1427">The connect data of event.</doc>
            <type name="EventDataConnect"
                  c:type="const ALSASeqEventDataConnect**"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_ctl_data"
              c:identifier="alsaseq_event_cntr_get_ctl_data"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/seq/event-cntr.c"
             line="972">Get the control data of event pointed by the index.</doc>
        <source-position filename="../src/seq/event-cntr.h" line="115"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="974">A #ALSASeqEventCntr.</doc>
            <type name="EventCntr" c:type="ALSASeqEventCntr*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="975">The index of event to set.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="data"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="976">The control data of event.</doc>
            <type name="EventDataCtl" c:type="const ALSASeqEventDataCtl**"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_dst"
              c:identifier="alsaseq_event_cntr_get_dst"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/seq/event-cntr.c"
             line="711">Get the destination of event pointed by index.</doc>
        <source-position filename="../src/seq/event-cntr.h" line="100"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="713">A #ALSASeqEventCntr.</doc>
            <type name="EventCntr" c:type="ALSASeqEventCntr*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="714">The index of event to set.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="dst"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="715">The destination of event.</doc>
            <type name="Addr" c:type="const ALSASeqAddr**"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_event_type"
              c:identifier="alsaseq_event_cntr_get_event_type"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/seq/event-cntr.c"
             line="252">Get the type of event pointed by the index.</doc>
        <source-position filename="../src/seq/event-cntr.h" line="54"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="254">A #ALSASeqEventCntr.</doc>
            <type name="EventCntr" c:type="ALSASeqEventCntr*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="255">The index of event to refer to.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="ev_type"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="256">The type of event.</doc>
            <type name="EventType" c:type="ALSASeqEventType*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_length_mode"
              c:identifier="alsaseq_event_cntr_get_length_mode"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/seq/event-cntr.c"
             line="436">Get the mode of length for the event pointed by the index.</doc>
        <source-position filename="../src/seq/event-cntr.h" line="74"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="438">A #ALSASeqEventCntr.</doc>
            <type name="EventCntr" c:type="ALSASeqEventCntr*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="439">The index of event to set.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="mode"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="440">The mode of length, one of #ALSASeqEventLengthMode.</doc>
            <type name="EventLengthMode" c:type="ALSASeqEventLengthMode*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_note_data"
              c:identifier="alsaseq_event_cntr_get_note_data"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/seq/event-cntr.c"
             line="910">Get the note data of event pointed by the index.</doc>
        <source-position filename="../src/seq/event-cntr.h" line="110"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="912">A #ALSASeqEventCntr.</doc>
            <type name="EventCntr" c:type="ALSASeqEventCntr*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="913">The index of event to set.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="data"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="914">The note data of event.</doc>
            <type name="EventDataNote" c:type="const ALSASeqEventDataNote**"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_priority_mode"
              c:identifier="alsaseq_event_cntr_get_priority_mode"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/seq/event-cntr.c"
             line="467">Get the mode of priority for the event pointed by the index.</doc>
        <source-position filename="../src/seq/event-cntr.h" line="78"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="469">A #ALSASeqEventCntr.</doc>
            <type name="EventCntr" c:type="ALSASeqEventCntr*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="470">The index of event to set.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="mode"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="471">The mode of priority, one of #ALSASeqEventPriorityMode.</doc>
            <type name="EventPriorityMode" c:type="ALSASeqEventPriorityMode*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_quadlet_data"
              c:identifier="alsaseq_event_cntr_get_quadlet_data"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/seq/event-cntr.c"
             line="1096">Get the quadlet data of event pointed by the index.</doc>
        <source-position filename="../src/seq/event-cntr.h" line="125"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="1098">A #ALSASeqEventCntr.</doc>
            <type name="EventCntr" c:type="ALSASeqEventCntr*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="1099">The index of event to set.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="data"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="1100">The quadlet data of event.</doc>
            <array zero-terminated="0" c:type="const guint32**" fixed-size="3">
              <type name="guint32" c:type="guint32"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="get_queue_data"
              c:identifier="alsaseq_event_cntr_get_queue_data"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/seq/event-cntr.c"
             line="1237">Get the queue data of event pointed by the index.</doc>
        <source-position filename="../src/seq/event-cntr.h" line="137"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="1239">A #ALSASeqEventCntr.</doc>
            <type name="EventCntr" c:type="ALSASeqEventCntr*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="1240">The index of event to set.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="data"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="1241">The queue data of event.</doc>
            <type name="EventDataQueue"
                  c:type="const ALSASeqEventDataQueue**"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_queue_id"
              c:identifier="alsaseq_event_cntr_get_queue_id"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/seq/event-cntr.c"
             line="588">Get the numerical ID of queue to deliver the event.</doc>
        <source-position filename="../src/seq/event-cntr.h" line="90"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="590">A #ALSASeqEventCntr.</doc>
            <type name="EventCntr" c:type="ALSASeqEventCntr*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="591">The index of event to set.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="queue_id"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="592">The numerical ID of queue to deliver the event. One of
                  #ALSASeqSpecificQueueId is available as well.</doc>
            <type name="guint8" c:type="guint8*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_result_data"
              c:identifier="alsaseq_event_cntr_get_result_data"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/seq/event-cntr.c"
             line="1485">Get the result data of event pointed by the index.</doc>
        <source-position filename="../src/seq/event-cntr.h" line="157"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="1487">A #ALSASeqEventCntr.</doc>
            <type name="EventCntr" c:type="ALSASeqEventCntr*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="1488">The index of event to set.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="data"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="1489">The result data of event.</doc>
            <type name="EventDataResult"
                  c:type="const ALSASeqEventDataResult**"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_src"
              c:identifier="alsaseq_event_cntr_get_src"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/seq/event-cntr.c"
             line="771">Get the destination of event pointed by index.</doc>
        <source-position filename="../src/seq/event-cntr.h" line="105"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="773">A #ALSASeqEventCntr.</doc>
            <type name="EventCntr" c:type="ALSASeqEventCntr*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="774">The index of event to set.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="src"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="775">The source of event.</doc>
            <type name="Addr" c:type="const ALSASeqAddr**"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_tag"
              c:identifier="alsaseq_event_cntr_get_tag"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/seq/event-cntr.c"
             line="529">Get the tag assignd to the event pointed by the index.</doc>
        <source-position filename="../src/seq/event-cntr.h" line="85"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="531">A #ALSASeqEventCntr.</doc>
            <type name="EventCntr" c:type="ALSASeqEventCntr*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="532">The index of event to set.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="tag"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="533">The tag assigned to the event.</doc>
            <type name="gint8" c:type="gint8*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_time_mode"
              c:identifier="alsaseq_event_cntr_get_time_mode"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/seq/event-cntr.c"
             line="374">Get the mode of time for the event pointed by the index.</doc>
        <source-position filename="../src/seq/event-cntr.h" line="67"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="376">A #ALSASeqEventCntr.</doc>
            <type name="EventCntr" c:type="ALSASeqEventCntr*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="377">The index of event to set.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="mode"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="378">The mode of time, one of #ALSASeqEventTimeMode.</doc>
            <type name="EventTimeMode" c:type="ALSASeqEventTimeMode*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_tstamp"
              c:identifier="alsaseq_event_cntr_get_tstamp"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/seq/event-cntr.c"
             line="649">Get the timestamp of event pointed by index.</doc>
        <source-position filename="../src/seq/event-cntr.h" line="95"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="651">A #ALSASeqEventCntr.</doc>
            <type name="EventCntr" c:type="ALSASeqEventCntr*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="652">The index of event to set.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="tstamp"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="653">The timestamp for the event. The content is
         affected by the mode of tstamping.</doc>
            <type name="Tstamp" c:type="const ALSASeqTstamp**"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_tstamp_data"
              c:identifier="alsaseq_event_cntr_get_tstamp_data"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/seq/event-cntr.c"
             line="1299">Get the timestamp data of event pointed by the index.</doc>
        <source-position filename="../src/seq/event-cntr.h" line="142"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="1301">A #ALSASeqEventCntr.</doc>
            <type name="EventCntr" c:type="ALSASeqEventCntr*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="1302">The index of event to set.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="data"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="1303">The timestamp data of event.</doc>
            <type name="Tstamp" c:type="const ALSASeqTstamp**"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_tstamp_mode"
              c:identifier="alsaseq_event_cntr_get_tstamp_mode"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/seq/event-cntr.c"
             line="312">Get the mode of timestamping for the event pointed by the index.</doc>
        <source-position filename="../src/seq/event-cntr.h" line="60"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="314">A #ALSASeqEventCntr.</doc>
            <type name="EventCntr" c:type="ALSASeqEventCntr*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="315">The index of event to set.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="mode"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="316">The mode of timestamping, one of #ALSASeqEventTimestampMode.</doc>
            <type name="EventTimestampMode"
                  c:type="ALSASeqEventTimestampMode*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_addr_data"
              c:identifier="alsaseq_event_cntr_set_addr_data"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/seq/event-cntr.c"
             line="1390">Copy the address data to the event pointed by the index.</doc>
        <source-position filename="../src/seq/event-cntr.h" line="149"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="1392">A #ALSASeqEventCntr.</doc>
            <type name="EventCntr" c:type="ALSASeqEventCntr*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="1393">The index of event to set.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="1394">The address data of event.</doc>
            <type name="Addr" c:type="const ALSASeqAddr*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_blob_data"
              c:identifier="alsaseq_event_cntr_set_blob_data"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/seq/event-cntr.c"
             line="1206">Copy the quadlet data to the event pointed by the index.</doc>
        <source-position filename="../src/seq/event-cntr.h" line="133"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="1208">A #ALSASeqEventCntr.</doc>
            <type name="EventCntr" c:type="ALSASeqEventCntr*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="1209">The index of event to set.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="1210">The pointer to blob data for the event.</doc>
            <array length="2" zero-terminated="0" c:type="const guint8*">
              <type name="guint8" c:type="guint8"/>
            </array>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="1211">The size of data.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_byte_data"
              c:identifier="alsaseq_event_cntr_set_byte_data"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/seq/event-cntr.c"
             line="1063">Copy the byte data to the event pointed by the index.</doc>
        <source-position filename="../src/seq/event-cntr.h" line="122"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="1065">A #ALSASeqEventCntr.</doc>
            <type name="EventCntr" c:type="ALSASeqEventCntr*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="1066">The index of event to set.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="1067">The byte data of event.</doc>
            <array zero-terminated="0" c:type="const guint8*" fixed-size="12">
              <type name="guint8" c:type="guint8"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="set_connect_data"
              c:identifier="alsaseq_event_cntr_set_connect_data"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/seq/event-cntr.c"
             line="1452">Copy the connect data to the event pointed by the index.</doc>
        <source-position filename="../src/seq/event-cntr.h" line="154"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="1454">A #ALSASeqEventCntr.</doc>
            <type name="EventCntr" c:type="ALSASeqEventCntr*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="1455">The index of event to set.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="1456">The connect data of event.</doc>
            <type name="EventDataConnect"
                  c:type="const ALSASeqEventDataConnect*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_ctl_data"
              c:identifier="alsaseq_event_cntr_set_ctl_data"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/seq/event-cntr.c"
             line="1001">Copy the control data to the event pointed by the index.</doc>
        <source-position filename="../src/seq/event-cntr.h" line="117"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="1003">A #ALSASeqEventCntr.</doc>
            <type name="EventCntr" c:type="ALSASeqEventCntr*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="1004">The index of event to set.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="1005">The control data of event.</doc>
            <type name="EventDataCtl" c:type="const ALSASeqEventDataCtl*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_dst"
              c:identifier="alsaseq_event_cntr_set_dst"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/seq/event-cntr.c"
             line="741">Set the destination of event pointed by index.</doc>
        <source-position filename="../src/seq/event-cntr.h" line="102"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="743">A #ALSASeqEventCntr.</doc>
            <type name="EventCntr" c:type="ALSASeqEventCntr*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="744">The index of event to set.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="dst" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="745">The destination of event.</doc>
            <type name="Addr" c:type="const ALSASeqAddr*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_event_type"
              c:identifier="alsaseq_event_cntr_set_event_type"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/seq/event-cntr.c"
             line="282">Set the type to event pointed by the index;</doc>
        <source-position filename="../src/seq/event-cntr.h" line="56"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="284">A #ALSASeqEventCntr.</doc>
            <type name="EventCntr" c:type="ALSASeqEventCntr*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="285">The index of event to set.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="ev_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="286">A #ALSASeqEventType.</doc>
            <type name="EventType" c:type="ALSASeqEventType"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_note_data"
              c:identifier="alsaseq_event_cntr_set_note_data"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/seq/event-cntr.c"
             line="939">Copy the note data to the event pointed by the index.</doc>
        <source-position filename="../src/seq/event-cntr.h" line="112"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="941">A #ALSASeqEventCntr.</doc>
            <type name="EventCntr" c:type="ALSASeqEventCntr*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="942">The index of event to set.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="943">The note data of event.</doc>
            <type name="EventDataNote" c:type="const ALSASeqEventDataNote*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_priority_mode"
              c:identifier="alsaseq_event_cntr_set_priority_mode"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/seq/event-cntr.c"
             line="498">Set the mode of priority for the event pointed by the index.</doc>
        <source-position filename="../src/seq/event-cntr.h" line="81"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="500">A #ALSASeqEventCntr.</doc>
            <type name="EventCntr" c:type="ALSASeqEventCntr*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="501">The index of event to set.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="mode" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="502">The mode of priority, one of #ALSASeqEventPriorityMode.</doc>
            <type name="EventPriorityMode" c:type="ALSASeqEventPriorityMode"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_quadlet_data"
              c:identifier="alsaseq_event_cntr_set_quadlet_data"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/seq/event-cntr.c"
             line="1126">Copy the quadlet data to the event pointed by the index.</doc>
        <source-position filename="../src/seq/event-cntr.h" line="127"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="1128">A #ALSASeqEventCntr.</doc>
            <type name="EventCntr" c:type="ALSASeqEventCntr*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="1129">The index of event to set.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="1130">The quadlet data of event.</doc>
            <array zero-terminated="0" c:type="const guint32*" fixed-size="3">
              <type name="guint32" c:type="guint32"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="set_queue_data"
              c:identifier="alsaseq_event_cntr_set_queue_data"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/seq/event-cntr.c"
             line="1266">Copy the queue data to the event pointed by the index.</doc>
        <source-position filename="../src/seq/event-cntr.h" line="139"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="1268">A #ALSASeqEventCntr.</doc>
            <type name="EventCntr" c:type="ALSASeqEventCntr*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="1269">The index of event to set.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="1270">The queue data of event.</doc>
            <type name="EventDataQueue" c:type="const ALSASeqEventDataQueue*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_queue_id"
              c:identifier="alsaseq_event_cntr_set_queue_id"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/seq/event-cntr.c"
             line="619">Set the numerical ID of queue to deliver the event.</doc>
        <source-position filename="../src/seq/event-cntr.h" line="92"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="621">A #ALSASeqEventCntr.</doc>
            <type name="EventCntr" c:type="ALSASeqEventCntr*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="622">The index of event to set.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="queue_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="623">The numerical ID of queue to deliver the event. One of
           #ALSASeqSpecificQueueId is available as well.</doc>
            <type name="guint8" c:type="guint8"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_result_data"
              c:identifier="alsaseq_event_cntr_set_result_data"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/seq/event-cntr.c"
             line="1514">Copy the result data to the event pointed by the index.</doc>
        <source-position filename="../src/seq/event-cntr.h" line="159"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="1516">A #ALSASeqEventCntr.</doc>
            <type name="EventCntr" c:type="ALSASeqEventCntr*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="1517">The index of event to set.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="1518">The result data of event.</doc>
            <type name="EventDataResult"
                  c:type="const ALSASeqEventDataResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_src"
              c:identifier="alsaseq_event_cntr_set_src"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/seq/event-cntr.c"
             line="801">Set the destination of event pointed by index.</doc>
        <source-position filename="../src/seq/event-cntr.h" line="107"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="803">A #ALSASeqEventCntr.</doc>
            <type name="EventCntr" c:type="ALSASeqEventCntr*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="804">The index of event to set.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="src" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="805">The source of event.</doc>
            <type name="Addr" c:type="const ALSASeqAddr*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_tag"
              c:identifier="alsaseq_event_cntr_set_tag"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/seq/event-cntr.c"
             line="559">Get the tag assignd to the event pointed by the index.</doc>
        <source-position filename="../src/seq/event-cntr.h" line="87"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="561">A #ALSASeqEventCntr.</doc>
            <type name="EventCntr" c:type="ALSASeqEventCntr*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="562">The index of event to set.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="tag" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="563">The tag going to be assignd to the event.</doc>
            <type name="gint8" c:type="gint8"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_time_mode"
              c:identifier="alsaseq_event_cntr_set_time_mode"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/seq/event-cntr.c"
             line="405">Set the mode of time for the event pointed by the index.</doc>
        <source-position filename="../src/seq/event-cntr.h" line="70"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="407">A #ALSASeqEventCntr.</doc>
            <type name="EventCntr" c:type="ALSASeqEventCntr*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="408">The index of event to set.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="mode" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="409">The mode of time, one of #ALSASeqEventTimeMode.</doc>
            <type name="EventTimeMode" c:type="ALSASeqEventTimeMode"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_tstamp"
              c:identifier="alsaseq_event_cntr_set_tstamp"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/seq/event-cntr.c"
             line="680">Set the timestamp for the event pointed by index.</doc>
        <source-position filename="../src/seq/event-cntr.h" line="97"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="682">A #ALSASeqEventCntr.</doc>
            <type name="EventCntr" c:type="ALSASeqEventCntr*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="683">The index of event to set.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="tstamp" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="684">The timestamp for the event. The content is affected by the mode of
         tstamping.</doc>
            <type name="Tstamp" c:type="const ALSASeqTstamp*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_tstamp_data"
              c:identifier="alsaseq_event_cntr_set_tstamp_data"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/seq/event-cntr.c"
             line="1328">Copy the timestamp data to the event pointed by the index.</doc>
        <source-position filename="../src/seq/event-cntr.h" line="144"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="1330">A #ALSASeqEventCntr.</doc>
            <type name="EventCntr" c:type="ALSASeqEventCntr*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="1331">The index of event to set.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="1332">The timestamp data of event.</doc>
            <type name="Tstamp" c:type="const ALSASeqTstamp*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_tstamp_mode"
              c:identifier="alsaseq_event_cntr_set_tstamp_mode"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/seq/event-cntr.c"
             line="343">Set the mode of timestamping for the event pointed by the index.</doc>
        <source-position filename="../src/seq/event-cntr.h" line="63"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="345">A #ALSASeqEventCntr.</doc>
            <type name="EventCntr" c:type="ALSASeqEventCntr*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="346">The index of event to set.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="mode" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-cntr.c"
                 line="347">The mode of timestamping, one of #ALSASeqEventTimestampMode.</doc>
            <type name="EventTimestampMode"
                  c:type="ALSASeqEventTimestampMode"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="EventCntrPrivate" c:type="ALSASeqEventCntrPrivate*"/>
      </field>
    </class>
    <record name="EventCntrClass"
            c:type="ALSASeqEventCntrClass"
            glib:is-gtype-struct-for="EventCntr">
      <source-position filename="../src/seq/event-cntr.h" line="43"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <record name="EventCntrPrivate"
            c:type="ALSASeqEventCntrPrivate"
            disguised="1">
      <source-position filename="../src/seq/event-cntr.h" line="33"/>
    </record>
    <record name="EventDataConnect"
            c:type="ALSASeqEventDataConnect"
            glib:type-name="ALSASeqEventDataConnect"
            glib:get-type="alsaseq_event_data_connect_get_type"
            c:symbol-prefix="event_data_connect">
      <source-position filename="../src/seq/event-data-connect.h" line="11"/>
      <method name="get_dst" c:identifier="alsaseq_event_data_connect_get_dst">
        <doc xml:space="preserve"
             filename="../src/seq/event-data-connect.c"
             line="55">Get the destination of connection event.</doc>
        <source-position filename="../src/seq/event-data-connect.h" line="20"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-data-connect.c"
                 line="57">A #ALSASeqEventDataConnect.</doc>
            <type name="EventDataConnect"
                  c:type="const ALSASeqEventDataConnect*"/>
          </instance-parameter>
          <parameter name="dst"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-data-connect.c"
                 line="58">The destination of connection event.</doc>
            <type name="Addr" c:type="const ALSASeqAddr**"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_src" c:identifier="alsaseq_event_data_connect_get_src">
        <doc xml:space="preserve"
             filename="../src/seq/event-data-connect.c"
             line="29">Get the source of connection event.</doc>
        <source-position filename="../src/seq/event-data-connect.h" line="15"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-data-connect.c"
                 line="31">A #ALSASeqEventDataConnect.</doc>
            <type name="EventDataConnect"
                  c:type="const ALSASeqEventDataConnect*"/>
          </instance-parameter>
          <parameter name="src"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-data-connect.c"
                 line="32">The source of connection event.</doc>
            <type name="Addr" c:type="const ALSASeqAddr**"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_dst" c:identifier="alsaseq_event_data_connect_set_dst">
        <doc xml:space="preserve"
             filename="../src/seq/event-data-connect.c"
             line="68">Set the source to the connection event.</doc>
        <source-position filename="../src/seq/event-data-connect.h" line="22"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-data-connect.c"
                 line="70">A #ALSASeqEventDataConnect.</doc>
            <type name="EventDataConnect" c:type="ALSASeqEventDataConnect*"/>
          </instance-parameter>
          <parameter name="dst" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-data-connect.c"
                 line="71">A #ALSASeqAddr.</doc>
            <type name="Addr" c:type="const ALSASeqAddr*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_src" c:identifier="alsaseq_event_data_connect_set_src">
        <doc xml:space="preserve"
             filename="../src/seq/event-data-connect.c"
             line="42">Set the source to the connection event.</doc>
        <source-position filename="../src/seq/event-data-connect.h" line="17"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-data-connect.c"
                 line="44">A #ALSASeqEventDataConnect.</doc>
            <type name="EventDataConnect" c:type="ALSASeqEventDataConnect*"/>
          </instance-parameter>
          <parameter name="src" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-data-connect.c"
                 line="45">A #ALSASeqAddr.</doc>
            <type name="Addr" c:type="const ALSASeqAddr*"/>
          </parameter>
        </parameters>
      </method>
    </record>
    <record name="EventDataCtl"
            c:type="ALSASeqEventDataCtl"
            glib:type-name="ALSASeqEventDataCtl"
            glib:get-type="alsaseq_event_data_ctl_get_type"
            c:symbol-prefix="event_data_ctl">
      <source-position filename="../src/seq/event-data-ctl.h" line="11"/>
      <method name="get_channel"
              c:identifier="alsaseq_event_data_ctl_get_channel">
        <doc xml:space="preserve"
             filename="../src/seq/event-data-ctl.c"
             line="29">Get the value of channel for the control event.</doc>
        <source-position filename="../src/seq/event-data-ctl.h" line="15"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-data-ctl.c"
                 line="31">A #ALSASeqEventDataCtl.</doc>
            <type name="EventDataCtl" c:type="const ALSASeqEventDataCtl*"/>
          </instance-parameter>
          <parameter name="channel"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/seq/event-data-ctl.c"
                 line="32">The value of channel for the control event.</doc>
            <type name="guint8" c:type="guint8*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_param" c:identifier="alsaseq_event_data_ctl_get_param">
        <doc xml:space="preserve"
             filename="../src/seq/event-data-ctl.c"
             line="55">Get the parameter for the control event.</doc>
        <source-position filename="../src/seq/event-data-ctl.h" line="20"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-data-ctl.c"
                 line="57">A #ALSASeqEventDataCtl.</doc>
            <type name="EventDataCtl" c:type="const ALSASeqEventDataCtl*"/>
          </instance-parameter>
          <parameter name="param"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/seq/event-data-ctl.c"
                 line="58">The parameter for the control event.</doc>
            <type name="guint" c:type="guint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_value" c:identifier="alsaseq_event_data_ctl_get_value">
        <doc xml:space="preserve"
             filename="../src/seq/event-data-ctl.c"
             line="80">Get the value for the control event.</doc>
        <source-position filename="../src/seq/event-data-ctl.h" line="24"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-data-ctl.c"
                 line="82">A #ALSASeqEventDataCtl.</doc>
            <type name="EventDataCtl" c:type="const ALSASeqEventDataCtl*"/>
          </instance-parameter>
          <parameter name="value"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/seq/event-data-ctl.c"
                 line="83">The value for the control event.</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_channel"
              c:identifier="alsaseq_event_data_ctl_set_channel">
        <doc xml:space="preserve"
             filename="../src/seq/event-data-ctl.c"
             line="42">Set the channel for the control event.</doc>
        <source-position filename="../src/seq/event-data-ctl.h" line="17"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-data-ctl.c"
                 line="44">A #ALSASeqEventDataCtl.</doc>
            <type name="EventDataCtl" c:type="ALSASeqEventDataCtl*"/>
          </instance-parameter>
          <parameter name="channel" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-data-ctl.c"
                 line="45">The channel for the control event.</doc>
            <type name="guint8" c:type="guint8"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_param" c:identifier="alsaseq_event_data_ctl_set_param">
        <doc xml:space="preserve"
             filename="../src/seq/event-data-ctl.c"
             line="68">Set the parameter for the control event.</doc>
        <source-position filename="../src/seq/event-data-ctl.h" line="22"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-data-ctl.c"
                 line="70">A #ALSASeqEventDataCtl.</doc>
            <type name="EventDataCtl" c:type="ALSASeqEventDataCtl*"/>
          </instance-parameter>
          <parameter name="param" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-data-ctl.c"
                 line="71">The parameter for the control event.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_value" c:identifier="alsaseq_event_data_ctl_set_value">
        <doc xml:space="preserve"
             filename="../src/seq/event-data-ctl.c"
             line="93">Set the value for the control event.</doc>
        <source-position filename="../src/seq/event-data-ctl.h" line="26"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-data-ctl.c"
                 line="95">A #ALSASeqEventDataCtl.</doc>
            <type name="EventDataCtl" c:type="ALSASeqEventDataCtl*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-data-ctl.c"
                 line="96">The value for the control event.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
    </record>
    <record name="EventDataNote"
            c:type="ALSASeqEventDataNote"
            glib:type-name="ALSASeqEventDataNote"
            glib:get-type="alsaseq_event_data_note_get_type"
            c:symbol-prefix="event_data_note">
      <source-position filename="../src/seq/event-data-note.h" line="11"/>
      <method name="get_channel"
              c:identifier="alsaseq_event_data_note_get_channel">
        <doc xml:space="preserve"
             filename="../src/seq/event-data-note.c"
             line="29">Get the value of channel in the note event.</doc>
        <source-position filename="../src/seq/event-data-note.h" line="15"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-data-note.c"
                 line="31">A #ALSASeqEventDataNote.</doc>
            <type name="EventDataNote" c:type="const ALSASeqEventDataNote*"/>
          </instance-parameter>
          <parameter name="channel"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/seq/event-data-note.c"
                 line="32">The value of channel in the note event.</doc>
            <type name="guint8" c:type="guint8*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_duration"
              c:identifier="alsaseq_event_data_note_get_duration">
        <doc xml:space="preserve"
             filename="../src/seq/event-data-note.c"
             line="132">Get the value of duration in the note event.</doc>
        <source-position filename="../src/seq/event-data-note.h" line="34"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-data-note.c"
                 line="134">A #ALSASeqEventDataNote.</doc>
            <type name="EventDataNote" c:type="const ALSASeqEventDataNote*"/>
          </instance-parameter>
          <parameter name="duration"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/seq/event-data-note.c"
                 line="135">The value of duratino in the note event.</doc>
            <type name="guint8" c:type="guint8*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_note" c:identifier="alsaseq_event_data_note_get_note">
        <doc xml:space="preserve"
             filename="../src/seq/event-data-note.c"
             line="55">Get the value of note in the note event.</doc>
        <source-position filename="../src/seq/event-data-note.h" line="20"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-data-note.c"
                 line="57">A #ALSASeqEventDataNote.</doc>
            <type name="EventDataNote" c:type="const ALSASeqEventDataNote*"/>
          </instance-parameter>
          <parameter name="note"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/seq/event-data-note.c"
                 line="58">The value of note in the note event.</doc>
            <type name="guint8" c:type="guint8*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_off_velocity"
              c:identifier="alsaseq_event_data_note_get_off_velocity">
        <doc xml:space="preserve"
             filename="../src/seq/event-data-note.c"
             line="106">Get the value of off-velocity in the note event.</doc>
        <source-position filename="../src/seq/event-data-note.h" line="29"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-data-note.c"
                 line="108">A #ALSASeqEventDataNote.</doc>
            <type name="EventDataNote" c:type="const ALSASeqEventDataNote*"/>
          </instance-parameter>
          <parameter name="off_velocity"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/seq/event-data-note.c"
                 line="109">The value of off-velocity in the note event.</doc>
            <type name="guint8" c:type="guint8*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_velocity"
              c:identifier="alsaseq_event_data_note_get_velocity">
        <doc xml:space="preserve"
             filename="../src/seq/event-data-note.c"
             line="80">Get the value of velocity in the note event.</doc>
        <source-position filename="../src/seq/event-data-note.h" line="24"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-data-note.c"
                 line="82">A #ALSASeqEventDataNote.</doc>
            <type name="EventDataNote" c:type="const ALSASeqEventDataNote*"/>
          </instance-parameter>
          <parameter name="velocity"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/seq/event-data-note.c"
                 line="83">The value of velocity in the note event.</doc>
            <type name="guint8" c:type="guint8*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_channel"
              c:identifier="alsaseq_event_data_note_set_channel">
        <doc xml:space="preserve"
             filename="../src/seq/event-data-note.c"
             line="42">Set the value of channel for the note event.</doc>
        <source-position filename="../src/seq/event-data-note.h" line="17"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-data-note.c"
                 line="44">A #ALSASeqEventDataNote.</doc>
            <type name="EventDataNote" c:type="ALSASeqEventDataNote*"/>
          </instance-parameter>
          <parameter name="channel" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-data-note.c"
                 line="45">The value of channel for the note event.</doc>
            <type name="guint8" c:type="guint8"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_duration"
              c:identifier="alsaseq_event_data_note_set_duration">
        <doc xml:space="preserve"
             filename="../src/seq/event-data-note.c"
             line="145">Set the value of duration for the note event.</doc>
        <source-position filename="../src/seq/event-data-note.h" line="36"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-data-note.c"
                 line="147">A #ALSASeqEventDataNote.</doc>
            <type name="EventDataNote" c:type="ALSASeqEventDataNote*"/>
          </instance-parameter>
          <parameter name="duration" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-data-note.c"
                 line="148">The value of duration for the note event.</doc>
            <type name="guint8" c:type="guint8"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_note" c:identifier="alsaseq_event_data_note_set_note">
        <doc xml:space="preserve"
             filename="../src/seq/event-data-note.c"
             line="68">Set the value of note for the note event.</doc>
        <source-position filename="../src/seq/event-data-note.h" line="22"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-data-note.c"
                 line="70">A #ALSASeqEventDataNote.</doc>
            <type name="EventDataNote" c:type="ALSASeqEventDataNote*"/>
          </instance-parameter>
          <parameter name="note" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-data-note.c"
                 line="71">The value of note for the note event.</doc>
            <type name="guint8" c:type="guint8"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_off_velocity"
              c:identifier="alsaseq_event_data_note_set_off_velocity">
        <doc xml:space="preserve"
             filename="../src/seq/event-data-note.c"
             line="119">Set the value of note for the off-velocity event.</doc>
        <source-position filename="../src/seq/event-data-note.h" line="31"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-data-note.c"
                 line="121">A #ALSASeqEventDataNote.</doc>
            <type name="EventDataNote" c:type="ALSASeqEventDataNote*"/>
          </instance-parameter>
          <parameter name="off_velocity" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-data-note.c"
                 line="122">The value of note for the off-velocity event.</doc>
            <type name="guint8" c:type="guint8"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_velocity"
              c:identifier="alsaseq_event_data_note_set_velocity">
        <doc xml:space="preserve"
             filename="../src/seq/event-data-note.c"
             line="93">Set the value of note for the velocity event.</doc>
        <source-position filename="../src/seq/event-data-note.h" line="26"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-data-note.c"
                 line="95">A #ALSASeqEventDataNote.</doc>
            <type name="EventDataNote" c:type="ALSASeqEventDataNote*"/>
          </instance-parameter>
          <parameter name="velocity" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-data-note.c"
                 line="96">The value of note for the velocity event.</doc>
            <type name="guint8" c:type="guint8"/>
          </parameter>
        </parameters>
      </method>
    </record>
    <record name="EventDataQueue"
            c:type="ALSASeqEventDataQueue"
            glib:type-name="ALSASeqEventDataQueue"
            glib:get-type="alsaseq_event_data_queue_get_type"
            c:symbol-prefix="event_data_queue">
      <source-position filename="../src/seq/event-data-queue.h" line="11"/>
      <method name="get_byte_param"
              c:identifier="alsaseq_event_data_queue_get_byte_param">
        <doc xml:space="preserve"
             filename="../src/seq/event-data-queue.c"
             line="195">Refer to eight bytes as the parameter of queue event.</doc>
        <source-position filename="../src/seq/event-data-queue.h" line="45"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-data-queue.c"
                 line="197">A #ALSASeqEventDataQueue.</doc>
            <type name="EventDataQueue" c:type="const ALSASeqEventDataQueue*"/>
          </instance-parameter>
          <parameter name="bytes"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-data-queue.c"
                 line="198">The array with eight
        elements for bytes parameter of the queue event.</doc>
            <array zero-terminated="0" c:type="const guint8**" fixed-size="8">
              <type name="guint8" c:type="guint8"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="get_position_param"
              c:identifier="alsaseq_event_data_queue_get_position_param">
        <doc xml:space="preserve"
             filename="../src/seq/event-data-queue.c"
             line="108">Get the position as param of the queue event.</doc>
        <source-position filename="../src/seq/event-data-queue.h" line="30"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-data-queue.c"
                 line="110">A #ALSASeqEventDataQueue.</doc>
            <type name="EventDataQueue" c:type="const ALSASeqEventDataQueue*"/>
          </instance-parameter>
          <parameter name="position"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/seq/event-data-queue.c"
                 line="111">The position as param of the queue event.</doc>
            <type name="guint" c:type="guint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_quadlet_param"
              c:identifier="alsaseq_event_data_queue_get_quadlet_param">
        <doc xml:space="preserve"
             filename="../src/seq/event-data-queue.c"
             line="167">Refer to two quadlets as the parameter of queue event.</doc>
        <source-position filename="../src/seq/event-data-queue.h" line="40"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-data-queue.c"
                 line="169">A #ALSASeqEventDataQueue.</doc>
            <type name="EventDataQueue" c:type="const ALSASeqEventDataQueue*"/>
          </instance-parameter>
          <parameter name="quadlets"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-data-queue.c"
                 line="170">The array with two
           elements for quadlets as the parameter of queue event.</doc>
            <array zero-terminated="0" c:type="const guint32**" fixed-size="2">
              <type name="guint32" c:type="guint32"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="get_queue_id"
              c:identifier="alsaseq_event_data_queue_get_queue_id">
        <doc xml:space="preserve"
             filename="../src/seq/event-data-queue.c"
             line="30">Get the numerical ID of queue for the event.</doc>
        <source-position filename="../src/seq/event-data-queue.h" line="15"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-data-queue.c"
                 line="32">A #ALSASeqEventDataQueue.</doc>
            <type name="EventDataQueue" c:type="const ALSASeqEventDataQueue*"/>
          </instance-parameter>
          <parameter name="queue_id"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/seq/event-data-queue.c"
                 line="33">the numerical ID of queue for the event.</doc>
            <type name="guint8" c:type="guint8*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_skew_param"
              c:identifier="alsaseq_event_data_queue_get_skew_param">
        <doc xml:space="preserve"
             filename="../src/seq/event-data-queue.c"
             line="134">Refer to numerator and denominator of fraction for skew as the parameter of
queue event.</doc>
        <source-position filename="../src/seq/event-data-queue.h" line="35"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-data-queue.c"
                 line="136">A #ALSASeqEventDataQueue.</doc>
            <type name="EventDataQueue" c:type="const ALSASeqEventDataQueue*"/>
          </instance-parameter>
          <parameter name="skew"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-data-queue.c"
                 line="137">The array with two elements
       for numerator and denominator of fraction for skew.</doc>
            <array zero-terminated="0" c:type="const guint**" fixed-size="2">
              <type name="guint" c:type="guint"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="get_tstamp_param"
              c:identifier="alsaseq_event_data_queue_get_tstamp_param">
        <doc xml:space="preserve"
             filename="../src/seq/event-data-queue.c"
             line="82">Get the timestamp as param of the queue event.</doc>
        <source-position filename="../src/seq/event-data-queue.h" line="25"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-data-queue.c"
                 line="84">A #ALSASeqEventDataQueue.</doc>
            <type name="EventDataQueue" c:type="const ALSASeqEventDataQueue*"/>
          </instance-parameter>
          <parameter name="tstamp"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-data-queue.c"
                 line="85">The timestamp as param of the queue event.</doc>
            <type name="Tstamp" c:type="const ALSASeqTstamp**"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_value_param"
              c:identifier="alsaseq_event_data_queue_get_value_param">
        <doc xml:space="preserve"
             filename="../src/seq/event-data-queue.c"
             line="56">Get the value as param of the queue event.</doc>
        <source-position filename="../src/seq/event-data-queue.h" line="20"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-data-queue.c"
                 line="58">A #ALSASeqEventDataQueue.</doc>
            <type name="EventDataQueue" c:type="const ALSASeqEventDataQueue*"/>
          </instance-parameter>
          <parameter name="value"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/seq/event-data-queue.c"
                 line="59">The value as param of the queue event.</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_byte_param"
              c:identifier="alsaseq_event_data_queue_set_byte_param">
        <doc xml:space="preserve"
             filename="../src/seq/event-data-queue.c"
             line="209">Copy eight bytes from the given buffer as the parameter of queue event.</doc>
        <source-position filename="../src/seq/event-data-queue.h" line="47"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-data-queue.c"
                 line="211">A #ALSASeqEventDataQueue.</doc>
            <type name="EventDataQueue" c:type="ALSASeqEventDataQueue*"/>
          </instance-parameter>
          <parameter name="bytes" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-data-queue.c"
                 line="212">The array with eight elements
        for bytes parameter of the queue event.</doc>
            <array zero-terminated="0" c:type="const guint8*" fixed-size="8">
              <type name="guint8" c:type="guint8"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="set_position_param"
              c:identifier="alsaseq_event_data_queue_set_position_param">
        <doc xml:space="preserve"
             filename="../src/seq/event-data-queue.c"
             line="121">Set the position as param of the queue event.</doc>
        <source-position filename="../src/seq/event-data-queue.h" line="32"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-data-queue.c"
                 line="123">A #ALSASeqEventDataQueue.</doc>
            <type name="EventDataQueue" c:type="ALSASeqEventDataQueue*"/>
          </instance-parameter>
          <parameter name="position" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-data-queue.c"
                 line="124">the position as param of the queue event.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_quadlet_param"
              c:identifier="alsaseq_event_data_queue_set_quadlet_param">
        <doc xml:space="preserve"
             filename="../src/seq/event-data-queue.c"
             line="181">Set two quadlets from the given buffer as the parameter of queue event.</doc>
        <source-position filename="../src/seq/event-data-queue.h" line="42"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-data-queue.c"
                 line="183">A #ALSASeqEventDataQueue.</doc>
            <type name="EventDataQueue" c:type="ALSASeqEventDataQueue*"/>
          </instance-parameter>
          <parameter name="quadlets" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-data-queue.c"
                 line="184">The array with two elements
           for quadlets as the parameter of queue event.</doc>
            <array zero-terminated="0" c:type="const guint32*" fixed-size="2">
              <type name="guint32" c:type="guint32"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="set_queue_id"
              c:identifier="alsaseq_event_data_queue_set_queue_id">
        <doc xml:space="preserve"
             filename="../src/seq/event-data-queue.c"
             line="43">Se the numerical ID of queue for the event.</doc>
        <source-position filename="../src/seq/event-data-queue.h" line="17"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-data-queue.c"
                 line="45">A #ALSASeqEventDataQueue.</doc>
            <type name="EventDataQueue" c:type="ALSASeqEventDataQueue*"/>
          </instance-parameter>
          <parameter name="queue_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-data-queue.c"
                 line="46">The numerical ID of queue for the event.</doc>
            <type name="guint8" c:type="guint8"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_skew_param"
              c:identifier="alsaseq_event_data_queue_set_skew_param">
        <doc xml:space="preserve"
             filename="../src/seq/event-data-queue.c"
             line="151">Copy numerator and denominator of fraction for skew from the given buffer as
the parameter of queue event.</doc>
        <source-position filename="../src/seq/event-data-queue.h" line="37"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-data-queue.c"
                 line="153">A #ALSASeqEventDataQueue.</doc>
            <type name="EventDataQueue" c:type="ALSASeqEventDataQueue*"/>
          </instance-parameter>
          <parameter name="skew" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-data-queue.c"
                 line="154">The array with two elements for
       numerator and denominator of fraction for skew.</doc>
            <array zero-terminated="0" c:type="const guint*" fixed-size="2">
              <type name="guint" c:type="guint"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="set_tstamp_param"
              c:identifier="alsaseq_event_data_queue_set_tstamp_param">
        <doc xml:space="preserve"
             filename="../src/seq/event-data-queue.c"
             line="95">Set the timestamp as param of the queue event.</doc>
        <source-position filename="../src/seq/event-data-queue.h" line="27"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-data-queue.c"
                 line="97">A #ALSASeqEventDataQueue.</doc>
            <type name="EventDataQueue" c:type="ALSASeqEventDataQueue*"/>
          </instance-parameter>
          <parameter name="tstamp" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-data-queue.c"
                 line="98">The timestamp as param of the queue event.</doc>
            <type name="Tstamp" c:type="const ALSASeqTstamp*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_value_param"
              c:identifier="alsaseq_event_data_queue_set_value_param">
        <doc xml:space="preserve"
             filename="../src/seq/event-data-queue.c"
             line="69">Set the value as param of the queue event.</doc>
        <source-position filename="../src/seq/event-data-queue.h" line="22"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-data-queue.c"
                 line="71">A #ALSASeqEventDataQueue.</doc>
            <type name="EventDataQueue" c:type="ALSASeqEventDataQueue*"/>
          </instance-parameter>
          <parameter name="value" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-data-queue.c"
                 line="72">The value as param of the queue event.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
    </record>
    <record name="EventDataResult"
            c:type="ALSASeqEventDataResult"
            glib:type-name="ALSASeqEventDataResult"
            glib:get-type="alsaseq_event_data_result_get_type"
            c:symbol-prefix="event_data_result">
      <source-position filename="../src/seq/event-data-result.h" line="11"/>
      <method name="get_event"
              c:identifier="alsaseq_event_data_result_get_event">
        <doc xml:space="preserve"
             filename="../src/seq/event-data-result.c"
             line="29">Get the type of event in which the data results.</doc>
        <source-position filename="../src/seq/event-data-result.h" line="15"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-data-result.c"
                 line="31">A #ALSASeqEventDataResult.</doc>
            <type name="EventDataResult"
                  c:type="const ALSASeqEventDataResult*"/>
          </instance-parameter>
          <parameter name="event_type"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/seq/event-data-result.c"
                 line="32">The type of event in which the data results.</doc>
            <type name="EventType" c:type="ALSASeqEventType*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_result"
              c:identifier="alsaseq_event_data_result_get_result">
        <doc xml:space="preserve"
             filename="../src/seq/event-data-result.c"
             line="55">Get the status of event.</doc>
        <source-position filename="../src/seq/event-data-result.h" line="20"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-data-result.c"
                 line="57">A #ALSASeqEventDataResult.</doc>
            <type name="EventDataResult"
                  c:type="const ALSASeqEventDataResult*"/>
          </instance-parameter>
          <parameter name="result"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/seq/event-data-result.c"
                 line="58">the status of the event.</doc>
            <type name="gint" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_event"
              c:identifier="alsaseq_event_data_result_set_event">
        <doc xml:space="preserve"
             filename="../src/seq/event-data-result.c"
             line="42">Set the type of event in which the data results.</doc>
        <source-position filename="../src/seq/event-data-result.h" line="17"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-data-result.c"
                 line="44">A #ALSASeqEventDataResult.</doc>
            <type name="EventDataResult" c:type="ALSASeqEventDataResult*"/>
          </instance-parameter>
          <parameter name="event_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-data-result.c"
                 line="45">A #ALSASeqEventType.</doc>
            <type name="EventType" c:type="ALSASeqEventType"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_result"
              c:identifier="alsaseq_event_data_result_set_result">
        <doc xml:space="preserve"
             filename="../src/seq/event-data-result.c"
             line="68">Set the status of event.</doc>
        <source-position filename="../src/seq/event-data-result.h" line="22"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-data-result.c"
                 line="70">A #ALSASeqEventDataResult.</doc>
            <type name="EventDataResult" c:type="ALSASeqEventDataResult*"/>
          </instance-parameter>
          <parameter name="result" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/event-data-result.c"
                 line="71">The status of event.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
    </record>
    <enumeration name="EventLengthMode"
                 glib:type-name="ALSASeqEventLengthMode"
                 glib:get-type="alsaseq_event_length_mode_get_type"
                 c:type="ALSASeqEventLengthMode">
      <doc xml:space="preserve"
           filename="../src/seq/alsaseq-enum-types.h"
           line="277">A set of enumeration for the mode of data length.</doc>
      <member name="fixed"
              value="0"
              c:identifier="ALSASEQ_EVENT_LENGTH_MODE_FIXED"
              glib:nick="fixed"
              glib:name="ALSASEQ_EVENT_LENGTH_MODE_FIXED">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="279">The data is fixed length.</doc>
      </member>
      <member name="variable"
              value="4"
              c:identifier="ALSASEQ_EVENT_LENGTH_MODE_VARIABLE"
              glib:nick="variable"
              glib:name="ALSASEQ_EVENT_LENGTH_MODE_VARIABLE">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="280">The data is variable length.</doc>
      </member>
      <member name="pointer"
              value="8"
              c:identifier="ALSASEQ_EVENT_LENGTH_MODE_POINTER"
              glib:nick="pointer"
              glib:name="ALSASEQ_EVENT_LENGTH_MODE_POINTER">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="281">The data is a pointer and its length in userspace.</doc>
      </member>
    </enumeration>
    <enumeration name="EventPriorityMode"
                 glib:type-name="ALSASeqEventPriorityMode"
                 glib:get-type="alsaseq_event_priority_mode_get_type"
                 c:type="ALSASeqEventPriorityMode">
      <doc xml:space="preserve"
           filename="../src/seq/alsaseq-enum-types.h"
           line="291">A set of enumerations for the mode of priority.</doc>
      <member name="normal"
              value="0"
              c:identifier="ALSASEQ_EVENT_PRIORITY_MODE_NORMAL"
              glib:nick="normal"
              glib:name="ALSASEQ_EVENT_PRIORITY_MODE_NORMAL">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="293">For normal priority.</doc>
      </member>
      <member name="high"
              value="16"
              c:identifier="ALSASEQ_EVENT_PRIORITY_MODE_HIGH"
              glib:nick="high"
              glib:name="ALSASEQ_EVENT_PRIORITY_MODE_HIGH">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="294">For high priority.</doc>
      </member>
    </enumeration>
    <enumeration name="EventTimeMode"
                 glib:type-name="ALSASeqEventTimeMode"
                 glib:get-type="alsaseq_event_time_mode_get_type"
                 c:type="ALSASeqEventTimeMode">
      <doc xml:space="preserve"
           filename="../src/seq/alsaseq-enum-types.h"
           line="265">A set of enumerations for the mode of time.</doc>
      <member name="abs"
              value="0"
              c:identifier="ALSASEQ_EVENT_TIME_MODE_ABS"
              glib:nick="abs"
              glib:name="ALSASEQ_EVENT_TIME_MODE_ABS">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="267">The time is absolute.</doc>
      </member>
      <member name="rel"
              value="2"
              c:identifier="ALSASEQ_EVENT_TIME_MODE_REL"
              glib:nick="rel"
              glib:name="ALSASEQ_EVENT_TIME_MODE_REL">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="268">The time is relative.</doc>
      </member>
    </enumeration>
    <enumeration name="EventTimestampMode"
                 glib:type-name="ALSASeqEventTimestampMode"
                 glib:get-type="alsaseq_event_timestamp_mode_get_type"
                 c:type="ALSASeqEventTimestampMode">
      <doc xml:space="preserve"
           filename="../src/seq/alsaseq-enum-types.h"
           line="253">A set of enumeration for the mode of timestamp.</doc>
      <member name="tick"
              value="0"
              c:identifier="ALSASEQ_EVENT_TIMESTAMP_MODE_TICK"
              glib:nick="tick"
              glib:name="ALSASEQ_EVENT_TIMESTAMP_MODE_TICK">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="255">The timestamp includes tick count.</doc>
      </member>
      <member name="real"
              value="1"
              c:identifier="ALSASEQ_EVENT_TIMESTAMP_MODE_REAL"
              glib:nick="real"
              glib:name="ALSASEQ_EVENT_TIMESTAMP_MODE_REAL">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="256">The timestamp includes real time.</doc>
      </member>
    </enumeration>
    <enumeration name="EventType"
                 glib:type-name="ALSASeqEventType"
                 glib:get-type="alsaseq_event_type_get_type"
                 c:type="ALSASeqEventType">
      <doc xml:space="preserve"
           filename="../src/seq/alsaseq-enum-types.h"
           line="129">The type of event.</doc>
      <member name="system"
              value="0"
              c:identifier="ALSASEQ_EVENT_TYPE_SYSTEM"
              glib:nick="system"
              glib:name="ALSASEQ_EVENT_TYPE_SYSTEM">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="131">For system status.</doc>
      </member>
      <member name="result"
              value="1"
              c:identifier="ALSASEQ_EVENT_TYPE_RESULT"
              glib:nick="result"
              glib:name="ALSASEQ_EVENT_TYPE_RESULT">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="132">For result status.</doc>
      </member>
      <member name="note"
              value="5"
              c:identifier="ALSASEQ_EVENT_TYPE_NOTE"
              glib:nick="note"
              glib:name="ALSASEQ_EVENT_TYPE_NOTE">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="133">For note message with duration.</doc>
      </member>
      <member name="noteon"
              value="6"
              c:identifier="ALSASEQ_EVENT_TYPE_NOTEON"
              glib:nick="noteon"
              glib:name="ALSASEQ_EVENT_TYPE_NOTEON">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="134">For note on message.</doc>
      </member>
      <member name="noteoff"
              value="7"
              c:identifier="ALSASEQ_EVENT_TYPE_NOTEOFF"
              glib:nick="noteoff"
              glib:name="ALSASEQ_EVENT_TYPE_NOTEOFF">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="135">For note off message.</doc>
      </member>
      <member name="keypress"
              value="8"
              c:identifier="ALSASEQ_EVENT_TYPE_KEYPRESS"
              glib:nick="keypress"
              glib:name="ALSASEQ_EVENT_TYPE_KEYPRESS">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="136">For keypress message.</doc>
      </member>
      <member name="controller"
              value="10"
              c:identifier="ALSASEQ_EVENT_TYPE_CONTROLLER"
              glib:nick="controller"
              glib:name="ALSASEQ_EVENT_TYPE_CONTROLLER">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="137">For control change message.</doc>
      </member>
      <member name="pgmchange"
              value="11"
              c:identifier="ALSASEQ_EVENT_TYPE_PGMCHANGE"
              glib:nick="pgmchange"
              glib:name="ALSASEQ_EVENT_TYPE_PGMCHANGE">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="138">For program change message.</doc>
      </member>
      <member name="chanpress"
              value="12"
              c:identifier="ALSASEQ_EVENT_TYPE_CHANPRESS"
              glib:nick="chanpress"
              glib:name="ALSASEQ_EVENT_TYPE_CHANPRESS">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="139">For channel pressure message.</doc>
      </member>
      <member name="pitchbend"
              value="13"
              c:identifier="ALSASEQ_EVENT_TYPE_PITCHBEND"
              glib:nick="pitchbend"
              glib:name="ALSASEQ_EVENT_TYPE_PITCHBEND">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="140">For pitchbend message.</doc>
      </member>
      <member name="control14"
              value="14"
              c:identifier="ALSASEQ_EVENT_TYPE_CONTROL14"
              glib:nick="control14"
              glib:name="ALSASEQ_EVENT_TYPE_CONTROL14">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="141">For control message with 14 bit value.</doc>
      </member>
      <member name="nonregparam"
              value="15"
              c:identifier="ALSASEQ_EVENT_TYPE_NONREGPARAM"
              glib:nick="nonregparam"
              glib:name="ALSASEQ_EVENT_TYPE_NONREGPARAM">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="142">For 14 bit NRPN address and 14 bit unsigned value.</doc>
      </member>
      <member name="regparam"
              value="16"
              c:identifier="ALSASEQ_EVENT_TYPE_REGPARAM"
              glib:nick="regparam"
              glib:name="ALSASEQ_EVENT_TYPE_REGPARAM">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="143">For 14 bit RPN address and 14 bit unsigned value.</doc>
      </member>
      <member name="songpos"
              value="20"
              c:identifier="ALSASEQ_EVENT_TYPE_SONGPOS"
              glib:nick="songpos"
              glib:name="ALSASEQ_EVENT_TYPE_SONGPOS">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="144">For song position message with LSB and MSB values.</doc>
      </member>
      <member name="songsel"
              value="21"
              c:identifier="ALSASEQ_EVENT_TYPE_SONGSEL"
              glib:nick="songsel"
              glib:name="ALSASEQ_EVENT_TYPE_SONGSEL">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="145">For song select message with numerical ID of song.</doc>
      </member>
      <member name="qframe"
              value="22"
              c:identifier="ALSASEQ_EVENT_TYPE_QFRAME"
              glib:nick="qframe"
              glib:name="ALSASEQ_EVENT_TYPE_QFRAME">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="146">For time code quarter frame message of MIDI.</doc>
      </member>
      <member name="timesign"
              value="23"
              c:identifier="ALSASEQ_EVENT_TYPE_TIMESIGN"
              glib:nick="timesign"
              glib:name="ALSASEQ_EVENT_TYPE_TIMESIGN">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="147">For time signature message of Standard MIDi File.</doc>
      </member>
      <member name="keysign"
              value="24"
              c:identifier="ALSASEQ_EVENT_TYPE_KEYSIGN"
              glib:nick="keysign"
              glib:name="ALSASEQ_EVENT_TYPE_KEYSIGN">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="148">For key signature message of Standard MIDI File.</doc>
      </member>
      <member name="start"
              value="30"
              c:identifier="ALSASEQ_EVENT_TYPE_START"
              glib:nick="start"
              glib:name="ALSASEQ_EVENT_TYPE_START">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="149">For Real Time Start message of MIDI.</doc>
      </member>
      <member name="continue"
              value="31"
              c:identifier="ALSASEQ_EVENT_TYPE_CONTINUE"
              glib:nick="continue"
              glib:name="ALSASEQ_EVENT_TYPE_CONTINUE">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="150">For Real Time Continue message of MIDI.</doc>
      </member>
      <member name="stop"
              value="32"
              c:identifier="ALSASEQ_EVENT_TYPE_STOP"
              glib:nick="stop"
              glib:name="ALSASEQ_EVENT_TYPE_STOP">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="151">For Real Time Stop message of MIDI.</doc>
      </member>
      <member name="setpos_tick"
              value="33"
              c:identifier="ALSASEQ_EVENT_TYPE_SETPOS_TICK"
              glib:nick="setpos-tick"
              glib:name="ALSASEQ_EVENT_TYPE_SETPOS_TICK">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="152">For position setting of tick queue.</doc>
      </member>
      <member name="setpos_time"
              value="34"
              c:identifier="ALSASEQ_EVENT_TYPE_SETPOS_TIME"
              glib:nick="setpos-time"
              glib:name="ALSASEQ_EVENT_TYPE_SETPOS_TIME">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="153">For position setting of realtime queue.</doc>
      </member>
      <member name="tempo"
              value="35"
              c:identifier="ALSASEQ_EVENT_TYPE_TEMPO"
              glib:nick="tempo"
              glib:name="ALSASEQ_EVENT_TYPE_TEMPO">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="154">For tempo message of Standard MIDI File.</doc>
      </member>
      <member name="clock"
              value="36"
              c:identifier="ALSASEQ_EVENT_TYPE_CLOCK"
              glib:nick="clock"
              glib:name="ALSASEQ_EVENT_TYPE_CLOCK">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="155">For Real Time Clock message of MIDI.</doc>
      </member>
      <member name="tick"
              value="37"
              c:identifier="ALSASEQ_EVENT_TYPE_TICK"
              glib:nick="tick"
              glib:name="ALSASEQ_EVENT_TYPE_TICK">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="156">For Real Time Tick message of MIDI.</doc>
      </member>
      <member name="queue_skew"
              value="38"
              c:identifier="ALSASEQ_EVENT_TYPE_QUEUE_SKEW"
              glib:nick="queue-skew"
              glib:name="ALSASEQ_EVENT_TYPE_QUEUE_SKEW">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="157">For skew of tempo for queue.</doc>
      </member>
      <member name="tune_request"
              value="40"
              c:identifier="ALSASEQ_EVENT_TYPE_TUNE_REQUEST"
              glib:nick="tune-request"
              glib:name="ALSASEQ_EVENT_TYPE_TUNE_REQUEST">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="158">For requests to tune.</doc>
      </member>
      <member name="reset"
              value="41"
              c:identifier="ALSASEQ_EVENT_TYPE_RESET"
              glib:nick="reset"
              glib:name="ALSASEQ_EVENT_TYPE_RESET">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="159">For reset to power-on state.</doc>
      </member>
      <member name="sensing"
              value="42"
              c:identifier="ALSASEQ_EVENT_TYPE_SENSING"
              glib:nick="sensing"
              glib:name="ALSASEQ_EVENT_TYPE_SENSING">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="160">For active sensing message.</doc>
      </member>
      <member name="echo"
              value="50"
              c:identifier="ALSASEQ_EVENT_TYPE_ECHO"
              glib:nick="echo"
              glib:name="ALSASEQ_EVENT_TYPE_ECHO">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="161">For echo message.</doc>
      </member>
      <member name="oss"
              value="51"
              c:identifier="ALSASEQ_EVENT_TYPE_OSS"
              glib:nick="oss"
              glib:name="ALSASEQ_EVENT_TYPE_OSS">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="162">For raw message from Open Sound System.</doc>
      </member>
      <member name="client_start"
              value="60"
              c:identifier="ALSASEQ_EVENT_TYPE_CLIENT_START"
              glib:nick="client-start"
              glib:name="ALSASEQ_EVENT_TYPE_CLIENT_START">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="163">For appear of the port.</doc>
      </member>
      <member name="client_exit"
              value="61"
              c:identifier="ALSASEQ_EVENT_TYPE_CLIENT_EXIT"
              glib:nick="client-exit"
              glib:name="ALSASEQ_EVENT_TYPE_CLIENT_EXIT">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="164">For disappear of the client.</doc>
      </member>
      <member name="client_change"
              value="62"
              c:identifier="ALSASEQ_EVENT_TYPE_CLIENT_CHANGE"
              glib:nick="client-change"
              glib:name="ALSASEQ_EVENT_TYPE_CLIENT_CHANGE">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="165">For change of information or status of the client.</doc>
      </member>
      <member name="port_start"
              value="63"
              c:identifier="ALSASEQ_EVENT_TYPE_PORT_START"
              glib:nick="port-start"
              glib:name="ALSASEQ_EVENT_TYPE_PORT_START">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="166">For addition of the port.</doc>
      </member>
      <member name="port_exit"
              value="64"
              c:identifier="ALSASEQ_EVENT_TYPE_PORT_EXIT"
              glib:nick="port-exit"
              glib:name="ALSASEQ_EVENT_TYPE_PORT_EXIT">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="167">For removal of the port.</doc>
      </member>
      <member name="port_change"
              value="65"
              c:identifier="ALSASEQ_EVENT_TYPE_PORT_CHANGE"
              glib:nick="port-change"
              glib:name="ALSASEQ_EVENT_TYPE_PORT_CHANGE">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="168">For change of information or status of the port.</doc>
      </member>
      <member name="port_subscribed"
              value="66"
              c:identifier="ALSASEQ_EVENT_TYPE_PORT_SUBSCRIBED"
              glib:nick="port-subscribed"
              glib:name="ALSASEQ_EVENT_TYPE_PORT_SUBSCRIBED">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="169">For establishment of subscription about the port.</doc>
      </member>
      <member name="port_unsubscribed"
              value="67"
              c:identifier="ALSASEQ_EVENT_TYPE_PORT_UNSUBSCRIBED"
              glib:nick="port-unsubscribed"
              glib:name="ALSASEQ_EVENT_TYPE_PORT_UNSUBSCRIBED">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="170">For break of subscription about the port.</doc>
      </member>
      <member name="usr0"
              value="90"
              c:identifier="ALSASEQ_EVENT_TYPE_USR0"
              glib:nick="usr0"
              glib:name="ALSASEQ_EVENT_TYPE_USR0">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="171">For user-defined message 0.</doc>
      </member>
      <member name="usr1"
              value="91"
              c:identifier="ALSASEQ_EVENT_TYPE_USR1"
              glib:nick="usr1"
              glib:name="ALSASEQ_EVENT_TYPE_USR1">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="172">For user-defined message 1.</doc>
      </member>
      <member name="usr2"
              value="92"
              c:identifier="ALSASEQ_EVENT_TYPE_USR2"
              glib:nick="usr2"
              glib:name="ALSASEQ_EVENT_TYPE_USR2">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="173">For user-defined message 2.</doc>
      </member>
      <member name="usr3"
              value="93"
              c:identifier="ALSASEQ_EVENT_TYPE_USR3"
              glib:nick="usr3"
              glib:name="ALSASEQ_EVENT_TYPE_USR3">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="174">For user-defined message 3.</doc>
      </member>
      <member name="usr4"
              value="94"
              c:identifier="ALSASEQ_EVENT_TYPE_USR4"
              glib:nick="usr4"
              glib:name="ALSASEQ_EVENT_TYPE_USR4">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="175">For user-defined message 4.</doc>
      </member>
      <member name="usr5"
              value="95"
              c:identifier="ALSASEQ_EVENT_TYPE_USR5"
              glib:nick="usr5"
              glib:name="ALSASEQ_EVENT_TYPE_USR5">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="176">For user-defined message 5.</doc>
      </member>
      <member name="usr6"
              value="96"
              c:identifier="ALSASEQ_EVENT_TYPE_USR6"
              glib:nick="usr6"
              glib:name="ALSASEQ_EVENT_TYPE_USR6">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="177">For user-defined message 6.</doc>
      </member>
      <member name="usr7"
              value="97"
              c:identifier="ALSASEQ_EVENT_TYPE_USR7"
              glib:nick="usr7"
              glib:name="ALSASEQ_EVENT_TYPE_USR7">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="178">For user-defined message 7.</doc>
      </member>
      <member name="usr8"
              value="98"
              c:identifier="ALSASEQ_EVENT_TYPE_USR8"
              glib:nick="usr8"
              glib:name="ALSASEQ_EVENT_TYPE_USR8">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="179">For user-defined message 8.</doc>
      </member>
      <member name="usr9"
              value="99"
              c:identifier="ALSASEQ_EVENT_TYPE_USR9"
              glib:nick="usr9"
              glib:name="ALSASEQ_EVENT_TYPE_USR9">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="180">For user-defined message 9.</doc>
      </member>
      <member name="sysex"
              value="130"
              c:identifier="ALSASEQ_EVENT_TYPE_SYSEX"
              glib:nick="sysex"
              glib:name="ALSASEQ_EVENT_TYPE_SYSEX">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="181">For system exclisive message with variable length data.</doc>
      </member>
      <member name="bounce"
              value="131"
              c:identifier="ALSASEQ_EVENT_TYPE_BOUNCE"
              glib:nick="bounce"
              glib:name="ALSASEQ_EVENT_TYPE_BOUNCE">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="182">For error message.</doc>
      </member>
      <member name="usr_var0"
              value="135"
              c:identifier="ALSASEQ_EVENT_TYPE_USR_VAR0"
              glib:nick="usr-var0"
              glib:name="ALSASEQ_EVENT_TYPE_USR_VAR0">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="183">For user-defined message 0 with variable length data.</doc>
      </member>
      <member name="usr_var1"
              value="136"
              c:identifier="ALSASEQ_EVENT_TYPE_USR_VAR1"
              glib:nick="usr-var1"
              glib:name="ALSASEQ_EVENT_TYPE_USR_VAR1">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="184">For user-defined message 1 with variable length data.</doc>
      </member>
      <member name="usr_var2"
              value="137"
              c:identifier="ALSASEQ_EVENT_TYPE_USR_VAR2"
              glib:nick="usr-var2"
              glib:name="ALSASEQ_EVENT_TYPE_USR_VAR2">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="185">For user-defined message 2 with variable length data.</doc>
      </member>
      <member name="usr_var3"
              value="138"
              c:identifier="ALSASEQ_EVENT_TYPE_USR_VAR3"
              glib:nick="usr-var3"
              glib:name="ALSASEQ_EVENT_TYPE_USR_VAR3">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="186">For user-defined message 3 with variable length data.</doc>
      </member>
      <member name="usr_var4"
              value="139"
              c:identifier="ALSASEQ_EVENT_TYPE_USR_VAR4"
              glib:nick="usr-var4"
              glib:name="ALSASEQ_EVENT_TYPE_USR_VAR4">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="187">For user-defined message 4 with variable length data.</doc>
      </member>
      <member name="none"
              value="255"
              c:identifier="ALSASEQ_EVENT_TYPE_NONE"
              glib:nick="none"
              glib:name="ALSASEQ_EVENT_TYPE_NONE">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="188">For invalid or unknown message.</doc>
      </member>
    </enumeration>
    <bitfield name="FilterAttrFlag"
              glib:type-name="ALSASeqFilterAttrFlag"
              glib:get-type="alsaseq_filter_attr_flag_get_type"
              c:type="ALSASeqFilterAttrFlag">
      <doc xml:space="preserve"
           filename="../src/seq/alsaseq-enum-types.h"
           line="47">A set of flags for attributes of event filter.</doc>
      <member name="broadcast"
              value="1"
              c:identifier="ALSASEQ_FILTER_ATTR_FLAG_BROADCAST"
              glib:nick="broadcast"
              glib:name="ALSASEQ_FILTER_ATTR_FLAG_BROADCAST">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="49">The client is going to handle broadcast events.</doc>
      </member>
      <member name="multicast"
              value="2"
              c:identifier="ALSASEQ_FILTER_ATTR_FLAG_MULTICAST"
              glib:nick="multicast"
              glib:name="ALSASEQ_FILTER_ATTR_FLAG_MULTICAST">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="50">The client is going to handle multicast events.</doc>
      </member>
      <member name="bounce"
              value="4"
              c:identifier="ALSASEQ_FILTER_ATTR_FLAG_BOUNCE"
              glib:nick="bounce"
              glib:name="ALSASEQ_FILTER_ATTR_FLAG_BOUNCE">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="51">The client is going to handle bounce events.</doc>
      </member>
    </bitfield>
    <function-macro name="IS_CLIENT_INFO"
                    c:identifier="ALSASEQ_IS_CLIENT_INFO"
                    introspectable="0">
      <source-position filename="../src/seq/client-info.h" line="15"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CLIENT_INFO_CLASS"
                    c:identifier="ALSASEQ_IS_CLIENT_INFO_CLASS"
                    introspectable="0">
      <source-position filename="../src/seq/client-info.h" line="23"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CLIENT_POOL"
                    c:identifier="ALSASEQ_IS_CLIENT_POOL"
                    introspectable="0">
      <source-position filename="../src/seq/client-pool.h" line="15"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_CLIENT_POOL_CLASS"
                    c:identifier="ALSASEQ_IS_CLIENT_POOL_CLASS"
                    introspectable="0">
      <source-position filename="../src/seq/client-pool.h" line="23"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_EVENT_CNTR"
                    c:identifier="ALSASEQ_IS_EVENT_CNTR"
                    introspectable="0">
      <source-position filename="../src/seq/event-cntr.h" line="15"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_EVENT_CNTR_CLASS"
                    c:identifier="ALSASEQ_IS_EVENT_CNTR_CLASS"
                    introspectable="0">
      <source-position filename="../src/seq/event-cntr.h" line="23"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_PORT_INFO"
                    c:identifier="ALSASEQ_IS_PORT_INFO"
                    introspectable="0">
      <source-position filename="../src/seq/port-info.h" line="15"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_PORT_INFO_CLASS"
                    c:identifier="ALSASEQ_IS_PORT_INFO_CLASS"
                    introspectable="0">
      <source-position filename="../src/seq/port-info.h" line="23"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_QUEUE_INFO"
                    c:identifier="ALSASEQ_IS_QUEUE_INFO"
                    introspectable="0">
      <source-position filename="../src/seq/queue-info.h" line="15"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_QUEUE_INFO_CLASS"
                    c:identifier="ALSASEQ_IS_QUEUE_INFO_CLASS"
                    introspectable="0">
      <source-position filename="../src/seq/queue-info.h" line="23"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_QUEUE_STATUS"
                    c:identifier="ALSASEQ_IS_QUEUE_STATUS"
                    introspectable="0">
      <source-position filename="../src/seq/queue-status.h" line="15"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_QUEUE_STATUS_CLASS"
                    c:identifier="ALSASEQ_IS_QUEUE_STATUS_CLASS"
                    introspectable="0">
      <source-position filename="../src/seq/queue-status.h" line="23"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_QUEUE_TEMPO"
                    c:identifier="ALSASEQ_IS_QUEUE_TEMPO"
                    introspectable="0">
      <source-position filename="../src/seq/queue-tempo.h" line="15"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_QUEUE_TEMPO_CLASS"
                    c:identifier="ALSASEQ_IS_QUEUE_TEMPO_CLASS"
                    introspectable="0">
      <source-position filename="../src/seq/queue-tempo.h" line="23"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_QUEUE_TIMER"
                    c:identifier="ALSASEQ_IS_QUEUE_TIMER"
                    introspectable="0">
      <source-position filename="../src/seq/queue-timer.h" line="15"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_QUEUE_TIMER_CLASS"
                    c:identifier="ALSASEQ_IS_QUEUE_TIMER_CLASS"
                    introspectable="0">
      <source-position filename="../src/seq/queue-timer.h" line="23"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_SUBSCRIBE_DATA"
                    c:identifier="ALSASEQ_IS_SUBSCRIBE_DATA"
                    introspectable="0">
      <source-position filename="../src/seq/subscribe-data.h" line="15"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_SUBSCRIBE_DATA_CLASS"
                    c:identifier="ALSASEQ_IS_SUBSCRIBE_DATA_CLASS"
                    introspectable="0">
      <source-position filename="../src/seq/subscribe-data.h" line="23"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_SYSTEM_INFO"
                    c:identifier="ALSASEQ_IS_SYSTEM_INFO"
                    introspectable="0">
      <source-position filename="../src/seq/system-info.h" line="15"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_SYSTEM_INFO_CLASS"
                    c:identifier="ALSASEQ_IS_SYSTEM_INFO_CLASS"
                    introspectable="0">
      <source-position filename="../src/seq/system-info.h" line="23"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_USER_CLIENT"
                    c:identifier="ALSASEQ_IS_USER_CLIENT"
                    introspectable="0">
      <source-position filename="../src/seq/user-client.h" line="15"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_USER_CLIENT_CLASS"
                    c:identifier="ALSASEQ_IS_USER_CLIENT_CLASS"
                    introspectable="0">
      <source-position filename="../src/seq/user-client.h" line="23"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PORT_INFO"
                    c:identifier="ALSASEQ_PORT_INFO"
                    introspectable="0">
      <source-position filename="../src/seq/port-info.h" line="11"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PORT_INFO_CLASS"
                    c:identifier="ALSASEQ_PORT_INFO_CLASS"
                    introspectable="0">
      <source-position filename="../src/seq/port-info.h" line="19"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="PORT_INFO_GET_CLASS"
                    c:identifier="ALSASEQ_PORT_INFO_GET_CLASS"
                    introspectable="0">
      <source-position filename="../src/seq/port-info.h" line="26"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <bitfield name="PortAttrFlag"
              glib:type-name="ALSASeqPortAttrFlag"
              glib:get-type="alsaseq_port_attr_flag_get_type"
              c:type="ALSASeqPortAttrFlag">
      <doc xml:space="preserve"
           filename="../src/seq/alsaseq-enum-types.h"
           line="96">A set of flags for the attributes of port.</doc>
      <member name="specific"
              value="1"
              c:identifier="ALSASEQ_PORT_ATTR_FLAG_SPECIFIC"
              glib:nick="specific"
              glib:name="ALSASEQ_PORT_ATTR_FLAG_SPECIFIC">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="98">For hardware specific messages.</doc>
      </member>
      <member name="midi_generic"
              value="2"
              c:identifier="ALSASEQ_PORT_ATTR_FLAG_MIDI_GENERIC"
              glib:nick="midi-generic"
              glib:name="ALSASEQ_PORT_ATTR_FLAG_MIDI_GENERIC">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="99">For generic MIDI messages.</doc>
      </member>
      <member name="midi_gm"
              value="4"
              c:identifier="ALSASEQ_PORT_ATTR_FLAG_MIDI_GM"
              glib:nick="midi-gm"
              glib:name="ALSASEQ_PORT_ATTR_FLAG_MIDI_GM">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="100">For General MIDI comatible messages.</doc>
      </member>
      <member name="midi_gs"
              value="8"
              c:identifier="ALSASEQ_PORT_ATTR_FLAG_MIDI_GS"
              glib:nick="midi-gs"
              glib:name="ALSASEQ_PORT_ATTR_FLAG_MIDI_GS">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="101">For GS compatible messages.</doc>
      </member>
      <member name="midi_xg"
              value="16"
              c:identifier="ALSASEQ_PORT_ATTR_FLAG_MIDI_XG"
              glib:nick="midi-xg"
              glib:name="ALSASEQ_PORT_ATTR_FLAG_MIDI_XG">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="102">For XG compatible messages.</doc>
      </member>
      <member name="midi_mt32"
              value="32"
              c:identifier="ALSASEQ_PORT_ATTR_FLAG_MIDI_MT32"
              glib:nick="midi-mt32"
              glib:name="ALSASEQ_PORT_ATTR_FLAG_MIDI_MT32">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="103">For MT-32 compatible messages.</doc>
      </member>
      <member name="midi_gm2"
              value="64"
              c:identifier="ALSASEQ_PORT_ATTR_FLAG_MIDI_GM2"
              glib:nick="midi-gm2"
              glib:name="ALSASEQ_PORT_ATTR_FLAG_MIDI_GM2">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="104">For General MIDI 2 compatible messages.</doc>
      </member>
      <member name="hardware"
              value="65536"
              c:identifier="ALSASEQ_PORT_ATTR_FLAG_HARDWARE"
              glib:nick="hardware"
              glib:name="ALSASEQ_PORT_ATTR_FLAG_HARDWARE">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="105">The port on any hardware.</doc>
      </member>
      <member name="software"
              value="131072"
              c:identifier="ALSASEQ_PORT_ATTR_FLAG_SOFTWARE"
              glib:nick="software"
              glib:name="ALSASEQ_PORT_ATTR_FLAG_SOFTWARE">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="106">The port on any software.</doc>
      </member>
      <member name="synthesizer"
              value="262144"
              c:identifier="ALSASEQ_PORT_ATTR_FLAG_SYNTHESIZER"
              glib:nick="synthesizer"
              glib:name="ALSASEQ_PORT_ATTR_FLAG_SYNTHESIZER">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="107">The port to generate sound.</doc>
      </member>
      <member name="port"
              value="524288"
              c:identifier="ALSASEQ_PORT_ATTR_FLAG_PORT"
              glib:nick="port"
              glib:name="ALSASEQ_PORT_ATTR_FLAG_PORT">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="108">The port connects to the other devices.</doc>
      </member>
      <member name="application"
              value="1048576"
              c:identifier="ALSASEQ_PORT_ATTR_FLAG_APPLICATION"
              glib:nick="application"
              glib:name="ALSASEQ_PORT_ATTR_FLAG_APPLICATION">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="109">The port on any application such as sequencer and editor.</doc>
      </member>
    </bitfield>
    <bitfield name="PortCapFlag"
              glib:type-name="ALSASeqPortCapFlag"
              glib:get-type="alsaseq_port_cap_flag_get_type"
              c:type="ALSASeqPortCapFlag">
      <doc xml:space="preserve"
           filename="../src/seq/alsaseq-enum-types.h"
           line="75">A set of flags for the capabilities of port.</doc>
      <member name="read"
              value="1"
              c:identifier="ALSASEQ_PORT_CAP_FLAG_READ"
              glib:nick="read"
              glib:name="ALSASEQ_PORT_CAP_FLAG_READ">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="77">Any message can be read from the port.</doc>
      </member>
      <member name="write"
              value="2"
              c:identifier="ALSASEQ_PORT_CAP_FLAG_WRITE"
              glib:nick="write"
              glib:name="ALSASEQ_PORT_CAP_FLAG_WRITE">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="78">Any message can be written to the port.</doc>
      </member>
      <member name="duplex"
              value="16"
              c:identifier="ALSASEQ_PORT_CAP_FLAG_DUPLEX"
              glib:nick="duplex"
              glib:name="ALSASEQ_PORT_CAP_FLAG_DUPLEX">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="79">Any messages can be read from/written to the port simultaneously.</doc>
      </member>
      <member name="subs_read"
              value="32"
              c:identifier="ALSASEQ_PORT_CAP_FLAG_SUBS_READ"
              glib:nick="subs-read"
              glib:name="ALSASEQ_PORT_CAP_FLAG_SUBS_READ">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="80">The data of subscription can be read from the port.</doc>
      </member>
      <member name="subs_write"
              value="64"
              c:identifier="ALSASEQ_PORT_CAP_FLAG_SUBS_WRITE"
              glib:nick="subs-write"
              glib:name="ALSASEQ_PORT_CAP_FLAG_SUBS_WRITE">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="81">The data of subscription can be written to the port.</doc>
      </member>
      <member name="no_export"
              value="128"
              c:identifier="ALSASEQ_PORT_CAP_FLAG_NO_EXPORT"
              glib:nick="no-export"
              glib:name="ALSASEQ_PORT_CAP_FLAG_NO_EXPORT">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="82">Only owners of the port can maintain subscription.</doc>
      </member>
    </bitfield>
    <class name="PortInfo"
           c:symbol-prefix="port_info"
           c:type="ALSASeqPortInfo"
           parent="GObject.Object"
           glib:type-name="ALSASeqPortInfo"
           glib:get-type="alsaseq_port_info_get_type"
           glib:type-struct="PortInfoClass">
      <source-position filename="../src/seq/port-info.h" line="43"/>
      <constructor name="new" c:identifier="alsaseq_port_info_new">
        <doc xml:space="preserve"
             filename="../src/seq/port-info.c"
             line="253">Allocate and return an instance of ALSASeqPortInfo class.</doc>
        <source-position filename="../src/seq/port-info.h" line="47"/>
        <return-value transfer-ownership="full">
          <type name="PortInfo" c:type="ALSASeqPortInfo*"/>
        </return-value>
      </constructor>
      <property name="addr"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="Addr"/>
      </property>
      <property name="attrs" writable="1" transfer-ownership="none">
        <type name="PortAttrFlag"/>
      </property>
      <property name="caps" writable="1" transfer-ownership="none">
        <type name="PortCapFlag"/>
      </property>
      <property name="midi-channels" writable="1" transfer-ownership="none">
        <type name="gint" c:type="gint"/>
      </property>
      <property name="midi-voices" writable="1" transfer-ownership="none">
        <type name="gint" c:type="gint"/>
      </property>
      <property name="name" writable="1" transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="queue-id" writable="1" transfer-ownership="none">
        <type name="guint8" c:type="guint8"/>
      </property>
      <property name="read-users" transfer-ownership="none">
        <type name="gint" c:type="gint"/>
      </property>
      <property name="synth-voices" writable="1" transfer-ownership="none">
        <type name="gint" c:type="gint"/>
      </property>
      <property name="timestamp-mode" writable="1" transfer-ownership="none">
        <type name="EventTimestampMode"/>
      </property>
      <property name="timestamp-overwrite"
                writable="1"
                transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="write-users" transfer-ownership="none">
        <type name="gint" c:type="gint"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="PortInfoPrivate" c:type="ALSASeqPortInfoPrivate*"/>
      </field>
    </class>
    <record name="PortInfoClass"
            c:type="ALSASeqPortInfoClass"
            glib:is-gtype-struct-for="PortInfo">
      <source-position filename="../src/seq/port-info.h" line="43"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <record name="PortInfoPrivate"
            c:type="ALSASeqPortInfoPrivate"
            disguised="1">
      <source-position filename="../src/seq/port-info.h" line="33"/>
    </record>
    <bitfield name="PortSubscribeFlag"
              glib:type-name="ALSASeqPortSubscribeFlag"
              glib:get-type="alsaseq_port_subscribe_flag_get_type"
              c:type="ALSASeqPortSubscribeFlag">
      <doc xml:space="preserve"
           filename="../src/seq/alsaseq-enum-types.h"
           line="313">A set of flags for subscription conditions.</doc>
      <member name="exclusive"
              value="1"
              c:identifier="ALSASEQ_PORT_SUBSCRIBE_FLAG_EXCLUSIVE"
              glib:nick="exclusive"
              glib:name="ALSASEQ_PORT_SUBSCRIBE_FLAG_EXCLUSIVE">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="315">The subscription can be changed by originator.</doc>
      </member>
      <member name="timestamp"
              value="2"
              c:identifier="ALSASEQ_PORT_SUBSCRIBE_FLAG_TIMESTAMP"
              glib:nick="timestamp"
              glib:name="ALSASEQ_PORT_SUBSCRIBE_FLAG_TIMESTAMP">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="316">Any event for this subscription has timestamp.</doc>
      </member>
      <member name="time_real"
              value="4"
              c:identifier="ALSASEQ_PORT_SUBSCRIBE_FLAG_TIME_REAL"
              glib:nick="time-real"
              glib:name="ALSASEQ_PORT_SUBSCRIBE_FLAG_TIME_REAL">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="317">The timestamp on the event from the port has real time.</doc>
      </member>
    </bitfield>
    <function-macro name="QUEUE_INFO"
                    c:identifier="ALSASEQ_QUEUE_INFO"
                    introspectable="0">
      <source-position filename="../src/seq/queue-info.h" line="11"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="QUEUE_INFO_CLASS"
                    c:identifier="ALSASEQ_QUEUE_INFO_CLASS"
                    introspectable="0">
      <source-position filename="../src/seq/queue-info.h" line="19"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="QUEUE_INFO_GET_CLASS"
                    c:identifier="ALSASEQ_QUEUE_INFO_GET_CLASS"
                    introspectable="0">
      <source-position filename="../src/seq/queue-info.h" line="26"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="QUEUE_STATUS"
                    c:identifier="ALSASEQ_QUEUE_STATUS"
                    introspectable="0">
      <source-position filename="../src/seq/queue-status.h" line="11"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="QUEUE_STATUS_CLASS"
                    c:identifier="ALSASEQ_QUEUE_STATUS_CLASS"
                    introspectable="0">
      <source-position filename="../src/seq/queue-status.h" line="19"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="QUEUE_STATUS_GET_CLASS"
                    c:identifier="ALSASEQ_QUEUE_STATUS_GET_CLASS"
                    introspectable="0">
      <source-position filename="../src/seq/queue-status.h" line="26"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="QUEUE_TEMPO"
                    c:identifier="ALSASEQ_QUEUE_TEMPO"
                    introspectable="0">
      <source-position filename="../src/seq/queue-tempo.h" line="11"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="QUEUE_TEMPO_CLASS"
                    c:identifier="ALSASEQ_QUEUE_TEMPO_CLASS"
                    introspectable="0">
      <source-position filename="../src/seq/queue-tempo.h" line="19"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="QUEUE_TEMPO_GET_CLASS"
                    c:identifier="ALSASEQ_QUEUE_TEMPO_GET_CLASS"
                    introspectable="0">
      <source-position filename="../src/seq/queue-tempo.h" line="26"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="QUEUE_TIMER"
                    c:identifier="ALSASEQ_QUEUE_TIMER"
                    introspectable="0">
      <source-position filename="../src/seq/queue-timer.h" line="11"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="QUEUE_TIMER_CLASS"
                    c:identifier="ALSASEQ_QUEUE_TIMER_CLASS"
                    introspectable="0">
      <source-position filename="../src/seq/queue-timer.h" line="19"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="QUEUE_TIMER_GET_CLASS"
                    c:identifier="ALSASEQ_QUEUE_TIMER_GET_CLASS"
                    introspectable="0">
      <source-position filename="../src/seq/queue-timer.h" line="26"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <enumeration name="QuerySubscribeType"
                 glib:type-name="ALSASeqQuerySubscribeType"
                 glib:get-type="alsaseq_query_subscribe_type_get_type"
                 c:type="ALSASeqQuerySubscribeType">
      <doc xml:space="preserve"
           filename="../src/seq/alsaseq-enum-types.h"
           line="328">A set of enumerations for the type to query subscription.</doc>
      <member name="read"
              value="0"
              c:identifier="ALSASEQ_QUERY_SUBSCRIBE_TYPE_READ"
              glib:nick="read"
              glib:name="ALSASEQ_QUERY_SUBSCRIBE_TYPE_READ">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="330">To query subscribers to read from the port.</doc>
      </member>
      <member name="write"
              value="1"
              c:identifier="ALSASEQ_QUERY_SUBSCRIBE_TYPE_WRITE"
              glib:nick="write"
              glib:name="ALSASEQ_QUERY_SUBSCRIBE_TYPE_WRITE">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="331">To query subscribers to write to the port.</doc>
      </member>
    </enumeration>
    <class name="QueueInfo"
           c:symbol-prefix="queue_info"
           c:type="ALSASeqQueueInfo"
           parent="GObject.Object"
           glib:type-name="ALSASeqQueueInfo"
           glib:get-type="alsaseq_queue_info_get_type"
           glib:type-struct="QueueInfoClass">
      <source-position filename="../src/seq/queue-info.h" line="43"/>
      <constructor name="new" c:identifier="alsaseq_queue_info_new">
        <doc xml:space="preserve"
             filename="../src/seq/queue-info.c"
             line="129">Allocate and return an instance of ALSASeqQueueInfo.</doc>
        <source-position filename="../src/seq/queue-info.h" line="47"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/seq/queue-info.c"
               line="134">A #ALSASeqQueueInfo.</doc>
          <type name="QueueInfo" c:type="ALSASeqQueueInfo*"/>
        </return-value>
      </constructor>
      <property name="client-id" writable="1" transfer-ownership="none">
        <type name="guint8" c:type="guint8"/>
      </property>
      <property name="locked" writable="1" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="name" writable="1" transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="queue-id" writable="1" transfer-ownership="none">
        <type name="guint8" c:type="guint8"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="QueueInfoPrivate" c:type="ALSASeqQueueInfoPrivate*"/>
      </field>
    </class>
    <record name="QueueInfoClass"
            c:type="ALSASeqQueueInfoClass"
            glib:is-gtype-struct-for="QueueInfo">
      <source-position filename="../src/seq/queue-info.h" line="43"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <record name="QueueInfoPrivate"
            c:type="ALSASeqQueueInfoPrivate"
            disguised="1">
      <source-position filename="../src/seq/queue-info.h" line="33"/>
    </record>
    <class name="QueueStatus"
           c:symbol-prefix="queue_status"
           c:type="ALSASeqQueueStatus"
           parent="GObject.Object"
           glib:type-name="ALSASeqQueueStatus"
           glib:get-type="alsaseq_queue_status_get_type"
           glib:type-struct="QueueStatusClass">
      <source-position filename="../src/seq/queue-status.h" line="43"/>
      <constructor name="new" c:identifier="alsaseq_queue_status_new">
        <doc xml:space="preserve"
             filename="../src/seq/queue-status.c"
             line="88">Allocate and returns an instance of #ALSASeqQueueStatus.</doc>
        <source-position filename="../src/seq/queue-status.h" line="47"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/seq/queue-status.c"
               line="93">A #ALSASeqQueueStatus.</doc>
          <type name="QueueStatus" c:type="ALSASeqQueueStatus*"/>
        </return-value>
      </constructor>
      <method name="get_real_time"
              c:identifier="alsaseq_queue_status_get_real_time">
        <doc xml:space="preserve"
             filename="../src/seq/queue-status.c"
             line="120">Get time as wall-clock time.</doc>
        <source-position filename="../src/seq/queue-status.h" line="52"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/queue-status.c"
                 line="122">A #ALSASeqQueueStatus.</doc>
            <type name="QueueStatus" c:type="ALSASeqQueueStatus*"/>
          </instance-parameter>
          <parameter name="real_time"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/queue-status.c"
                 line="123">The array with two
            elements for sec part and nsec part of real time.</doc>
            <array zero-terminated="0" c:type="const guint32**" fixed-size="2">
              <type name="guint32" c:type="guint32"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="get_tick_time"
              c:identifier="alsaseq_queue_status_get_tick_time">
        <doc xml:space="preserve"
             filename="../src/seq/queue-status.c"
             line="100">Get time as MIDI ticks.</doc>
        <source-position filename="../src/seq/queue-status.h" line="49"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/queue-status.c"
                 line="102">A #ALSASeqQueueStatus.</doc>
            <type name="QueueStatus" c:type="ALSASeqQueueStatus*"/>
          </instance-parameter>
          <parameter name="tick_time"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/seq/queue-status.c"
                 line="103">The number of MIDI ticks.</doc>
            <type name="guint" c:type="guint*"/>
          </parameter>
        </parameters>
      </method>
      <property name="event-count" transfer-ownership="none">
        <type name="gint" c:type="gint"/>
      </property>
      <property name="queue-id" transfer-ownership="none">
        <type name="guint8" c:type="guint8"/>
      </property>
      <property name="running" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="QueueStatusPrivate" c:type="ALSASeqQueueStatusPrivate*"/>
      </field>
    </class>
    <record name="QueueStatusClass"
            c:type="ALSASeqQueueStatusClass"
            glib:is-gtype-struct-for="QueueStatus">
      <source-position filename="../src/seq/queue-status.h" line="43"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <record name="QueueStatusPrivate"
            c:type="ALSASeqQueueStatusPrivate"
            disguised="1">
      <source-position filename="../src/seq/queue-status.h" line="33"/>
    </record>
    <class name="QueueTempo"
           c:symbol-prefix="queue_tempo"
           c:type="ALSASeqQueueTempo"
           parent="GObject.Object"
           glib:type-name="ALSASeqQueueTempo"
           glib:get-type="alsaseq_queue_tempo_get_type"
           glib:type-struct="QueueTempoClass">
      <source-position filename="../src/seq/queue-tempo.h" line="43"/>
      <constructor name="new" c:identifier="alsaseq_queue_tempo_new">
        <doc xml:space="preserve"
             filename="../src/seq/queue-tempo.c"
             line="112">Allocate and return an instance of ALSASeqQueueTempo.</doc>
        <source-position filename="../src/seq/queue-tempo.h" line="47"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/seq/queue-tempo.c"
               line="117">A #ALSASeqQueueTempo.</doc>
          <type name="QueueTempo" c:type="ALSASeqQueueTempo*"/>
        </return-value>
      </constructor>
      <method name="get_skew" c:identifier="alsaseq_queue_tempo_get_skew">
        <doc xml:space="preserve"
             filename="../src/seq/queue-tempo.c"
             line="124">Refer to numerator and denominator of fraction for skew.</doc>
        <source-position filename="../src/seq/queue-tempo.h" line="49"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/queue-tempo.c"
                 line="126">A #ALSASeqQueueTempo.</doc>
            <type name="QueueTempo" c:type="ALSASeqQueueTempo*"/>
          </instance-parameter>
          <parameter name="skew"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/queue-tempo.c"
                 line="127">The array with two elements
       for numerator and denominator of fraction for skew.</doc>
            <array zero-terminated="0" c:type="const guint32**" fixed-size="2">
              <type name="guint32" c:type="guint32"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="set_skew" c:identifier="alsaseq_queue_tempo_set_skew">
        <doc xml:space="preserve"
             filename="../src/seq/queue-tempo.c"
             line="147">Copy numerator and denominator of fraction for skew.</doc>
        <source-position filename="../src/seq/queue-tempo.h" line="50"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/queue-tempo.c"
                 line="149">A #ALSASeqQueueTempo.</doc>
            <type name="QueueTempo" c:type="ALSASeqQueueTempo*"/>
          </instance-parameter>
          <parameter name="skew" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/queue-tempo.c"
                 line="150">The array with two elements for
       numerator and denominator of fraction for skew.</doc>
            <array zero-terminated="0" c:type="const guint32*" fixed-size="2">
              <type name="guint32" c:type="guint32"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <property name="queue-id" writable="1" transfer-ownership="none">
        <type name="guint8" c:type="guint8"/>
      </property>
      <property name="resolution" writable="1" transfer-ownership="none">
        <type name="gint" c:type="gint"/>
      </property>
      <property name="tempo" writable="1" transfer-ownership="none">
        <type name="guint" c:type="guint"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="QueueTempoPrivate" c:type="ALSASeqQueueTempoPrivate*"/>
      </field>
    </class>
    <record name="QueueTempoClass"
            c:type="ALSASeqQueueTempoClass"
            glib:is-gtype-struct-for="QueueTempo">
      <source-position filename="../src/seq/queue-tempo.h" line="43"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <record name="QueueTempoPrivate"
            c:type="ALSASeqQueueTempoPrivate"
            disguised="1">
      <source-position filename="../src/seq/queue-tempo.h" line="33"/>
    </record>
    <class name="QueueTimer"
           c:symbol-prefix="queue_timer"
           c:type="ALSASeqQueueTimer"
           parent="GObject.Object"
           glib:type-name="ALSASeqQueueTimer"
           glib:get-type="alsaseq_queue_timer_get_type"
           glib:type-struct="QueueTimerClass">
      <source-position filename="../src/seq/queue-timer.h" line="43"/>
      <constructor name="new" c:identifier="alsaseq_queue_timer_new">
        <doc xml:space="preserve"
             filename="../src/seq/queue-timer.c"
             line="78">Allocate and return the instance of #ALSASeqQueueTimer.</doc>
        <source-position filename="../src/seq/queue-timer.h" line="47"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/seq/queue-timer.c"
               line="83">the instance of #ALSASeqQueueTimer.</doc>
          <type name="QueueTimer" c:type="ALSASeqQueueTimer*"/>
        </return-value>
      </constructor>
      <method name="get_alsa_data"
              c:identifier="alsaseq_queue_timer_get_alsa_data">
        <doc xml:space="preserve"
             filename="../src/seq/queue-timer.c"
             line="90">Refer to the data of timer for queue in the case that the device in ALSATimer
drives the timer.</doc>
        <source-position filename="../src/seq/queue-timer.h" line="49"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/queue-timer.c"
                 line="92">A #ALSASeqQueueTimer.</doc>
            <type name="QueueTimer" c:type="ALSASeqQueueTimer*"/>
          </instance-parameter>
          <parameter name="data"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/queue-timer.c"
                 line="93">A #ALSASeqQueueTimerDataAlsa.</doc>
            <type name="QueueTimerDataAlsa"
                  c:type="const ALSASeqQueueTimerDataAlsa**"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_alsa_data"
              c:identifier="alsaseq_queue_timer_set_alsa_data">
        <doc xml:space="preserve"
             filename="../src/seq/queue-timer.c"
             line="111">Set the data of timer for queue in the case that the device in ALSATimer
drives the timer.</doc>
        <source-position filename="../src/seq/queue-timer.h" line="51"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/queue-timer.c"
                 line="113">A #ALSASeqQueueTimer.</doc>
            <type name="QueueTimer" c:type="ALSASeqQueueTimer*"/>
          </instance-parameter>
          <parameter name="data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/queue-timer.c"
                 line="114">A #ALSASeqQueueTimerDataAlsa.</doc>
            <type name="QueueTimerDataAlsa"
                  c:type="const ALSASeqQueueTimerDataAlsa*"/>
          </parameter>
        </parameters>
      </method>
      <property name="queue-id" transfer-ownership="none">
        <type name="guint8" c:type="guint8"/>
      </property>
      <property name="type" transfer-ownership="none">
        <type name="QueueTimerType"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="QueueTimerPrivate" c:type="ALSASeqQueueTimerPrivate*"/>
      </field>
    </class>
    <record name="QueueTimerClass"
            c:type="ALSASeqQueueTimerClass"
            glib:is-gtype-struct-for="QueueTimer">
      <source-position filename="../src/seq/queue-timer.h" line="43"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <record name="QueueTimerDataAlsa"
            c:type="ALSASeqQueueTimerDataAlsa"
            glib:type-name="ALSASeqQueueTimerDataAlsa"
            glib:get-type="alsaseq_queue_timer_data_alsa_get_type"
            c:symbol-prefix="queue_timer_data_alsa">
      <source-position filename="../src/seq/queue-timer-data-alsa.h"
                       line="17"/>
      <field name="device_id" readable="0" private="1">
        <type name="ALSATimer.DeviceId" c:type="ALSATimerDeviceId"/>
      </field>
      <field name="resolution" readable="0" private="1">
        <type name="guint" c:type="unsigned int"/>
      </field>
      <method name="get_device_id"
              c:identifier="alsaseq_queue_timer_data_alsa_get_device_id">
        <doc xml:space="preserve"
             filename="../src/seq/queue-timer-data-alsa.c"
             line="29">Refer to the device ID of timer which drives the queue.</doc>
        <source-position filename="../src/seq/queue-timer-data-alsa.h"
                         line="21"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/queue-timer-data-alsa.c"
                 line="31">A #ALSASeqQueueTimerDataAlsa.</doc>
            <type name="QueueTimerDataAlsa"
                  c:type="const ALSASeqQueueTimerDataAlsa*"/>
          </instance-parameter>
          <parameter name="device_id"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/queue-timer-data-alsa.c"
                 line="32">A #ALSATimerDeviceId.</doc>
            <type name="ALSATimer.DeviceId"
                  c:type="const ALSATimerDeviceId**"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_resolution"
              c:identifier="alsaseq_queue_timer_data_alsa_get_resolution">
        <doc xml:space="preserve"
             filename="../src/seq/queue-timer-data-alsa.c"
             line="55">Get the resolution of timer which drives the queue.</doc>
        <source-position filename="../src/seq/queue-timer-data-alsa.h"
                         line="26"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/queue-timer-data-alsa.c"
                 line="57">A #ALSASeqQueueTimerDataAlsa.</doc>
            <type name="QueueTimerDataAlsa"
                  c:type="const ALSASeqQueueTimerDataAlsa*"/>
          </instance-parameter>
          <parameter name="resolution"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/seq/queue-timer-data-alsa.c"
                 line="58">The resolution of timer.</doc>
            <type name="guint" c:type="guint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_device_id"
              c:identifier="alsaseq_queue_timer_data_alsa_set_device_id">
        <doc xml:space="preserve"
             filename="../src/seq/queue-timer-data-alsa.c"
             line="42">Copy the device ID of timer which drives the queue.</doc>
        <source-position filename="../src/seq/queue-timer-data-alsa.h"
                         line="23"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/queue-timer-data-alsa.c"
                 line="44">A #ALSASeqQueueTimerDataAlsa.</doc>
            <type name="QueueTimerDataAlsa"
                  c:type="ALSASeqQueueTimerDataAlsa*"/>
          </instance-parameter>
          <parameter name="device_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/queue-timer-data-alsa.c"
                 line="45">A #ALSATimerDeviceId.</doc>
            <type name="ALSATimer.DeviceId" c:type="const ALSATimerDeviceId*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_resolution"
              c:identifier="alsaseq_queue_timer_data_alsa_set_resolution">
        <doc xml:space="preserve"
             filename="../src/seq/queue-timer-data-alsa.c"
             line="68">Set the resolution of timer which drives the queue.</doc>
        <source-position filename="../src/seq/queue-timer-data-alsa.h"
                         line="28"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/queue-timer-data-alsa.c"
                 line="70">A #ALSASeqQueueTimerDataAlsa.</doc>
            <type name="QueueTimerDataAlsa"
                  c:type="ALSASeqQueueTimerDataAlsa*"/>
          </instance-parameter>
          <parameter name="resolution" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/queue-timer-data-alsa.c"
                 line="71">The resolution of timer.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
    </record>
    <record name="QueueTimerPrivate"
            c:type="ALSASeqQueueTimerPrivate"
            disguised="1">
      <source-position filename="../src/seq/queue-timer.h" line="33"/>
    </record>
    <enumeration name="QueueTimerType"
                 glib:type-name="ALSASeqQueueTimerType"
                 glib:get-type="alsaseq_queue_timer_type_get_type"
                 c:type="ALSASeqQueueTimerType">
      <doc xml:space="preserve"
           filename="../src/seq/alsaseq-enum-types.h"
           line="340">A set of enumerations for the type of timer source for the queue.</doc>
      <member name="alsa"
              value="0"
              c:identifier="ALSASEQ_QUEUE_TIMER_TYPE_ALSA"
              glib:nick="alsa"
              glib:name="ALSASEQ_QUEUE_TIMER_TYPE_ALSA">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="342">Any ALSA timer device.</doc>
      </member>
    </enumeration>
    <record name="RemoveFilter"
            c:type="ALSASeqRemoveFilter"
            glib:type-name="ALSASeqRemoveFilter"
            glib:get-type="alsaseq_remove_filter_get_type"
            c:symbol-prefix="remove_filter">
      <source-position filename="../src/seq/remove-filter.h" line="11"/>
      <constructor name="new_with_dest_addr"
                   c:identifier="alsaseq_remove_filter_new_with_dest_addr"
                   throws="1">
        <doc xml:space="preserve"
             filename="../src/seq/remove-filter.c"
             line="35">Allocate and return a memory object of ALSASeqRemoveFilter to remove queued
events towards the destination.</doc>
        <source-position filename="../src/seq/remove-filter.h" line="15"/>
        <return-value transfer-ownership="full">
          <type name="RemoveFilter" c:type="ALSASeqRemoveFilter*"/>
        </return-value>
        <parameters>
          <parameter name="inout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/remove-filter.c"
                 line="37">The direction of queue; ALSASEQ_REMOVE_FILTER_FLAG_INPUT or
        ALSASEQ_REMOVE_FILTER_FLAG_OUTPUT.</doc>
            <type name="RemoveFilterFlag" c:type="ALSASeqRemoveFilterFlag"/>
          </parameter>
          <parameter name="queue_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/remove-filter.c"
                 line="39">The numerical ID of queue.</doc>
            <type name="guint8" c:type="guint8"/>
          </parameter>
          <parameter name="dest" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/remove-filter.c"
                 line="40">The address of destination.</doc>
            <type name="Addr" c:type="ALSASeqAddr*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_with_event_type"
                   c:identifier="alsaseq_remove_filter_new_with_event_type"
                   throws="1">
        <doc xml:space="preserve"
             filename="../src/seq/remove-filter.c"
             line="89">Allocate and return a memory object of ALSASeqRemoveFilter to remove queued
events with the type.</doc>
        <source-position filename="../src/seq/remove-filter.h" line="23"/>
        <return-value transfer-ownership="full">
          <type name="RemoveFilter" c:type="ALSASeqRemoveFilter*"/>
        </return-value>
        <parameters>
          <parameter name="inout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/remove-filter.c"
                 line="91">The direction of queue; ALSASEQ_REMOVE_FILTER_FLAG_INPUT or
        ALSASEQ_REMOVE_FILTER_FLAG_OUTPUT.</doc>
            <type name="RemoveFilterFlag" c:type="ALSASeqRemoveFilterFlag"/>
          </parameter>
          <parameter name="queue_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/remove-filter.c"
                 line="93">The numerical ID of queue.</doc>
            <type name="guint8" c:type="guint8"/>
          </parameter>
          <parameter name="ev_type" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/remove-filter.c"
                 line="94">The type of event.</doc>
            <type name="EventType" c:type="ALSASeqEventType"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_with_note"
                   c:identifier="alsaseq_remove_filter_new_with_note"
                   throws="1">
        <doc xml:space="preserve"
             filename="../src/seq/remove-filter.c"
             line="116">Allocate and return a memory object of ALSASeqRemoveFilter to remove queued
events for note, except for ALSASEQ_EVENT_TYPE_NOTEOFF.</doc>
        <source-position filename="../src/seq/remove-filter.h" line="27"/>
        <return-value transfer-ownership="full">
          <type name="RemoveFilter" c:type="ALSASeqRemoveFilter*"/>
        </return-value>
        <parameters>
          <parameter name="inout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/remove-filter.c"
                 line="118">The direction of queue; ALSASEQ_REMOVE_FILTER_FLAG_INPUT or
        ALSASEQ_REMOVE_FILTER_FLAG_OUTPUT.</doc>
            <type name="RemoveFilterFlag" c:type="ALSASeqRemoveFilterFlag"/>
          </parameter>
          <parameter name="queue_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/remove-filter.c"
                 line="120">The numerical ID of queue.</doc>
            <type name="guint8" c:type="guint8"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_with_note_channel"
                   c:identifier="alsaseq_remove_filter_new_with_note_channel"
                   throws="1">
        <doc xml:space="preserve"
             filename="../src/seq/remove-filter.c"
             line="62">Allocate and return a memory object of ALSASeqRemoveFilter to remove queued
events with note type towards the channel.</doc>
        <source-position filename="../src/seq/remove-filter.h" line="19"/>
        <return-value transfer-ownership="full">
          <type name="RemoveFilter" c:type="ALSASeqRemoveFilter*"/>
        </return-value>
        <parameters>
          <parameter name="inout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/remove-filter.c"
                 line="64">The direction of queue; ALSASEQ_REMOVE_FILTER_FLAG_INPUT or
        ALSASEQ_REMOVE_FILTER_FLAG_OUTPUT.</doc>
            <type name="RemoveFilterFlag" c:type="ALSASeqRemoveFilterFlag"/>
          </parameter>
          <parameter name="queue_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/remove-filter.c"
                 line="66">The numerical ID of queue.</doc>
            <type name="guint8" c:type="guint8"/>
          </parameter>
          <parameter name="channel" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/remove-filter.c"
                 line="67">The channel for note event.</doc>
            <type name="guint8" c:type="guint8"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_with_real_time"
                   c:identifier="alsaseq_remove_filter_new_with_real_time"
                   throws="1">
        <doc xml:space="preserve"
             filename="../src/seq/remove-filter.c"
             line="202">Allocate and return a memory object of ALSASeqRemoveFilter to remove queued
events before/after the real time.</doc>
        <source-position filename="../src/seq/remove-filter.h" line="40"/>
        <return-value transfer-ownership="full">
          <type name="RemoveFilter" c:type="ALSASeqRemoveFilter*"/>
        </return-value>
        <parameters>
          <parameter name="inout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/remove-filter.c"
                 line="204">The direction of queue; ALSASEQ_REMOVE_FILTER_FLAG_INPUT or
        ALSASEQ_REMOVE_FILTER_FLAG_OUTPUT.</doc>
            <type name="RemoveFilterFlag" c:type="ALSASeqRemoveFilterFlag"/>
          </parameter>
          <parameter name="queue_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/remove-filter.c"
                 line="206">The numerical ID of queue.</doc>
            <type name="guint8" c:type="guint8"/>
          </parameter>
          <parameter name="tv_sec" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/remove-filter.c"
                 line="207">The second part of time.</doc>
            <type name="gint32" c:type="gint32"/>
          </parameter>
          <parameter name="tv_nsec" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/remove-filter.c"
                 line="208">The nanosecond part of time.</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="after" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/remove-filter.c"
                 line="209">Remove events after the real time if true, else remove events before
        the real time.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_with_tag"
                   c:identifier="alsaseq_remove_filter_new_with_tag"
                   throws="1">
        <doc xml:space="preserve"
             filename="../src/seq/remove-filter.c"
             line="141">Allocate and return a memory object of ALSASeqRemoveFilter to remove queued
events with the tag.</doc>
        <source-position filename="../src/seq/remove-filter.h" line="31"/>
        <return-value transfer-ownership="full">
          <type name="RemoveFilter" c:type="ALSASeqRemoveFilter*"/>
        </return-value>
        <parameters>
          <parameter name="inout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/remove-filter.c"
                 line="143">The direction of queue; ALSASEQ_REMOVE_FILTER_FLAG_INPUT or
        ALSASEQ_REMOVE_FILTER_FLAG_OUTPUT.</doc>
            <type name="RemoveFilterFlag" c:type="ALSASeqRemoveFilterFlag"/>
          </parameter>
          <parameter name="queue_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/remove-filter.c"
                 line="145">The numerical ID of queue.</doc>
            <type name="guint8" c:type="guint8"/>
          </parameter>
          <parameter name="tag" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/remove-filter.c"
                 line="146">The tag of event to remove.</doc>
            <type name="gint8" c:type="gint8"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_with_tick_time"
                   c:identifier="alsaseq_remove_filter_new_with_tick_time"
                   throws="1">
        <doc xml:space="preserve"
             filename="../src/seq/remove-filter.c"
             line="168">Allocate and return a memory object of ALSASeqRemoveFilter to remove queued
events before/after the tick time.</doc>
        <source-position filename="../src/seq/remove-filter.h" line="35"/>
        <return-value transfer-ownership="full">
          <type name="RemoveFilter" c:type="ALSASeqRemoveFilter*"/>
        </return-value>
        <parameters>
          <parameter name="inout" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/remove-filter.c"
                 line="170">The direction of queue; ALSASEQ_REMOVE_FILTER_FLAG_INPUT or
        ALSASEQ_REMOVE_FILTER_FLAG_OUTPUT.</doc>
            <type name="RemoveFilterFlag" c:type="ALSASeqRemoveFilterFlag"/>
          </parameter>
          <parameter name="queue_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/remove-filter.c"
                 line="172">The numerical ID of queue.</doc>
            <type name="guint8" c:type="guint8"/>
          </parameter>
          <parameter name="tick_time" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/remove-filter.c"
                 line="173">The count of tick.</doc>
            <type name="gint32" c:type="gint32"/>
          </parameter>
          <parameter name="after" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/remove-filter.c"
                 line="174">Remove events after the tick time if true, else remove events before
        the tick time.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </constructor>
    </record>
    <bitfield name="RemoveFilterFlag"
              glib:type-name="ALSASeqRemoveFilterFlag"
              glib:get-type="alsaseq_remove_filter_flag_get_type"
              c:type="ALSASeqRemoveFilterFlag">
      <doc xml:space="preserve"
           filename="../src/seq/alsaseq-enum-types.h"
           line="350">A set of flags of the mode of removal event.</doc>
      <member name="input"
              value="1"
              c:identifier="ALSASEQ_REMOVE_FILTER_FLAG_INPUT"
              glib:nick="input"
              glib:name="ALSASEQ_REMOVE_FILTER_FLAG_INPUT">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="352">Flush of input queues.</doc>
      </member>
      <member name="output"
              value="2"
              c:identifier="ALSASEQ_REMOVE_FILTER_FLAG_OUTPUT"
              glib:nick="output"
              glib:name="ALSASEQ_REMOVE_FILTER_FLAG_OUTPUT">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="353">Flush of output queues.</doc>
      </member>
    </bitfield>
    <function-macro name="SUBSCRIBE_DATA"
                    c:identifier="ALSASEQ_SUBSCRIBE_DATA"
                    introspectable="0">
      <source-position filename="../src/seq/subscribe-data.h" line="11"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="SUBSCRIBE_DATA_CLASS"
                    c:identifier="ALSASEQ_SUBSCRIBE_DATA_CLASS"
                    introspectable="0">
      <source-position filename="../src/seq/subscribe-data.h" line="19"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="SUBSCRIBE_DATA_GET_CLASS"
                    c:identifier="ALSASEQ_SUBSCRIBE_DATA_GET_CLASS"
                    introspectable="0">
      <source-position filename="../src/seq/subscribe-data.h" line="26"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="SYSTEM_INFO"
                    c:identifier="ALSASEQ_SYSTEM_INFO"
                    introspectable="0">
      <source-position filename="../src/seq/system-info.h" line="11"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="SYSTEM_INFO_CLASS"
                    c:identifier="ALSASEQ_SYSTEM_INFO_CLASS"
                    introspectable="0">
      <source-position filename="../src/seq/system-info.h" line="19"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="SYSTEM_INFO_GET_CLASS"
                    c:identifier="ALSASEQ_SYSTEM_INFO_GET_CLASS"
                    introspectable="0">
      <source-position filename="../src/seq/system-info.h" line="26"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <enumeration name="SpecificAddress"
                 glib:type-name="ALSASeqSpecificAddress"
                 glib:get-type="alsaseq_specific_address_get_type"
                 c:type="ALSASeqSpecificAddress">
      <doc xml:space="preserve"
           filename="../src/seq/alsaseq-enum-types.h"
           line="5">A set of enumerations for specific addresses.</doc>
      <member name="unknown"
              value="253"
              c:identifier="ALSASEQ_SPECIFIC_ADDRESS_UNKNOWN"
              glib:nick="unknown"
              glib:name="ALSASEQ_SPECIFIC_ADDRESS_UNKNOWN">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="7">The address for unknown client/port/queue.</doc>
      </member>
      <member name="subscribers"
              value="254"
              c:identifier="ALSASEQ_SPECIFIC_ADDRESS_SUBSCRIBERS"
              glib:nick="subscribers"
              glib:name="ALSASEQ_SPECIFIC_ADDRESS_SUBSCRIBERS">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="8">The client/port/queue address towards subscribers.</doc>
      </member>
      <member name="broadcast"
              value="255"
              c:identifier="ALSASEQ_SPECIFIC_ADDRESS_BROADCAST"
              glib:nick="broadcast"
              glib:name="ALSASEQ_SPECIFIC_ADDRESS_BROADCAST">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="9">The client/port/queue address to broadcast.</doc>
      </member>
    </enumeration>
    <enumeration name="SpecificClientId"
                 glib:type-name="ALSASeqSpecificClientId"
                 glib:get-type="alsaseq_specific_client_id_get_type"
                 c:type="ALSASeqSpecificClientId">
      <doc xml:space="preserve"
           filename="../src/seq/alsaseq-enum-types.h"
           line="19">A set of enumerations for the numerical IDs of specific clients.</doc>
      <member name="system"
              value="0"
              c:identifier="ALSASEQ_SPECIFIC_CLIENT_ID_SYSTEM"
              glib:nick="system"
              glib:name="ALSASEQ_SPECIFIC_CLIENT_ID_SYSTEM">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="21">The numerical ID to system client.</doc>
      </member>
      <member name="dummy"
              value="14"
              c:identifier="ALSASEQ_SPECIFIC_CLIENT_ID_DUMMY"
              glib:nick="dummy"
              glib:name="ALSASEQ_SPECIFIC_CLIENT_ID_DUMMY">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="22">The numerical ID to dummy client.</doc>
      </member>
      <member name="oss"
              value="15"
              c:identifier="ALSASEQ_SPECIFIC_CLIENT_ID_OSS"
              glib:nick="oss"
              glib:name="ALSASEQ_SPECIFIC_CLIENT_ID_OSS">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="23">The numerical ID to OSS client.</doc>
      </member>
    </enumeration>
    <enumeration name="SpecificPortId"
                 glib:type-name="ALSASeqSpecificPortId"
                 glib:get-type="alsaseq_specific_port_id_get_type"
                 c:type="ALSASeqSpecificPortId">
      <doc xml:space="preserve"
           filename="../src/seq/alsaseq-enum-types.h"
           line="62">A set of enumerations for the numerical IDs of port for specific purpose.</doc>
      <member name="timer"
              value="0"
              c:identifier="ALSASEQ_SPECIFIC_PORT_ID_SYSTEM_TIMER"
              glib:nick="timer"
              glib:name="ALSASEQ_SPECIFIC_PORT_ID_SYSTEM_TIMER">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="64">The numerical ID of port for system timer.</doc>
      </member>
      <member name="announce"
              value="1"
              c:identifier="ALSASEQ_SPECIFIC_PORT_ID_SYSTEM_ANNOUNCE"
              glib:nick="announce"
              glib:name="ALSASEQ_SPECIFIC_PORT_ID_SYSTEM_ANNOUNCE">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="65">The numerical ID of port for system announce.</doc>
      </member>
    </enumeration>
    <enumeration name="SpecificQueueId"
                 glib:type-name="ALSASeqSpecificQueueId"
                 glib:get-type="alsaseq_specific_queue_id_get_type"
                 c:type="ALSASeqSpecificQueueId">
      <doc xml:space="preserve"
           filename="../src/seq/alsaseq-enum-types.h"
           line="303">A set of enumerations for the numerical IDs of queue for specific purpose.</doc>
      <member name="direct"
              value="253"
              c:identifier="ALSASEQ_SPECIFIC_QUEUE_ID_DIRECT"
              glib:nick="direct"
              glib:name="ALSASEQ_SPECIFIC_QUEUE_ID_DIRECT">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="305">The message is delivered immediately, instead of being queued.</doc>
      </member>
    </enumeration>
    <class name="SubscribeData"
           c:symbol-prefix="subscribe_data"
           c:type="ALSASeqSubscribeData"
           parent="GObject.Object"
           glib:type-name="ALSASeqSubscribeData"
           glib:get-type="alsaseq_subscribe_data_get_type"
           glib:type-struct="SubscribeDataClass">
      <source-position filename="../src/seq/subscribe-data.h" line="43"/>
      <constructor name="new" c:identifier="alsaseq_subscribe_data_new">
        <doc xml:space="preserve"
             filename="../src/seq/subscribe-data.c"
             line="136">Allocates and returns the instance of ALSASeqSubscribeData class.</doc>
        <source-position filename="../src/seq/subscribe-data.h" line="47"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/seq/subscribe-data.c"
               line="141">A #ALSASeqSubscribeData.</doc>
          <type name="SubscribeData" c:type="ALSASeqSubscribeData*"/>
        </return-value>
      </constructor>
      <property name="dest" writable="1" transfer-ownership="none">
        <type name="Addr"/>
      </property>
      <property name="flag" writable="1" transfer-ownership="none">
        <type name="PortSubscribeFlag"/>
      </property>
      <property name="queue-id" writable="1" transfer-ownership="none">
        <type name="guint8" c:type="guint8"/>
      </property>
      <property name="sender" writable="1" transfer-ownership="none">
        <type name="Addr"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="SubscribeData" c:type="ALSASeqSubscribeData*"/>
      </field>
    </class>
    <record name="SubscribeDataClass"
            c:type="ALSASeqSubscribeDataClass"
            glib:is-gtype-struct-for="SubscribeData">
      <source-position filename="../src/seq/subscribe-data.h" line="43"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <record name="SubscribeDataPrivate"
            c:type="ALSASeqSubscribeDataPrivate"
            disguised="1">
      <source-position filename="../src/seq/subscribe-data.h" line="33"/>
    </record>
    <class name="SystemInfo"
           c:symbol-prefix="system_info"
           c:type="ALSASeqSystemInfo"
           parent="GObject.Object"
           glib:type-name="ALSASeqSystemInfo"
           glib:get-type="alsaseq_system_info_get_type"
           glib:type-struct="SystemInfoClass">
      <source-position filename="../src/seq/system-info.h" line="43"/>
      <property name="current-client-count" transfer-ownership="none">
        <type name="gint" c:type="gint"/>
      </property>
      <property name="current-queue-count" transfer-ownership="none">
        <type name="gint" c:type="gint"/>
      </property>
      <property name="maximum-channel-count" transfer-ownership="none">
        <type name="gint" c:type="gint"/>
      </property>
      <property name="maximum-client-count" transfer-ownership="none">
        <type name="gint" c:type="gint"/>
      </property>
      <property name="maximum-port-count" transfer-ownership="none">
        <type name="gint" c:type="gint"/>
      </property>
      <property name="maximum-queue-count" transfer-ownership="none">
        <type name="gint" c:type="gint"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="SystemInfoPrivate" c:type="ALSASeqSystemInfoPrivate*"/>
      </field>
    </class>
    <record name="SystemInfoClass"
            c:type="ALSASeqSystemInfoClass"
            glib:is-gtype-struct-for="SystemInfo">
      <source-position filename="../src/seq/system-info.h" line="43"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <record name="SystemInfoPrivate"
            c:type="ALSASeqSystemInfoPrivate"
            disguised="1">
      <source-position filename="../src/seq/system-info.h" line="33"/>
    </record>
    <union name="Tstamp"
           c:type="ALSASeqTstamp"
           glib:type-name="ALSASeqTstamp"
           glib:get-type="alsaseq_tstamp_get_type"
           c:symbol-prefix="tstamp">
      <source-position filename="../src/seq/tstamp.h" line="11"/>
      <method name="get_real_time" c:identifier="alsaseq_tstamp_get_real_time">
        <doc xml:space="preserve"
             filename="../src/seq/tstamp.c"
             line="53">Refer to the time as wall-clock time.</doc>
        <source-position filename="../src/seq/tstamp.h" line="18"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/tstamp.c"
                 line="55">A #ALSASeqTstamp.</doc>
            <type name="Tstamp" c:type="const ALSASeqTstamp*"/>
          </instance-parameter>
          <parameter name="real_time"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/tstamp.c"
                 line="56">The array with two
            elements for sec part and nsec part of real time.</doc>
            <array zero-terminated="0" c:type="const guint32**" fixed-size="2">
              <type name="guint32" c:type="guint32"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="get_tick_time" c:identifier="alsaseq_tstamp_get_tick_time">
        <doc xml:space="preserve"
             filename="../src/seq/tstamp.c"
             line="29">Get time as MIDI ticks.</doc>
        <source-position filename="../src/seq/tstamp.h" line="15"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/tstamp.c"
                 line="31">A #ALSASeqTstamp.</doc>
            <type name="Tstamp" c:type="const ALSASeqTstamp*"/>
          </instance-parameter>
          <parameter name="tick_time"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/seq/tstamp.c"
                 line="32">The number of MIDI ticks.</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_real_time" c:identifier="alsaseq_tstamp_set_real_time">
        <doc xml:space="preserve"
             filename="../src/seq/tstamp.c"
             line="70">Copy the time as wall-clock time.</doc>
        <source-position filename="../src/seq/tstamp.h" line="20"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/tstamp.c"
                 line="72">A #ALSASeqTstamp.</doc>
            <type name="Tstamp" c:type="ALSASeqTstamp*"/>
          </instance-parameter>
          <parameter name="real_time" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/tstamp.c"
                 line="73">The array with two elements
            for sec part and nsec part of real time.</doc>
            <array zero-terminated="0" c:type="const guint32*" fixed-size="2">
              <type name="guint32" c:type="guint32"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="set_tick_time" c:identifier="alsaseq_tstamp_set_tick_time">
        <doc xml:space="preserve"
             filename="../src/seq/tstamp.c"
             line="41">Set time as MIDI ticks.</doc>
        <source-position filename="../src/seq/tstamp.h" line="16"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/tstamp.c"
                 line="43">A #ALSASeqTstamp.</doc>
            <type name="Tstamp" c:type="ALSASeqTstamp*"/>
          </instance-parameter>
          <parameter name="tick_time" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/tstamp.c"
                 line="44">The number of MIDI ticks.</doc>
            <type name="guint32" c:type="const guint32"/>
          </parameter>
        </parameters>
      </method>
    </union>
    <function-macro name="USER_CLIENT"
                    c:identifier="ALSASEQ_USER_CLIENT"
                    introspectable="0">
      <source-position filename="../src/seq/user-client.h" line="11"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="USER_CLIENT_CLASS"
                    c:identifier="ALSASEQ_USER_CLIENT_CLASS"
                    introspectable="0">
      <source-position filename="../src/seq/user-client.h" line="19"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="USER_CLIENT_GET_CLASS"
                    c:identifier="ALSASEQ_USER_CLIENT_GET_CLASS"
                    introspectable="0">
      <source-position filename="../src/seq/user-client.h" line="26"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <class name="UserClient"
           c:symbol-prefix="user_client"
           c:type="ALSASeqUserClient"
           parent="GObject.Object"
           glib:type-name="ALSASeqUserClient"
           glib:get-type="alsaseq_user_client_get_type"
           glib:type-struct="UserClientClass">
      <source-position filename="../src/seq/user-client.h" line="61"/>
      <constructor name="new" c:identifier="alsaseq_user_client_new">
        <doc xml:space="preserve"
             filename="../src/seq/user-client.c"
             line="156">Allocate and return an instance of ALSASeqUserClient class.</doc>
        <source-position filename="../src/seq/user-client.h" line="65"/>
        <return-value transfer-ownership="full">
          <type name="UserClient" c:type="ALSASeqUserClient*"/>
        </return-value>
      </constructor>
      <virtual-method name="handle_event">
        <doc xml:space="preserve"
             filename="../src/seq/user-client.h"
             line="48">When event occurs, this signal is emit with the instance of object which
points to a batch of events. The instance should not be passed directly
to alsaseq_user_client_schedule_event() again because its memory
alignment is different for events with blob data.</doc>
        <source-position filename="../src/seq/user-client.h" line="59"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/user-client.h"
                 line="50">A #ALSASeqUserClient.</doc>
            <type name="UserClient" c:type="ALSASeqUserClient*"/>
          </instance-parameter>
          <parameter name="ev_cntr" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/user-client.h"
                 line="51">The instance of ALSASeqEventCntr which
            points to the batch of events.</doc>
            <type name="EventCntr" c:type="const ALSASeqEventCntr*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="create_port"
              c:identifier="alsaseq_user_client_create_port"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/seq/user-client.c"
             line="319">Create a port into the client.

The call of function executes ioctl(2) system call with
SNDRV_SEQ_IOCTL_CREATE_PORT command for ALSA sequencer character device.</doc>
        <source-position filename="../src/seq/user-client.h" line="81"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/user-client.c"
                 line="321">A #ALSASeqUserClient.</doc>
            <type name="UserClient" c:type="ALSASeqUserClient*"/>
          </instance-parameter>
          <parameter name="port_info"
                     direction="inout"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/seq/user-client.c"
                 line="322">A #ALSASeqPortInfo.</doc>
            <type name="PortInfo" c:type="ALSASeqPortInfo* const*"/>
          </parameter>
        </parameters>
      </method>
      <method name="create_port_at"
              c:identifier="alsaseq_user_client_create_port_at"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/seq/user-client.c"
             line="350">Create a port into the client with the given numerical port ID.

The call of function executes ioctl(2) system call with
SNDRV_SEQ_IOCTL_CREATE_PORT command for ALSA sequencer character device.</doc>
        <source-position filename="../src/seq/user-client.h" line="84"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/user-client.c"
                 line="352">A #ALSASeqUserClient.</doc>
            <type name="UserClient" c:type="ALSASeqUserClient*"/>
          </instance-parameter>
          <parameter name="port_info"
                     direction="inout"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/seq/user-client.c"
                 line="353">A #ALSASeqPortInfo.</doc>
            <type name="PortInfo" c:type="ALSASeqPortInfo* const*"/>
          </parameter>
          <parameter name="port_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/user-client.c"
                 line="354">The numerical ID of port to create.</doc>
            <type name="guint8" c:type="guint8"/>
          </parameter>
        </parameters>
      </method>
      <method name="create_queue"
              c:identifier="alsaseq_user_client_create_queue"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/seq/user-client.c"
             line="699">Create a new queue owned by the client. The content of information is updated
if success.

The call of function executes ioctl(2) system call with
SNDRV_SEQ_IOCTL_CREATE_QUEUE command for ALSA sequencer character device.</doc>
        <source-position filename="../src/seq/user-client.h" line="115"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/user-client.c"
                 line="701">A #ALSASeqUserClient.</doc>
            <type name="UserClient" c:type="ALSASeqUserClient*"/>
          </instance-parameter>
          <parameter name="queue_info"
                     direction="inout"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/seq/user-client.c"
                 line="702">The information of queue to add.</doc>
            <type name="QueueInfo" c:type="ALSASeqQueueInfo* const*"/>
          </parameter>
        </parameters>
      </method>
      <method name="create_source"
              c:identifier="alsaseq_user_client_create_source"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/seq/user-client.c"
             line="604">Allocate GSource structure to handle events from ALSA seq character device.
In each iteration of GMainContext, the read(2) system call is exected to
dispatch sequencer event for 'handle-event' signal, according to the result
of poll(2) system call.</doc>
        <source-position filename="../src/seq/user-client.h" line="107"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/user-client.c"
                 line="606">A #ALSASeqUserClient.</doc>
            <type name="UserClient" c:type="ALSASeqUserClient*"/>
          </instance-parameter>
          <parameter name="gsrc"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/seq/user-client.c"
                 line="607">A #GSource to handle events from ALSA seq character device.</doc>
            <type name="GLib.Source" c:type="GSource**"/>
          </parameter>
        </parameters>
      </method>
      <method name="delete_port"
              c:identifier="alsaseq_user_client_delete_port"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/seq/user-client.c"
             line="414">Delete a port from the client.

The call of function executes ioctl(2) system call with
SNDRV_SEQ_IOCTL_DELETE_PORT command for ALSA sequencer character device.</doc>
        <source-position filename="../src/seq/user-client.h" line="92"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/user-client.c"
                 line="416">A #ALSASeqUserClient.</doc>
            <type name="UserClient" c:type="ALSASeqUserClient*"/>
          </instance-parameter>
          <parameter name="port_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/user-client.c"
                 line="417">The numerical ID of port.</doc>
            <type name="guint8" c:type="guint8"/>
          </parameter>
        </parameters>
      </method>
      <method name="delete_queue"
              c:identifier="alsaseq_user_client_delete_queue"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/seq/user-client.c"
             line="730">Delete the queue owned by the client.

The call of function executes ioctl(2) system call with
SNDRV_SEQ_IOCTL_DELETE_QUEUE command for ALSA sequencer character device.</doc>
        <source-position filename="../src/seq/user-client.h" line="118"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/user-client.c"
                 line="732">A #ALSASeqUserClient.</doc>
            <type name="UserClient" c:type="ALSASeqUserClient*"/>
          </instance-parameter>
          <parameter name="queue_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/user-client.c"
                 line="733">The numerical ID of queue, except for one of ALSASeqSpecificQueueId.</doc>
            <type name="guint8" c:type="guint8"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_info"
              c:identifier="alsaseq_user_client_get_info"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/seq/user-client.c"
             line="288">Set client information.

The call of function executes ioctl(2) system call with
SNDRV_SEQ_IOCTL_GET_CLIENT_INFO command for ALSA sequencer character device.</doc>
        <source-position filename="../src/seq/user-client.h" line="77"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/user-client.c"
                 line="290">A #ALSASeqUserClient.</doc>
            <type name="UserClient" c:type="ALSASeqUserClient*"/>
          </instance-parameter>
          <parameter name="client_info"
                     direction="inout"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/seq/user-client.c"
                 line="291">A #ALSASeqClientInfo.</doc>
            <type name="ClientInfo" c:type="ALSASeqClientInfo* const*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_pool"
              c:identifier="alsaseq_user_client_get_pool"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/seq/user-client.c"
             line="472">Get information of memory pool in the client.

The call of function executes ioctl(2) system call with
SNDRV_SEQ_IOCTL_GET_CLIENT_POOL command for ALSA sequencer character device.</doc>
        <source-position filename="../src/seq/user-client.h" line="99"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/user-client.c"
                 line="474">A #ALSASeqUserClient.</doc>
            <type name="UserClient" c:type="ALSASeqUserClient*"/>
          </instance-parameter>
          <parameter name="client_pool"
                     direction="inout"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/seq/user-client.c"
                 line="475">A #ALSASeqClientPool to be configured for the client.</doc>
            <type name="ClientPool" c:type="ALSASeqClientPool* const*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_protocol_version"
              c:identifier="alsaseq_user_client_get_protocol_version"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/seq/user-client.c"
             line="229">Get the version of sequencer protocol currently used. The version is
represented as the array with three elements; major, minor, and micro version
in the order. The length of major version is 16 bit, the length of minor
and micro version is 8 bit each.</doc>
        <source-position filename="../src/seq/user-client.h" line="70"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/user-client.c"
                 line="231">A #ALSASeqUserClient.</doc>
            <type name="UserClient" c:type="ALSASeqUserClient*"/>
          </instance-parameter>
          <parameter name="proto_ver_triplet"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/user-client.c"
                 line="232">The version of
                    protocol currently used.</doc>
            <array zero-terminated="0" c:type="const guint16**" fixed-size="3">
              <type name="guint16" c:type="guint16"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="get_queue_tempo"
              c:identifier="alsaseq_user_client_get_queue_tempo"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/seq/user-client.c"
             line="896">Get the data of tempo for the queue.

The call of function executes ioctl(2) system call with
SNDRV_SEQ_IOCTL_GET_QUEUE_TEMPO command for ALSA sequencer character device.</doc>
        <source-position filename="../src/seq/user-client.h" line="133"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/user-client.c"
                 line="898">A #ALSASeqUserClient.</doc>
            <type name="UserClient" c:type="ALSASeqUserClient*"/>
          </instance-parameter>
          <parameter name="queue_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/user-client.c"
                 line="899">The numerical ID of queue, except for entries in
           ALSASeqSpecificQueueId.</doc>
            <type name="guint8" c:type="guint8"/>
          </parameter>
          <parameter name="queue_tempo"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/seq/user-client.c"
                 line="901">The data of tempo for queue.</doc>
            <type name="QueueTempo" c:type="ALSASeqQueueTempo**"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_queue_timer"
              c:identifier="alsaseq_user_client_get_queue_timer"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/seq/user-client.c"
             line="979">Get the data of timer for the queue.

The call of function executes ioctl(2) system call with
SNDRV_SEQ_IOCTL_GET_QUEUE_TIMER command for ALSA sequencer character device.</doc>
        <source-position filename="../src/seq/user-client.h" line="141"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/user-client.c"
                 line="981">A #ALSASeqUserClient.</doc>
            <type name="UserClient" c:type="ALSASeqUserClient*"/>
          </instance-parameter>
          <parameter name="queue_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/user-client.c"
                 line="982">The numerical ID of queue, except for entries in
           ALSASeqSpecificQueueId.</doc>
            <type name="guint8" c:type="guint8"/>
          </parameter>
          <parameter name="queue_timer"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/seq/user-client.c"
                 line="984">The data of timer for queue.</doc>
            <type name="QueueTimer" c:type="ALSASeqQueueTimer**"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_queue_usage"
              c:identifier="alsaseq_user_client_get_queue_usage"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/seq/user-client.c"
             line="792">Get usage of the queue by the client.

The call of function executes ioctl(2) system call with
SNDRV_SEQ_IOCTL_GET_QUEUE_CLIENT command for ALSA sequencer character device.</doc>
        <source-position filename="../src/seq/user-client.h" line="123"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/user-client.c"
                 line="794">A #ALSASeqUserClient.</doc>
            <type name="UserClient" c:type="ALSASeqUserClient*"/>
          </instance-parameter>
          <parameter name="queue_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/user-client.c"
                 line="795">The numerical ID of queue, except for entries in
           ALSASeqSpecificQueueId.</doc>
            <type name="guint8" c:type="guint8"/>
          </parameter>
          <parameter name="use"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/seq/user-client.c"
                 line="797">Whether the client uses the queue or not.</doc>
            <type name="gboolean" c:type="gboolean*"/>
          </parameter>
        </parameters>
      </method>
      <method name="open" c:identifier="alsaseq_user_client_open" throws="1">
        <doc xml:space="preserve"
             filename="../src/seq/user-client.c"
             line="166">Open ALSA sequencer character device.

The call of function executes open(2) system call, then executes ioctl(2)
system call with SNDRV_SEQ_IOCTL_CLIENT_ID command for ALSA sequencer
character device.</doc>
        <source-position filename="../src/seq/user-client.h" line="67"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/user-client.c"
                 line="168">A #ALSASeqUserClient.</doc>
            <type name="UserClient" c:type="ALSASeqUserClient*"/>
          </instance-parameter>
          <parameter name="open_flag" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/user-client.c"
                 line="169">The flag of open(2) system call. O_RDWR is forced to fulfil internally.</doc>
            <type name="gint" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="operate_subscription"
              c:identifier="alsaseq_user_client_operate_subscription"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/seq/user-client.c"
             line="652">Operate subscription between two ports pointed by the data.

The call of function executes ioctl(2) system call with
SNDRV_SEQ_IOCTL_SUBSCRIBE_PORT and SNDRV_SEQ_IOCTL_UNSUBSCRIBE_PORT commands
for ALSA sequencer character device.</doc>
        <source-position filename="../src/seq/user-client.h" line="110"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/user-client.c"
                 line="654">A #ALSASeqUserClient.</doc>
            <type name="UserClient" c:type="ALSASeqUserClient*"/>
          </instance-parameter>
          <parameter name="subs_data" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/user-client.c"
                 line="655">A #ALSASeqSubscribeData.</doc>
            <type name="SubscribeData" c:type="ALSASeqSubscribeData*"/>
          </parameter>
          <parameter name="establish" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/user-client.c"
                 line="656">Whether to establish subscription between two ports, or break it.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_events"
              c:identifier="alsaseq_user_client_remove_events"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/seq/user-client.c"
             line="1028">Remove queued events according to the filter.

The call of function executes ioctl(2) system call with
SNDRV_SEQ_IOCTL_REMOVE_EVENTS command for ALSA sequencer character device.</doc>
        <source-position filename="../src/seq/user-client.h" line="146"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/user-client.c"
                 line="1030">A #ALSASeqUserClient.</doc>
            <type name="UserClient" c:type="ALSASeqUserClient*"/>
          </instance-parameter>
          <parameter name="filter" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/user-client.c"
                 line="1031">A #ALSASeqRemoveFilter.</doc>
            <type name="RemoveFilter" c:type="ALSASeqRemoveFilter*"/>
          </parameter>
        </parameters>
      </method>
      <method name="schedule_event"
              c:identifier="alsaseq_user_client_schedule_event"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/seq/user-client.c"
             line="502">Deliver the event immediately, or schedule it into memory pool of the client.

The call of function executes write(2) system call for ALSA sequencer
character device.</doc>
        <source-position filename="../src/seq/user-client.h" line="103"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/user-client.c"
                 line="504">A #ALSASeqUserClient.</doc>
            <type name="UserClient" c:type="ALSASeqUserClient*"/>
          </instance-parameter>
          <parameter name="ev_cntr" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/user-client.c"
                 line="505">An instance of #ALSASeqEventCntr pointing to events.</doc>
            <type name="EventCntr" c:type="ALSASeqEventCntr*"/>
          </parameter>
          <parameter name="count" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/user-client.c"
                 line="506">The number of events in the ev_cntr to write.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_info"
              c:identifier="alsaseq_user_client_set_info"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/seq/user-client.c"
             line="257">Get client information.

The call of function executes ioctl(2) system call with
SNDRV_SEQ_IOCTL_SET_CLIENT_INFO command for ALSA sequencer character device.</doc>
        <source-position filename="../src/seq/user-client.h" line="74"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/user-client.c"
                 line="259">A #ALSASeqUserClient.</doc>
            <type name="UserClient" c:type="ALSASeqUserClient*"/>
          </instance-parameter>
          <parameter name="client_info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/user-client.c"
                 line="260">A #ALSASeqClientInfo.</doc>
            <type name="ClientInfo" c:type="ALSASeqClientInfo*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_pool"
              c:identifier="alsaseq_user_client_set_pool"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/seq/user-client.c"
             line="442">Configure memory pool in the client.

The call of function executes ioctl(2) system call with
SNDRV_SEQ_IOCTL_SET_CLIENT_POOL command for ALSA sequencer character device.</doc>
        <source-position filename="../src/seq/user-client.h" line="95"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/user-client.c"
                 line="444">A #ALSASeqUserClient.</doc>
            <type name="UserClient" c:type="ALSASeqUserClient*"/>
          </instance-parameter>
          <parameter name="client_pool" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/user-client.c"
                 line="445">A #ALSASeqClientPool to be configured for the client.</doc>
            <type name="ClientPool" c:type="ALSASeqClientPool*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_queue_tempo"
              c:identifier="alsaseq_user_client_set_queue_tempo"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/seq/user-client.c"
             line="860">Set the data of tempo to the queue.

The call of function executes ioctl(2) system call with
SNDRV_SEQ_IOCTL_SET_QUEUE_TEMPO command for ALSA sequencer character device.</doc>
        <source-position filename="../src/seq/user-client.h" line="130"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/user-client.c"
                 line="862">A #ALSASeqUserClient.</doc>
            <type name="UserClient" c:type="ALSASeqUserClient*"/>
          </instance-parameter>
          <parameter name="queue_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/user-client.c"
                 line="863">The numerical ID of queue, except for entries in
           ALSASeqSpecificQueueId.</doc>
            <type name="guint8" c:type="guint8"/>
          </parameter>
          <parameter name="queue_tempo" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/user-client.c"
                 line="865">The data of tempo for queue.</doc>
            <type name="QueueTempo" c:type="ALSASeqQueueTempo*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_queue_timer"
              c:identifier="alsaseq_user_client_set_queue_timer"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/seq/user-client.c"
             line="932">Set the data of timer for the queue.

The call of function executes ioctl(2) system call with
SNDRV_SEQ_IOCTL_SET_QUEUE_TIMER command for ALSA sequencer character device.</doc>
        <source-position filename="../src/seq/user-client.h" line="137"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/user-client.c"
                 line="934">A #ALSASeqUserClient.</doc>
            <type name="UserClient" c:type="ALSASeqUserClient*"/>
          </instance-parameter>
          <parameter name="queue_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/user-client.c"
                 line="935">The numerical ID of queue, except for entries in
           ALSASeqSpecificQueueId.</doc>
            <type name="guint8" c:type="guint8"/>
          </parameter>
          <parameter name="queue_timer" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/user-client.c"
                 line="937">The data of timer for queue.</doc>
            <type name="QueueTimer" c:type="ALSASeqQueueTimer*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_queue_usage"
              c:identifier="alsaseq_user_client_set_queue_usage"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/seq/user-client.c"
             line="827">Start the queue to use or not.

The call of function executes ioctl(2) system call with
SNDRV_SEQ_IOCTL_SET_QUEUE_CLIENT command for ALSA sequencer character device.</doc>
        <source-position filename="../src/seq/user-client.h" line="126"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/user-client.c"
                 line="829">A #ALSASeqUserClient.</doc>
            <type name="UserClient" c:type="ALSASeqUserClient*"/>
          </instance-parameter>
          <parameter name="queue_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/user-client.c"
                 line="830">The numerical ID of queue, except for entries in
           ALSASeqSpecificQueueId.</doc>
            <type name="guint8" c:type="guint8"/>
          </parameter>
          <parameter name="use" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/user-client.c"
                 line="832">Whether to use the queue or not.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="update_port"
              c:identifier="alsaseq_user_client_update_port"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/seq/user-client.c"
             line="380">Update port information.

The call of function executes ioctl(2) system call with
SNDRV_SEQ_IOCTL_SET_PORT_INFO command for ALSA sequencer character device.</doc>
        <source-position filename="../src/seq/user-client.h" line="88"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/user-client.c"
                 line="382">A #ALSASeqUserClient.</doc>
            <type name="UserClient" c:type="ALSASeqUserClient*"/>
          </instance-parameter>
          <parameter name="port_info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/user-client.c"
                 line="383">A #ALSASeqPortInfo.</doc>
            <type name="PortInfo" c:type="ALSASeqPortInfo*"/>
          </parameter>
          <parameter name="port_id" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/user-client.c"
                 line="384">The numerical ID of port.</doc>
            <type name="guint8" c:type="guint8"/>
          </parameter>
        </parameters>
      </method>
      <method name="update_queue"
              c:identifier="alsaseq_user_client_update_queue"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/seq/user-client.c"
             line="758">Update owned queue according to the information.

The call of function executes ioctl(2) system call with
SNDRV_SEQ_IOCTL_SET_QUEUE_INFO command for ALSA sequencer character device.</doc>
        <source-position filename="../src/seq/user-client.h" line="120"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/user-client.c"
                 line="760">A #ALSASeqUserClient.</doc>
            <type name="UserClient" c:type="ALSASeqUserClient*"/>
          </instance-parameter>
          <parameter name="queue_info" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/user-client.c"
                 line="761">The information of queue to add.</doc>
            <type name="QueueInfo" c:type="ALSASeqQueueInfo*"/>
          </parameter>
        </parameters>
      </method>
      <property name="client-id" transfer-ownership="none">
        <type name="guint8" c:type="guint8"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="UserClientPrivate" c:type="ALSASeqUserClientPrivate*"/>
      </field>
      <glib:signal name="handle-event" when="last">
        <doc xml:space="preserve"
             filename="../src/seq/user-client.c"
             line="128">When event occurs, this signal is emit with the instance of object which
points to a batch of events. The instance should not be passed directly
to alsaseq_user_client_schedule_event() again because its memory
alignment is different for events with blob data.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="ev_cntr" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/seq/user-client.c"
                 line="131">The instance of ALSASeqEventCntr which
            points to the batch of events.</doc>
            <type name="EventCntr"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="UserClientClass"
            c:type="ALSASeqUserClientClass"
            glib:is-gtype-struct-for="UserClient">
      <source-position filename="../src/seq/user-client.h" line="61"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="handle_event">
        <callback name="handle_event">
          <source-position filename="../src/seq/user-client.h" line="59"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/seq/user-client.h"
                   line="50">A #ALSASeqUserClient.</doc>
              <type name="UserClient" c:type="ALSASeqUserClient*"/>
            </parameter>
            <parameter name="ev_cntr" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/seq/user-client.h"
                   line="51">The instance of ALSASeqEventCntr which
            points to the batch of events.</doc>
              <type name="EventCntr" c:type="const ALSASeqEventCntr*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <enumeration name="UserClientError"
                 glib:type-name="ALSASeqUserClientError"
                 glib:get-type="alsaseq_user_client_error_get_type"
                 c:type="ALSASeqUserClientError"
                 glib:error-domain="alsaseq-user-client-error-quark">
      <doc xml:space="preserve"
           filename="../src/seq/alsaseq-enum-types.h"
           line="363">A set of error code for GError with domain which equals to #alsaseq_user_client_error_quark()</doc>
      <member name="failed"
              value="0"
              c:identifier="ALSASEQ_USER_CLIENT_ERROR_FAILED"
              glib:nick="failed"
              glib:name="ALSASEQ_USER_CLIENT_ERROR_FAILED">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="365">The system call failed.</doc>
      </member>
      <member name="port_permission"
              value="1"
              c:identifier="ALSASEQ_USER_CLIENT_ERROR_PORT_PERMISSION"
              glib:nick="port-permission"
              glib:name="ALSASEQ_USER_CLIENT_ERROR_PORT_PERMISSION">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="366">The operation fails due to access permission of port.</doc>
      </member>
      <member name="queue_permission"
              value="2"
              c:identifier="ALSASEQ_USER_CLIENT_ERROR_QUEUE_PERMISSION"
              glib:nick="queue-permission"
              glib:name="ALSASEQ_USER_CLIENT_ERROR_QUEUE_PERMISSION">
        <doc xml:space="preserve"
             filename="../src/seq/alsaseq-enum-types.h"
             line="367">The operation fails due to access permission of queue.</doc>
      </member>
      <function name="quark" c:identifier="alsaseq_user_client_error_quark">
        <doc xml:space="preserve"
             filename="../src/seq/user-client.c"
             line="35">Return the GQuark for error domain of GError which has code in #ALSASeqUserClientError enumerations.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/seq/user-client.c"
               line="40">A #GQuark.</doc>
          <type name="GLib.Quark" c:type="GQuark"/>
        </return-value>
      </function>
    </enumeration>
    <record name="UserClientPrivate"
            c:type="ALSASeqUserClientPrivate"
            disguised="1">
      <source-position filename="../src/seq/user-client.h" line="37"/>
    </record>
    <docsection name="addr">
      <doc xml:space="preserve"
           filename="../src/seq/addr.c"
           line="4">A #ALSASeqAddr is a boxed object to represent address in ALSA Sequencer. The
address consists of two parts; the numerical ID of client and port.

The object wraps 'struct snd_seq_addr' in UAPI of Linux sound subsystem.</doc>
    </docsection>
    <docsection name="client-info">
      <doc xml:space="preserve"
           filename="../src/seq/client-info.c"
           line="7">A #ALSASeqClientInfo is a GObject-derived object to represent information of
client. The call of alsaseq_get_client_info() returns the instance of object.
The call of alsaseq_user_client_set_info() and alsaseq_user_client_get_info()
require the instance of object.

The object wraps 'struct snd_seq_client_info' in UAPI of Linux sound subsystem.</doc>
    </docsection>
    <docsection name="client-pool">
      <doc xml:space="preserve"
           filename="../src/seq/client-pool.c"
           line="4">A #ALSASeqClientPool is a GObject-derived object to represent information of
pool owned by client. The pool consists of a batch of cells to store message
contents in kernel space. The call of alsaseq_get_client_pool() returns the
instance of object. The call of alsaseq_user_client_set_pool() and
alsaseq_user_client_get_pool() require the instance of object.

The object wraps 'struct snd_seq_client_pool' in UAPI of Linux sound subsystem.</doc>
    </docsection>
    <docsection name="event-cntr">
      <doc xml:space="preserve"
           filename="../src/seq/event-cntr.c"
           line="6">A #ALSASeqEventCntr is a GObject-derived object to represent container for
a batch of events. The instance of object has accessor methods to properties
and data for each events expanded to the flat memory space. The object is
designed for applications to maintain collections of event by the convenient
way which each programming language produces.

This is the list of properties for event:
- the type of event
- the mode of time stamp
- the mode of time
- the mode of length
- the mode of priority
- associated tag
- the numerical ID of associated queue
- time stamp
- destination address
- source address

This is the list of data for event. These data shared the same storage and
an event can have the sole type of data:
- note
- control
- 12 bytes
- 3 quadlets
- blob as variable length of bytes
- queue control
- arbitrary time stamp
- arbitrary address
- connection with source and destination addresses
- result

The data shares the same storage in event. An event can have the sole type
of data. The type of data is not associated to the type of event directly.</doc>
    </docsection>
    <docsection name="event-data-connect">
      <doc xml:space="preserve"
           filename="../src/seq/event-data-connect.c"
           line="4">A #ALSASeqEventDataConnect is a boxed object to represent data of connect
event. The instance of object is one of data properties in event.

The object wraps 'struct snd_seq_connect' in UAPI of Linux sound subsystem.</doc>
    </docsection>
    <docsection name="event-data-ctl">
      <doc xml:space="preserve"
           filename="../src/seq/event-data-ctl.c"
           line="4">A #ALSASeqEventDataCtl is a boxed object to represent data of control
event. The instance of object is one of data properties in event.

The object wraps 'struct snd_seq_ev_ctrl' in UAPI of Linux sound subsystem.</doc>
    </docsection>
    <docsection name="event-data-note">
      <doc xml:space="preserve"
           filename="../src/seq/event-data-note.c"
           line="4">A #ALSASeqEventDataNote is a boxed object to represent data of note event.
The instance of object is one of data properties in event.

The object wraps 'struct snd_seq_ev_note' in UAPI of Linux sound subsystem.</doc>
    </docsection>
    <docsection name="event-data-queue">
      <doc xml:space="preserve"
           filename="../src/seq/event-data-queue.c"
           line="4">A #ALSASeqEventDataQueue is a boxed object to represent data of queue event.
The instance of object is one of data properties in event.

The object wraps 'struct snd_seq_ev_queue_control' in UAPI of Linux sound
subsystem.</doc>
    </docsection>
    <docsection name="event-data-result">
      <doc xml:space="preserve"
           filename="../src/seq/event-data-result.c"
           line="4">A #ALSASeqEventDataResult is a boxed object to represent data of result
event. The instance of object is one of data properties in event.

The object wraps 'struct snd_seq_result' in UAPI of Linux sound subsystem.</doc>
    </docsection>
    <function name="get_client_id_list"
              c:identifier="alsaseq_get_client_id_list"
              throws="1">
      <doc xml:space="preserve"
           filename="../src/seq/query.c"
           line="177">Get the list of clients as the numerical ID.

The call of function executes open(2), close(2), and ioctl(2) system calls
with SNDRV_SEQ_IOCTL_CLIENT_ID, SNDRV_SEQ_IOCTL_SYSTEM_INFO, and
SNDRV_SEQ_IOCTL_QUERY_NEXT_CLIENT command for ALSA sequencer character
device.</doc>
      <source-position filename="../src/seq/query.h" line="15"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="entries"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/seq/query.c"
               line="179">The array with elements for
          numerical ID of client. One of ALSASeqSpecificClientId can be
          included in result as well as any numerical value.</doc>
          <array length="1" zero-terminated="0" c:type="guint8**">
            <type name="guint8" c:type="guint8*"/>
          </array>
        </parameter>
        <parameter name="entry_count"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/seq/query.c"
               line="182">The number of entries.</doc>
          <type name="gsize" c:type="gsize*"/>
        </parameter>
      </parameters>
    </function>
    <function name="get_client_info"
              c:identifier="alsaseq_get_client_info"
              throws="1">
      <doc xml:space="preserve"
           filename="../src/seq/query.c"
           line="259">Get the information of client according to the numerical ID.

The call of function executes open(2), close(2), and ioctl(2) system calls
with SNDRV_SEQ_IOCTL_GET_CLIENT_INFO command for ALSA sequencer character
device.</doc>
      <source-position filename="../src/seq/query.h" line="18"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="client_id" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/seq/query.c"
               line="261">The numerical ID of client to query. One of
            ALSASeqSpecificClientId is available as well as any numerical
            value.</doc>
          <type name="guint8" c:type="guint8"/>
        </parameter>
        <parameter name="client_info"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/seq/query.c"
               line="264">A #ALSASeqClientInfo for the client.</doc>
          <type name="ClientInfo" c:type="ALSASeqClientInfo**"/>
        </parameter>
      </parameters>
    </function>
    <function name="get_client_pool"
              c:identifier="alsaseq_get_client_pool"
              throws="1">
      <doc xml:space="preserve"
           filename="../src/seq/query.c"
           line="415">Get statistical information of memory pool for the given client.

The call of function executes open(2), close(2), and ioctl(2) system calls
with SNDRV_SEQ_IOCTL_GET_CLIENT_POOL command for ALSA sequencer character
device.</doc>
      <source-position filename="../src/seq/query.h" line="27"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="client_id" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/seq/query.c"
               line="417">The numerical ID of client to query. One of
            ALSASeqSpecificClientId is available as well as any numerical
            value.</doc>
          <type name="guint8" c:type="guint8"/>
        </parameter>
        <parameter name="client_pool"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/seq/query.c"
               line="420">The information of memory pool for the client.</doc>
          <type name="ClientPool" c:type="ALSASeqClientPool**"/>
        </parameter>
      </parameters>
    </function>
    <function name="get_port_id_list"
              c:identifier="alsaseq_get_port_id_list"
              throws="1">
      <doc xml:space="preserve"
           filename="../src/seq/query.c"
           line="299">Get the list of numerical IDs for port added by the client.

The call of function executes open(2), close(2), and ioctl(2) system calls
with SNDRV_SEQ_IOCTL_GET_CLIENT_INFO and SNDRV_SEQ_IOCTL_QUERY_NEXT_PORT
commands for ALSA sequencer character device.</doc>
      <source-position filename="../src/seq/query.h" line="21"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="client_id" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/seq/query.c"
               line="301">The numerical ID of client to query. One of
            ALSASeqSpecificClientId is available as well as any numerical
            value.</doc>
          <type name="guint8" c:type="guint8"/>
        </parameter>
        <parameter name="entries"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/seq/query.c"
               line="304">The array with elements for
          numerical ID of port. One of ALSASeqSpecificPortId is available as
          well as any numerical value.</doc>
          <array length="2" zero-terminated="0" c:type="guint8**">
            <type name="guint8" c:type="guint8*"/>
          </array>
        </parameter>
        <parameter name="entry_count"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/seq/query.c"
               line="307">The number of entries in the array.</doc>
          <type name="gsize" c:type="gsize*"/>
        </parameter>
      </parameters>
    </function>
    <function name="get_port_info"
              c:identifier="alsaseq_get_port_info"
              throws="1">
      <doc xml:space="preserve"
           filename="../src/seq/query.c"
           line="372">Get the information of port in client.

The call of function executes open(2), close(2), and ioctl(2) system calls
with SNDRV_SEQ_IOCTL_GET_PORT_INFO command for ALSA sequencer character
device.</doc>
      <source-position filename="../src/seq/query.h" line="24"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="client_id" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/seq/query.c"
               line="374">The numerical ID of client to query. One of
            ALSASeqSpecificClientId is available as well as any numerica
            value.</doc>
          <type name="guint8" c:type="guint8"/>
        </parameter>
        <parameter name="port_id" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/seq/query.c"
               line="377">The numerical ID of port in the client. One of
          ALSASeqSpecificPortId is available as well as any numerical value.</doc>
          <type name="guint8" c:type="guint8"/>
        </parameter>
        <parameter name="port_info"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/seq/query.c"
               line="379">A #ALSASeqPortInfo for the port.</doc>
          <type name="PortInfo" c:type="ALSASeqPortInfo**"/>
        </parameter>
      </parameters>
    </function>
    <function name="get_queue_id_list"
              c:identifier="alsaseq_get_queue_id_list"
              throws="1">
      <doc xml:space="preserve"
           filename="../src/seq/query.c"
           line="537">Get the list of queue in ALSA Sequencer.

The call of function executes open(2), close(2), and ioctl(2) system calls
with SNDRV_SEQ_IOCTL_SYSTEM_INFO and SNDRV_SEQ_IOCTL_GET_QUEUE_INFO commands
for ALSA sequencer character device.</doc>
      <source-position filename="../src/seq/query.h" line="34"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="entries"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/seq/query.c"
               line="539">The array of elements for
          numerical ID of queue.</doc>
          <array length="1" zero-terminated="0" c:type="guint8**">
            <type name="guint8" c:type="guint8*"/>
          </array>
        </parameter>
        <parameter name="entry_count"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/seq/query.c"
               line="541">The number of entries.</doc>
          <type name="gsize" c:type="gsize*"/>
        </parameter>
      </parameters>
    </function>
    <function name="get_queue_info_by_id"
              c:identifier="alsaseq_get_queue_info_by_id"
              throws="1">
      <doc xml:space="preserve"
           filename="../src/seq/query.c"
           line="602">Get the information of queue, according to the numerical ID.

The call of function executes open(2), close(2), and ioctl(2) system calls
with SNDRV_SEQ_IOCTL_GET_QUEUE_INFO command for ALSA sequencer character
device.</doc>
      <source-position filename="../src/seq/query.h" line="37"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="queue_id" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/seq/query.c"
               line="604">The numerical ID of queue, except for one of
           ALSASeqSpecificQueueId.</doc>
          <type name="guint8" c:type="guint8"/>
        </parameter>
        <parameter name="queue_info"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/seq/query.c"
               line="606">The information of queue.</doc>
          <type name="QueueInfo" c:type="ALSASeqQueueInfo**"/>
        </parameter>
      </parameters>
    </function>
    <function name="get_queue_info_by_name"
              c:identifier="alsaseq_get_queue_info_by_name"
              throws="1">
      <doc xml:space="preserve"
           filename="../src/seq/query.c"
           line="640">Get the information of queue, according to the name string.

The call of function executes open(2), close(2), and ioctl(2) system calls
with SNDRV_SEQ_IOCTL_GET_NAMED_QUEUE command for ALSA sequencer character
device.</doc>
      <source-position filename="../src/seq/query.h" line="39"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="name" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/seq/query.c"
               line="642">The name string of queue to query.</doc>
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="queue_info"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/seq/query.c"
               line="643">The information of queue.</doc>
          <type name="QueueInfo" c:type="ALSASeqQueueInfo**"/>
        </parameter>
      </parameters>
    </function>
    <function name="get_queue_status"
              c:identifier="alsaseq_get_queue_status"
              throws="1">
      <doc xml:space="preserve"
           filename="../src/seq/query.c"
           line="678">Get current status of queue.

The call of function executes open(2), close(2), and ioctl(2) system calls
with SNDRV_SEQ_IOCTL_GET_QUEUE_STATUS command for ALSA sequencer character
device.</doc>
      <source-position filename="../src/seq/query.h" line="43"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="queue_id" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/seq/query.c"
               line="680">The numerical ID of queue, except for entries in
           ALSASeqSpecificQueueId.</doc>
          <type name="guint8" c:type="guint8"/>
        </parameter>
        <parameter name="queue_status"
                   direction="inout"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/seq/query.c"
               line="682">The current status of queue.</doc>
          <type name="QueueStatus" c:type="ALSASeqQueueStatus* const*"/>
        </parameter>
      </parameters>
    </function>
    <function name="get_seq_devnode"
              c:identifier="alsaseq_get_seq_devnode"
              throws="1">
      <doc xml:space="preserve"
           filename="../src/seq/query.c"
           line="74">Allocate devnode string for ALSA Sequencer and return it when exists.

Nodes under sound subsystem in sysfs are used to gather the information.</doc>
      <source-position filename="../src/seq/query.h" line="11"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="devnode"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/seq/query.c"
               line="76">The devnode of ALSA Sequencer.</doc>
          <type name="utf8" c:type="gchar**"/>
        </parameter>
      </parameters>
    </function>
    <function name="get_seq_sysname"
              c:identifier="alsaseq_get_seq_sysname"
              throws="1">
      <doc xml:space="preserve"
           filename="../src/seq/query.c"
           line="29">Allocate sysname string for ALSA sequencer and return it when exists.

Nodes under sound subsystem in sysfs are used to gather the information.</doc>
      <source-position filename="../src/seq/query.h" line="9"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="sysname"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/seq/query.c"
               line="31">The sysname of ALSA Sequencer.</doc>
          <type name="utf8" c:type="gchar**"/>
        </parameter>
      </parameters>
    </function>
    <function name="get_subscription_list"
              c:identifier="alsaseq_get_subscription_list"
              throws="1">
      <doc xml:space="preserve"
           filename="../src/seq/query.c"
           line="468">Get the list of subscription for given address and query type.

The call of function executes open(2), close(2), and ioctl(2) system calls
with SNDRV_SEQ_IOCTL_QUERY_SUBS command for ALSA sequencer character device.</doc>
      <source-position filename="../src/seq/query.h" line="30"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="addr" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/seq/query.c"
               line="470">A #ALSASeqAddr to query.</doc>
          <type name="Addr" c:type="const ALSASeqAddr*"/>
        </parameter>
        <parameter name="query_type" transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/seq/query.c"
               line="471">The type of query, one of #ALSASeqQuerySubscribeType.</doc>
          <type name="QuerySubscribeType" c:type="ALSASeqQuerySubscribeType"/>
        </parameter>
        <parameter name="entries"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/seq/query.c"
               line="472">The array with element
          for subscription data.</doc>
          <type name="GLib.List" c:type="GList**">
            <type name="SubscribeData"/>
          </type>
        </parameter>
      </parameters>
    </function>
    <function name="get_system_info"
              c:identifier="alsaseq_get_system_info"
              throws="1">
      <doc xml:space="preserve"
           filename="../src/seq/query.c"
           line="139">Get information of ALSA Sequencer.

The call of function executes open(2), close(2), and ioctl(2) system calls
with SNDRV_SEQ_IOCTL_SYSTEM_INFO command for ALSA sequencer character device.</doc>
      <source-position filename="../src/seq/query.h" line="13"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="system_info"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/seq/query.c"
               line="141">The information of ALSA Sequencer.</doc>
          <type name="SystemInfo" c:type="ALSASeqSystemInfo**"/>
        </parameter>
      </parameters>
    </function>
    <docsection name="port-info">
      <doc xml:space="preserve"
           filename="../src/seq/port-info.c"
           line="4">A #ALSASeqPortInfo is a GObject-derived object to represent information of
port. The call of alsaseq_get_port_info() returns the instance of object.
The call of alsaseq_user_client_create_port() and
alsaseq_user_client_update_port() requires the instance of object.

The object wraps 'struct snd_port_info' in UAPI of Linux sound subsystem.</doc>
    </docsection>
    <docsection name="queue-info">
      <doc xml:space="preserve"
           filename="../src/seq/queue-info.c"
           line="4">A #ALSASeqQueueInfo is a GObject-derived object to represent information of
queue. The call of alsaseq_get_queue_info_by_id() and
alsaseq_get_queue_info_by_name() returns the instance of object. The call of
alsaseq_user_client_create_queue() and alsaseq_user_client_update_queue()
requires the instance of object.

The object wraps 'struct snd_seq_queue_info' in UAPI of Linux sound subsystem.</doc>
    </docsection>
    <docsection name="queue-status">
      <doc xml:space="preserve"
           filename="../src/seq/queue-status.c"
           line="4">A #ALSASeqQueueStatus is a GObject-derived object to represent status of
queue. The call of alsaseq_get_queue_status() returns the instance of object.

The object wraps 'struct snd_seq_queue_status' in UAPI of Linux sound
subsystem.</doc>
    </docsection>
    <docsection name="queue-tempo">
      <doc xml:space="preserve"
           filename="../src/seq/queue-tempo.c"
           line="4">A #ALSASeqQueueTempo is a GObject-derived object to represent tempo of queue.
The call of alsaseq_get_queue_status() returns the instance of object.

The object wraps 'struct snd_seq_queue_tempo' in UAPI of Linux sound subsystem.</doc>
    </docsection>
    <docsection name="queue-timer">
      <doc xml:space="preserve"
           filename="../src/seq/queue-timer.c"
           line="4">A #ALSASeqQueueTimer is a GObject-derived object to represent the information
of timer which drives the queue.

The object wraps 'struct snd_seq_queue_timer' in UAPI of Linux sound subsystem.</doc>
    </docsection>
    <docsection name="queue-timer-data-alsa">
      <doc xml:space="preserve"
           filename="../src/seq/queue-timer-data-alsa.c"
           line="4">A #ALSASeqQueueTimerDataAlsa is a boxed object to represent data of queue
timer in the case of ALSATimer. The instance of object is one of data
properties in queue timer.</doc>
    </docsection>
    <docsection name="remove-filter">
      <doc xml:space="preserve"
           filename="../src/seq/remove-filter.c"
           line="6">A #ALSASeqRemoveFilter is a boxed object to represent filter to remove
scheduled event in queue. The call of alsaseq_user_client_remove_events()
requires the instance of object. In the object, data shares the same storage,
thus it's not possible to use several purposes.

The object wraps 'struct snd_seq_remove_events' in UAPI of Linux sound
subsystem.</doc>
    </docsection>
    <docsection name="subscribe-data">
      <doc xml:space="preserve"
           filename="../src/seq/subscribe-data.c"
           line="4">A #ALSASeqSubscribeData is a GObject-derived object to represent data for
subscription between a pair of ports. The call of
alsaseq_get_subscription_list() returns the list of data. The call of
alsaseq_user_client_operate_subscription() requires the instance of object.

The object wraps 'struct snd_seq_port_subscribe' in UAPI of Linux sound
subsystem.</doc>
    </docsection>
    <docsection name="system-info">
      <doc xml:space="preserve"
           filename="../src/seq/system-info.c"
           line="4">A #ALSASeqSystemInfo is a GObject-derived object to represent information of
ALSA Sequencer. The call of alsaseq_get_system_info() returns the instance of
object.

The object wraps 'struct snd_seq_system_info' in UAPI of Linux sound subsystem.</doc>
    </docsection>
    <docsection name="tstamp">
      <doc xml:space="preserve"
           filename="../src/seq/tstamp.c"
           line="4">A #ALSASeqTstamp is a boxed object to represent timestamp. The object shares
storage for two types of time; tick time and real time.

The object wraps 'struct snd_seq_timestamp' in UAPI of Linux sound subsystem.</doc>
    </docsection>
    <docsection name="user-client">
      <doc xml:space="preserve"
           filename="../src/seq/user-client.c"
           line="11">A #ALSASeqUserClient is a GObject-derived object to represent user client.
Any port can be added to the client as destination or source for any event.

When the call of alsaseq_user_client_open(), the object maintain file
descriptor till object destruction. The call of
alsaseq_user_client_create_source() returns the instance of GSource. Once
attached to the GSource, GMainContext/GMainLoop is available as event
dispatcher. The #handle-event GObject signal is emitted in the event
dispatcher to notify the event. The call of
alsaseq_user_client_schedule_event() schedules event with given parameters.</doc>
    </docsection>
    <function name="user_client_error_quark"
              c:identifier="alsaseq_user_client_error_quark"
              moved-to="UserClientError.quark">
      <doc xml:space="preserve"
           filename="../src/seq/user-client.c"
           line="35">Return the GQuark for error domain of GError which has code in #ALSASeqUserClientError enumerations.</doc>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/seq/user-client.c"
             line="40">A #GQuark.</doc>
        <type name="GLib.Quark" c:type="GQuark"/>
      </return-value>
    </function>
  </namespace>
</repository>
